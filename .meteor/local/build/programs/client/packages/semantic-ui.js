//////////////////////////////////////////////////////////////////////////
//                                                                      //
// This is a generated file. You can view the original                  //
// source in your browser if your browser supports source maps.         //
//                                                                      //
// If you are using Chrome, open the Developer Tools and click the gear //
// icon in its lower right corner. In the General Settings panel, turn  //
// on 'Enable source maps'.                                             //
//                                                                      //
// If you are using Firefox 23, go to `about:config` and set the        //
// `devtools.debugger.source-maps-enabled` preference to true.          //
// (The preference should be on by default in Firefox 24; versions      //
// older than 23 do not support source maps.)                           //
//                                                                      //
//////////////////////////////////////////////////////////////////////////


(function () {

/* Imports */
var Meteor = Package.meteor.Meteor;
var $ = Package.jquery.$;
var jQuery = Package.jquery.jQuery;

(function () {

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// packages/semantic-ui/lib/semantic-ui/build/uncompressed/modules/accordion.js                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/*                                                                                                                     // 1
 * # Semantic - Accordion                                                                                              // 2
 * http://github.com/jlukic/semantic-ui/                                                                               // 3
 *                                                                                                                     // 4
 *                                                                                                                     // 5
 * Copyright 2013 Contributors                                                                                         // 6
 * Released under the MIT license                                                                                      // 7
 * http://opensource.org/licenses/MIT                                                                                  // 8
 *                                                                                                                     // 9
 */                                                                                                                    // 10
                                                                                                                       // 11
;(function ($, window, document, undefined) {                                                                          // 12
                                                                                                                       // 13
$.fn.accordion = function(parameters) {                                                                                // 14
  var                                                                                                                  // 15
    $allModules     = $(this),                                                                                         // 16
                                                                                                                       // 17
    time            = new Date().getTime(),                                                                            // 18
    performance     = [],                                                                                              // 19
                                                                                                                       // 20
    query           = arguments[0],                                                                                    // 21
    methodInvoked   = (typeof query == 'string'),                                                                      // 22
    queryArguments  = [].slice.call(arguments, 1),                                                                     // 23
    returnedValue                                                                                                      // 24
  ;                                                                                                                    // 25
  $allModules                                                                                                          // 26
    .each(function() {                                                                                                 // 27
      var                                                                                                              // 28
        settings        = ( $.isPlainObject(parameters) )                                                              // 29
          ? $.extend(true, {}, $.fn.accordion.settings, parameters)                                                    // 30
          : $.extend({}, $.fn.accordion.settings),                                                                     // 31
                                                                                                                       // 32
        className       = settings.className,                                                                          // 33
        namespace       = settings.namespace,                                                                          // 34
        selector        = settings.selector,                                                                           // 35
        error           = settings.error,                                                                              // 36
                                                                                                                       // 37
        eventNamespace  = '.' + namespace,                                                                             // 38
        moduleNamespace = 'module-' + namespace,                                                                       // 39
        moduleSelector  = $allModules.selector || '',                                                                  // 40
                                                                                                                       // 41
        $module  = $(this),                                                                                            // 42
        $title   = $module.find(selector.title),                                                                       // 43
        $content = $module.find(selector.content),                                                                     // 44
                                                                                                                       // 45
        element  = this,                                                                                               // 46
        instance = $module.data(moduleNamespace),                                                                      // 47
        module                                                                                                         // 48
      ;                                                                                                                // 49
                                                                                                                       // 50
      module = {                                                                                                       // 51
                                                                                                                       // 52
        initialize: function() {                                                                                       // 53
          module.debug('Initializing accordion with bound events', $module);                                           // 54
          // initializing                                                                                              // 55
          $title                                                                                                       // 56
            .on('click' + eventNamespace, module.event.click)                                                          // 57
          ;                                                                                                            // 58
          module.instantiate();                                                                                        // 59
        },                                                                                                             // 60
                                                                                                                       // 61
        instantiate: function() {                                                                                      // 62
          instance = module;                                                                                           // 63
          $module                                                                                                      // 64
            .data(moduleNamespace, module)                                                                             // 65
          ;                                                                                                            // 66
        },                                                                                                             // 67
                                                                                                                       // 68
        destroy: function() {                                                                                          // 69
          module.debug('Destroying previous accordion for', $module);                                                  // 70
          $module                                                                                                      // 71
            .removeData(moduleNamespace)                                                                               // 72
          ;                                                                                                            // 73
          $title                                                                                                       // 74
            .off(eventNamespace)                                                                                       // 75
          ;                                                                                                            // 76
        },                                                                                                             // 77
                                                                                                                       // 78
        event: {                                                                                                       // 79
          click: function() {                                                                                          // 80
            module.verbose('Title clicked', this);                                                                     // 81
            var                                                                                                        // 82
              $activeTitle = $(this),                                                                                  // 83
              index        = $title.index($activeTitle)                                                                // 84
            ;                                                                                                          // 85
            module.toggle(index);                                                                                      // 86
          },                                                                                                           // 87
          resetStyle: function() {                                                                                     // 88
            module.verbose('Resetting styles on element', this);                                                       // 89
            $(this)                                                                                                    // 90
              .attr('style', '')                                                                                       // 91
              .removeAttr('style')                                                                                     // 92
              .children()                                                                                              // 93
                .attr('style', '')                                                                                     // 94
                .removeAttr('style')                                                                                   // 95
            ;                                                                                                          // 96
          }                                                                                                            // 97
        },                                                                                                             // 98
                                                                                                                       // 99
        toggle: function(index) {                                                                                      // 100
          module.debug('Toggling content content at index', index);                                                    // 101
          var                                                                                                          // 102
            $activeTitle   = $title.eq(index),                                                                         // 103
            $activeContent = $activeTitle.next($content),                                                              // 104
            contentIsOpen  = $activeContent.is(':visible')                                                             // 105
          ;                                                                                                            // 106
          if(contentIsOpen) {                                                                                          // 107
            if(settings.collapsible) {                                                                                 // 108
              module.close(index);                                                                                     // 109
            }                                                                                                          // 110
            else {                                                                                                     // 111
              module.debug('Cannot close accordion content collapsing is disabled');                                   // 112
            }                                                                                                          // 113
          }                                                                                                            // 114
          else {                                                                                                       // 115
            module.open(index);                                                                                        // 116
          }                                                                                                            // 117
        },                                                                                                             // 118
                                                                                                                       // 119
        open: function(index) {                                                                                        // 120
          var                                                                                                          // 121
            $activeTitle     = $title.eq(index),                                                                       // 122
            $activeContent   = $activeTitle.next($content),                                                            // 123
            $previousTitle   = $activeTitle.siblings(selector.title).filter('.' + className.active),                   // 124
            $previousContent = $previousTitle.next($title),                                                            // 125
            contentIsOpen    =  ($previousTitle.size() > 0)                                                            // 126
          ;                                                                                                            // 127
          if( !$activeContent.is(':animated') ) {                                                                      // 128
            module.debug('Opening accordion content', $activeTitle);                                                   // 129
            if(settings.exclusive && contentIsOpen) {                                                                  // 130
              $previousTitle                                                                                           // 131
                .removeClass(className.active)                                                                         // 132
              ;                                                                                                        // 133
              $previousContent                                                                                         // 134
                .stop()                                                                                                // 135
                .children()                                                                                            // 136
                  .animate({                                                                                           // 137
                    opacity: 0                                                                                         // 138
                  }, settings.duration, module.event.resetStyle)                                                       // 139
                  .end()                                                                                               // 140
                .slideUp(settings.duration , settings.easing, function() {                                             // 141
                  $previousContent                                                                                     // 142
                    .removeClass(className.active)                                                                     // 143
                    .attr('style', '')                                                                                 // 144
                    .removeAttr('style')                                                                               // 145
                    .children()                                                                                        // 146
                      .attr('style', '')                                                                               // 147
                      .removeAttr('style')                                                                             // 148
                  ;                                                                                                    // 149
                })                                                                                                     // 150
              ;                                                                                                        // 151
            }                                                                                                          // 152
            $activeTitle                                                                                               // 153
              .addClass(className.active)                                                                              // 154
            ;                                                                                                          // 155
            $activeContent                                                                                             // 156
              .stop()                                                                                                  // 157
              .children()                                                                                              // 158
                .attr('style', '')                                                                                     // 159
                .removeAttr('style')                                                                                   // 160
                .end()                                                                                                 // 161
              .slideDown(settings.duration, settings.easing, function() {                                              // 162
                $activeContent                                                                                         // 163
                  .addClass(className.active)                                                                          // 164
                  .attr('style', '')                                                                                   // 165
                  .removeAttr('style')                                                                                 // 166
                ;                                                                                                      // 167
                $.proxy(settings.onOpen, $activeContent)();                                                            // 168
                $.proxy(settings.onChange, $activeContent)();                                                          // 169
              })                                                                                                       // 170
            ;                                                                                                          // 171
          }                                                                                                            // 172
        },                                                                                                             // 173
                                                                                                                       // 174
        close: function(index) {                                                                                       // 175
          var                                                                                                          // 176
            $activeTitle   = $title.eq(index),                                                                         // 177
            $activeContent = $activeTitle.next($content)                                                               // 178
          ;                                                                                                            // 179
          module.debug('Closing accordion content', $activeContent);                                                   // 180
          $activeTitle                                                                                                 // 181
            .removeClass(className.active)                                                                             // 182
          ;                                                                                                            // 183
          $activeContent                                                                                               // 184
            .removeClass(className.active)                                                                             // 185
            .show()                                                                                                    // 186
            .stop()                                                                                                    // 187
            .children()                                                                                                // 188
              .animate({                                                                                               // 189
                opacity: 0                                                                                             // 190
              }, settings.duration, module.event.resetStyle)                                                           // 191
              .end()                                                                                                   // 192
            .slideUp(settings.duration, settings.easing, function(){                                                   // 193
              $activeContent                                                                                           // 194
                .attr('style', '')                                                                                     // 195
                .removeAttr('style')                                                                                   // 196
              ;                                                                                                        // 197
              $.proxy(settings.onClose, $activeContent)();                                                             // 198
              $.proxy(settings.onChange, $activeContent)();                                                            // 199
            })                                                                                                         // 200
          ;                                                                                                            // 201
        },                                                                                                             // 202
                                                                                                                       // 203
        setting: function(name, value) {                                                                               // 204
          if( $.isPlainObject(name) ) {                                                                                // 205
            $.extend(true, settings, name);                                                                            // 206
          }                                                                                                            // 207
          else if(value !== undefined) {                                                                               // 208
            settings[name] = value;                                                                                    // 209
          }                                                                                                            // 210
          else {                                                                                                       // 211
            return settings[name];                                                                                     // 212
          }                                                                                                            // 213
        },                                                                                                             // 214
        internal: function(name, value) {                                                                              // 215
          module.debug('Changing internal', name, value);                                                              // 216
          if(value !== undefined) {                                                                                    // 217
            if( $.isPlainObject(name) ) {                                                                              // 218
              $.extend(true, module, name);                                                                            // 219
            }                                                                                                          // 220
            else {                                                                                                     // 221
              module[name] = value;                                                                                    // 222
            }                                                                                                          // 223
          }                                                                                                            // 224
          else {                                                                                                       // 225
            return module[name];                                                                                       // 226
          }                                                                                                            // 227
        },                                                                                                             // 228
        debug: function() {                                                                                            // 229
          if(settings.debug) {                                                                                         // 230
            if(settings.performance) {                                                                                 // 231
              module.performance.log(arguments);                                                                       // 232
            }                                                                                                          // 233
            else {                                                                                                     // 234
              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');                 // 235
              module.debug.apply(console, arguments);                                                                  // 236
            }                                                                                                          // 237
          }                                                                                                            // 238
        },                                                                                                             // 239
        verbose: function() {                                                                                          // 240
          if(settings.verbose && settings.debug) {                                                                     // 241
            if(settings.performance) {                                                                                 // 242
              module.performance.log(arguments);                                                                       // 243
            }                                                                                                          // 244
            else {                                                                                                     // 245
              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');               // 246
              module.verbose.apply(console, arguments);                                                                // 247
            }                                                                                                          // 248
          }                                                                                                            // 249
        },                                                                                                             // 250
        error: function() {                                                                                            // 251
          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');                    // 252
          module.error.apply(console, arguments);                                                                      // 253
        },                                                                                                             // 254
        performance: {                                                                                                 // 255
          log: function(message) {                                                                                     // 256
            var                                                                                                        // 257
              currentTime,                                                                                             // 258
              executionTime,                                                                                           // 259
              previousTime                                                                                             // 260
            ;                                                                                                          // 261
            if(settings.performance) {                                                                                 // 262
              currentTime   = new Date().getTime();                                                                    // 263
              previousTime  = time || currentTime;                                                                     // 264
              executionTime = currentTime - previousTime;                                                              // 265
              time          = currentTime;                                                                             // 266
              performance.push({                                                                                       // 267
                'Element'        : element,                                                                            // 268
                'Name'           : message[0],                                                                         // 269
                'Arguments'      : [].slice.call(message, 1) || '',                                                    // 270
                'Execution Time' : executionTime                                                                       // 271
              });                                                                                                      // 272
            }                                                                                                          // 273
            clearTimeout(module.performance.timer);                                                                    // 274
            module.performance.timer = setTimeout(module.performance.display, 100);                                    // 275
          },                                                                                                           // 276
          display: function() {                                                                                        // 277
            var                                                                                                        // 278
              title = settings.name + ':',                                                                             // 279
              totalTime = 0                                                                                            // 280
            ;                                                                                                          // 281
            time = false;                                                                                              // 282
            clearTimeout(module.performance.timer);                                                                    // 283
            $.each(performance, function(index, data) {                                                                // 284
              totalTime += data['Execution Time'];                                                                     // 285
            });                                                                                                        // 286
            title += ' ' + totalTime + 'ms';                                                                           // 287
            if(moduleSelector) {                                                                                       // 288
              title += ' \'' + moduleSelector + '\'';                                                                  // 289
            }                                                                                                          // 290
            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {              // 291
              console.groupCollapsed(title);                                                                           // 292
              if(console.table) {                                                                                      // 293
                console.table(performance);                                                                            // 294
              }                                                                                                        // 295
              else {                                                                                                   // 296
                $.each(performance, function(index, data) {                                                            // 297
                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');                                      // 298
                });                                                                                                    // 299
              }                                                                                                        // 300
              console.groupEnd();                                                                                      // 301
            }                                                                                                          // 302
            performance = [];                                                                                          // 303
          }                                                                                                            // 304
        },                                                                                                             // 305
        invoke: function(query, passedArguments, context) {                                                            // 306
          var                                                                                                          // 307
            maxDepth,                                                                                                  // 308
            found,                                                                                                     // 309
            response                                                                                                   // 310
          ;                                                                                                            // 311
          passedArguments = passedArguments || queryArguments;                                                         // 312
          context         = element         || context;                                                                // 313
          if(typeof query == 'string' && instance !== undefined) {                                                     // 314
            query    = query.split(/[\. ]/);                                                                           // 315
            maxDepth = query.length - 1;                                                                               // 316
            $.each(query, function(depth, value) {                                                                     // 317
              var camelCaseValue = (depth != maxDepth)                                                                 // 318
                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)                         // 319
                : query                                                                                                // 320
              ;                                                                                                        // 321
              if( $.isPlainObject( instance[camelCaseValue] ) && (depth != maxDepth) ) {                               // 322
                instance = instance[camelCaseValue];                                                                   // 323
              }                                                                                                        // 324
              else if( instance[camelCaseValue] !== undefined ) {                                                      // 325
                found = instance[camelCaseValue];                                                                      // 326
                return false;                                                                                          // 327
              }                                                                                                        // 328
              else if( $.isPlainObject( instance[value] ) && (depth != maxDepth) ) {                                   // 329
                instance = instance[value];                                                                            // 330
              }                                                                                                        // 331
              else if( instance[value] !== undefined ) {                                                               // 332
                found = instance[value];                                                                               // 333
                return false;                                                                                          // 334
              }                                                                                                        // 335
              else {                                                                                                   // 336
                module.error(error.method, query);                                                                     // 337
                return false;                                                                                          // 338
              }                                                                                                        // 339
            });                                                                                                        // 340
          }                                                                                                            // 341
          if ( $.isFunction( found ) ) {                                                                               // 342
            response = found.apply(context, passedArguments);                                                          // 343
          }                                                                                                            // 344
          else if(found !== undefined) {                                                                               // 345
            response = found;                                                                                          // 346
          }                                                                                                            // 347
          if($.isArray(returnedValue)) {                                                                               // 348
            returnedValue.push(response);                                                                              // 349
          }                                                                                                            // 350
          else if(returnedValue !== undefined) {                                                                       // 351
            returnedValue = [returnedValue, response];                                                                 // 352
          }                                                                                                            // 353
          else if(response !== undefined) {                                                                            // 354
            returnedValue = response;                                                                                  // 355
          }                                                                                                            // 356
          return found;                                                                                                // 357
        }                                                                                                              // 358
      };                                                                                                               // 359
      if(methodInvoked) {                                                                                              // 360
        if(instance === undefined) {                                                                                   // 361
          module.initialize();                                                                                         // 362
        }                                                                                                              // 363
        module.invoke(query);                                                                                          // 364
      }                                                                                                                // 365
      else {                                                                                                           // 366
        if(instance !== undefined) {                                                                                   // 367
          module.destroy();                                                                                            // 368
        }                                                                                                              // 369
        module.initialize();                                                                                           // 370
      }                                                                                                                // 371
    })                                                                                                                 // 372
  ;                                                                                                                    // 373
  return (returnedValue !== undefined)                                                                                 // 374
    ? returnedValue                                                                                                    // 375
    : this                                                                                                             // 376
  ;                                                                                                                    // 377
};                                                                                                                     // 378
                                                                                                                       // 379
$.fn.accordion.settings = {                                                                                            // 380
  name        : 'Accordion',                                                                                           // 381
  namespace   : 'accordion',                                                                                           // 382
                                                                                                                       // 383
  debug       : true,                                                                                                  // 384
  verbose     : true,                                                                                                  // 385
  performance : true,                                                                                                  // 386
                                                                                                                       // 387
  exclusive   : true,                                                                                                  // 388
  collapsible : true,                                                                                                  // 389
                                                                                                                       // 390
  duration    : 500,                                                                                                   // 391
  easing      : 'easeInOutQuint',                                                                                      // 392
                                                                                                                       // 393
  onOpen      : function(){},                                                                                          // 394
  onClose     : function(){},                                                                                          // 395
  onChange    : function(){},                                                                                          // 396
                                                                                                                       // 397
  error: {                                                                                                             // 398
    method    : 'The method you called is not defined'                                                                 // 399
  },                                                                                                                   // 400
                                                                                                                       // 401
  className   : {                                                                                                      // 402
    active : 'active'                                                                                                  // 403
  },                                                                                                                   // 404
                                                                                                                       // 405
  selector    : {                                                                                                      // 406
    title   : '.title',                                                                                                // 407
    content : '.content'                                                                                               // 408
  }                                                                                                                    // 409
                                                                                                                       // 410
                                                                                                                       // 411
};                                                                                                                     // 412
                                                                                                                       // 413
// Adds easing                                                                                                         // 414
$.extend( $.easing, {                                                                                                  // 415
  easeInOutQuint: function (x, t, b, c, d) {                                                                           // 416
    if ((t/=d/2) < 1) return c/2*t*t*t*t*t + b;                                                                        // 417
    return c/2*((t-=2)*t*t*t*t + 2) + b;                                                                               // 418
  }                                                                                                                    // 419
});                                                                                                                    // 420
                                                                                                                       // 421
})( jQuery, window , document );                                                                                       // 422
                                                                                                                       // 423
                                                                                                                       // 424
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}).call(this);






(function () {

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// packages/semantic-ui/lib/semantic-ui/build/uncompressed/modules/behavior/api.js                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/*                                                                                                                     // 1
 * # Semantic - API                                                                                                    // 2
 * http://github.com/jlukic/semantic-ui/                                                                               // 3
 *                                                                                                                     // 4
 *                                                                                                                     // 5
 * Copyright 2013 Contributors                                                                                         // 6
 * Released under the MIT license                                                                                      // 7
 * http://opensource.org/licenses/MIT                                                                                  // 8
 *                                                                                                                     // 9
 */                                                                                                                    // 10
                                                                                                                       // 11
;(function ( $, window, document, undefined ) {                                                                        // 12
                                                                                                                       // 13
  $.api = $.fn.api = function(parameters) {                                                                            // 14
                                                                                                                       // 15
    var                                                                                                                // 16
      settings       = $.extend(true, {}, $.api.settings, parameters),                                                 // 17
                                                                                                                       // 18
      // if this keyword isn't a jQuery object, create one                                                             // 19
      context        = (typeof this != 'function')                                                                     // 20
        ? this                                                                                                         // 21
        : $('<div/>'),                                                                                                 // 22
      // context defines the element used for loading/error state                                                      // 23
      $context       = (settings.stateContext)                                                                         // 24
        ? $(settings.stateContext)                                                                                     // 25
        : $(context),                                                                                                  // 26
      // module is the thing that initiates the api action, can be independent of context                              // 27
      $module = typeof this == 'object'                                                                                // 28
        ? $(context)                                                                                                   // 29
        : $context,                                                                                                    // 30
                                                                                                                       // 31
      element         = this,                                                                                          // 32
      time            = new Date().getTime(),                                                                          // 33
      performance     = [],                                                                                            // 34
                                                                                                                       // 35
      moduleSelector  = $module.selector || '',                                                                        // 36
      moduleNamespace = settings.namespace + '-module',                                                                // 37
                                                                                                                       // 38
      className       = settings.className,                                                                            // 39
      metadata        = settings.metadata,                                                                             // 40
      error           = settings.error,                                                                                // 41
                                                                                                                       // 42
      instance        = $module.data(moduleNamespace),                                                                 // 43
                                                                                                                       // 44
      query           = arguments[0],                                                                                  // 45
      methodInvoked   = (instance !== undefined && typeof query == 'string'),                                          // 46
      queryArguments  = [].slice.call(arguments, 1),                                                                   // 47
                                                                                                                       // 48
      module,                                                                                                          // 49
      returnedValue                                                                                                    // 50
    ;                                                                                                                  // 51
                                                                                                                       // 52
    module = {                                                                                                         // 53
      initialize: function() {                                                                                         // 54
        var                                                                                                            // 55
          runSettings,                                                                                                 // 56
                                                                                                                       // 57
          loadingTimer   = new Date().getTime(),                                                                       // 58
          loadingDelay,                                                                                                // 59
                                                                                                                       // 60
          promise,                                                                                                     // 61
          url,                                                                                                         // 62
                                                                                                                       // 63
          formData       = {},                                                                                         // 64
          data,                                                                                                        // 65
                                                                                                                       // 66
          ajaxSettings   = {},                                                                                         // 67
          xhr                                                                                                          // 68
        ;                                                                                                              // 69
                                                                                                                       // 70
        // serialize parent form if requested!                                                                         // 71
        if(settings.serializeForm && $(this).toJSON() !== undefined) {                                                 // 72
          formData = module.get.formData();                                                                            // 73
          module.debug('Adding form data to API Request', formData);                                                   // 74
          $.extend(true, settings.data, formData);                                                                     // 75
        }                                                                                                              // 76
                                                                                                                       // 77
        // let beforeSend change settings object                                                                       // 78
        runSettings = $.proxy(settings.beforeSend, $module)(settings);                                                 // 79
                                                                                                                       // 80
        // check for exit conditions                                                                                   // 81
        if(runSettings !== undefined && !runSettings) {                                                                // 82
          module.error(error.beforeSend);                                                                              // 83
          module.reset();                                                                                              // 84
          return;                                                                                                      // 85
        }                                                                                                              // 86
                                                                                                                       // 87
        // get real url from template                                                                                  // 88
        url = module.get.url( module.get.templateURL() );                                                              // 89
                                                                                                                       // 90
        // exit conditions reached from missing url parameters                                                         // 91
        if( !url ) {                                                                                                   // 92
          module.error(error.missingURL);                                                                              // 93
          module.reset();                                                                                              // 94
          return;                                                                                                      // 95
        }                                                                                                              // 96
                                                                                                                       // 97
        // promise handles notification on api request, so loading min. delay can occur for all notifications          // 98
        promise =                                                                                                      // 99
          $.Deferred()                                                                                                 // 100
            .always(function() {                                                                                       // 101
              if(settings.stateContext) {                                                                              // 102
                $context                                                                                               // 103
                  .removeClass(className.loading)                                                                      // 104
                ;                                                                                                      // 105
              }                                                                                                        // 106
              $.proxy(settings.complete, $module)();                                                                   // 107
            })                                                                                                         // 108
            .done(function(response) {                                                                                 // 109
              module.debug('API request successful');                                                                  // 110
              // take a stab at finding success state if json                                                          // 111
              if(settings.dataType == 'json') {                                                                        // 112
                if (response.error !== undefined) {                                                                    // 113
                  $.proxy(settings.failure, $context)(response.error, settings, $module);                              // 114
                }                                                                                                      // 115
                else if ($.isArray(response.errors)) {                                                                 // 116
                  $.proxy(settings.failure, $context)(response.errors[0], settings, $module);                          // 117
                }                                                                                                      // 118
                else {                                                                                                 // 119
                  $.proxy(settings.success, $context)(response, settings, $module);                                    // 120
                }                                                                                                      // 121
              }                                                                                                        // 122
              // otherwise                                                                                             // 123
              else {                                                                                                   // 124
                $.proxy(settings.success, $context)(response, settings, $module);                                      // 125
              }                                                                                                        // 126
            })                                                                                                         // 127
            .fail(function(xhr, status, httpMessage) {                                                                 // 128
              var                                                                                                      // 129
                errorMessage = (settings.error[status] !== undefined)                                                  // 130
                  ? settings.error[status]                                                                             // 131
                  : httpMessage,                                                                                       // 132
                response                                                                                               // 133
              ;                                                                                                        // 134
              // let em know unless request aborted                                                                    // 135
              if(xhr !== undefined) {                                                                                  // 136
                // readyState 4 = done, anything less is not really sent                                               // 137
                if(xhr.readyState !== undefined && xhr.readyState == 4) {                                              // 138
                                                                                                                       // 139
                  // if http status code returned and json returned error, look for it                                 // 140
                  if( xhr.status != 200 && httpMessage !== undefined && httpMessage !== '') {                          // 141
                    module.error(error.statusMessage + httpMessage);                                                   // 142
                  }                                                                                                    // 143
                  else {                                                                                               // 144
                    if(status == 'error' && settings.dataType == 'json') {                                             // 145
                      try {                                                                                            // 146
                        response = $.parseJSON(xhr.responseText);                                                      // 147
                        if(response && response.error !== undefined) {                                                 // 148
                          errorMessage = response.error;                                                               // 149
                        }                                                                                              // 150
                      }                                                                                                // 151
                      catch(error) {                                                                                   // 152
                        module.error(error.JSONParse);                                                                 // 153
                      }                                                                                                // 154
                    }                                                                                                  // 155
                  }                                                                                                    // 156
                  $context                                                                                             // 157
                    .removeClass(className.loading)                                                                    // 158
                    .addClass(className.error)                                                                         // 159
                  ;                                                                                                    // 160
                  // show error state only for duration specified in settings                                          // 161
                  if(settings.errorLength > 0) {                                                                       // 162
                    setTimeout(function(){                                                                             // 163
                      $context                                                                                         // 164
                        .removeClass(className.error)                                                                  // 165
                      ;                                                                                                // 166
                    }, settings.errorLength);                                                                          // 167
                  }                                                                                                    // 168
                  module.debug('API Request error:', errorMessage);                                                    // 169
                  $.proxy(settings.failure, $context)(errorMessage, settings, this);                                   // 170
                }                                                                                                      // 171
                else {                                                                                                 // 172
                  module.debug('Request Aborted (Most likely caused by page change)');                                 // 173
                }                                                                                                      // 174
              }                                                                                                        // 175
            })                                                                                                         // 176
        ;                                                                                                              // 177
                                                                                                                       // 178
        // look for params in data                                                                                     // 179
        $.extend(true, ajaxSettings, settings, {                                                                       // 180
          success    : function(){},                                                                                   // 181
          failure    : function(){},                                                                                   // 182
          complete   : function(){},                                                                                   // 183
          type       : settings.method || settings.type,                                                               // 184
          data       : data,                                                                                           // 185
          url        : url,                                                                                            // 186
          beforeSend : settings.beforeXHR                                                                              // 187
        });                                                                                                            // 188
                                                                                                                       // 189
        if(settings.stateContext) {                                                                                    // 190
          $context                                                                                                     // 191
            .addClass(className.loading)                                                                               // 192
          ;                                                                                                            // 193
        }                                                                                                              // 194
                                                                                                                       // 195
        if(settings.progress) {                                                                                        // 196
          module.verbose('Adding progress events');                                                                    // 197
          $.extend(true, ajaxSettings, {                                                                               // 198
            xhr: function() {                                                                                          // 199
              var                                                                                                      // 200
                xhr = new window.XMLHttpRequest()                                                                      // 201
              ;                                                                                                        // 202
              xhr.upload.addEventListener('progress', function(event) {                                                // 203
                var                                                                                                    // 204
                  percentComplete                                                                                      // 205
                ;                                                                                                      // 206
                if (event.lengthComputable) {                                                                          // 207
                  percentComplete = Math.round(event.loaded / event.total * 10000) / 100 + '%';                        // 208
                  $.proxy(settings.progress, $context)(percentComplete, event);                                        // 209
                }                                                                                                      // 210
              }, false);                                                                                               // 211
              xhr.addEventListener('progress', function(event) {                                                       // 212
                var                                                                                                    // 213
                  percentComplete                                                                                      // 214
                ;                                                                                                      // 215
                if (event.lengthComputable) {                                                                          // 216
                  percentComplete = Math.round(event.loaded / event.total * 10000) / 100 + '%';                        // 217
                  $.proxy(settings.progress, $context)(percentComplete, event);                                        // 218
                }                                                                                                      // 219
              }, false);                                                                                               // 220
              return xhr;                                                                                              // 221
            }                                                                                                          // 222
          });                                                                                                          // 223
        }                                                                                                              // 224
                                                                                                                       // 225
        module.verbose('Creating AJAX request with settings: ', ajaxSettings);                                         // 226
        xhr =                                                                                                          // 227
          $.ajax(ajaxSettings)                                                                                         // 228
            .always(function() {                                                                                       // 229
              // calculate if loading time was below minimum threshold                                                 // 230
              loadingDelay = ( settings.loadingLength - (new Date().getTime() - loadingTimer) );                       // 231
              settings.loadingDelay = loadingDelay < 0                                                                 // 232
                ? 0                                                                                                    // 233
                : loadingDelay                                                                                         // 234
              ;                                                                                                        // 235
            })                                                                                                         // 236
            .done(function(response) {                                                                                 // 237
              var                                                                                                      // 238
                context = this                                                                                         // 239
              ;                                                                                                        // 240
              setTimeout(function(){                                                                                   // 241
                promise.resolveWith(context, [response]);                                                              // 242
              }, settings.loadingDelay);                                                                               // 243
            })                                                                                                         // 244
            .fail(function(xhr, status, httpMessage) {                                                                 // 245
              var                                                                                                      // 246
                context = this                                                                                         // 247
              ;                                                                                                        // 248
              // page triggers abort on navigation, dont show error                                                    // 249
              if(status != 'abort') {                                                                                  // 250
                setTimeout(function(){                                                                                 // 251
                  promise.rejectWith(context, [xhr, status, httpMessage]);                                             // 252
                }, settings.loadingDelay);                                                                             // 253
              }                                                                                                        // 254
              else {                                                                                                   // 255
                $context                                                                                               // 256
                  .removeClass(className.error)                                                                        // 257
                  .removeClass(className.loading)                                                                      // 258
                ;                                                                                                      // 259
              }                                                                                                        // 260
            })                                                                                                         // 261
        ;                                                                                                              // 262
        if(settings.stateContext) {                                                                                    // 263
          $module                                                                                                      // 264
            .data(metadata.promise, promise)                                                                           // 265
            .data(metadata.xhr, xhr)                                                                                   // 266
          ;                                                                                                            // 267
        }                                                                                                              // 268
      },                                                                                                               // 269
                                                                                                                       // 270
      get: {                                                                                                           // 271
        formData: function() {                                                                                         // 272
          return $module                                                                                               // 273
            .closest('form')                                                                                           // 274
              .toJSON()                                                                                                // 275
          ;                                                                                                            // 276
        },                                                                                                             // 277
        templateURL: function() {                                                                                      // 278
          var                                                                                                          // 279
            action = $module.data(settings.metadata.action) || settings.action || false,                               // 280
            url                                                                                                        // 281
          ;                                                                                                            // 282
          if(action) {                                                                                                 // 283
            module.debug('Creating url for: ', action);                                                                // 284
            if(settings.api[action] !== undefined) {                                                                   // 285
              url = settings.api[action];                                                                              // 286
            }                                                                                                          // 287
            else {                                                                                                     // 288
              module.error(error.missingAction);                                                                       // 289
            }                                                                                                          // 290
          }                                                                                                            // 291
          // override with url if specified                                                                            // 292
          if(settings.url) {                                                                                           // 293
            url = settings.url;                                                                                        // 294
            module.debug('Getting url', url);                                                                          // 295
          }                                                                                                            // 296
          return url;                                                                                                  // 297
        },                                                                                                             // 298
        url: function(url, urlData) {                                                                                  // 299
          var                                                                                                          // 300
            urlVariables                                                                                               // 301
          ;                                                                                                            // 302
          if(url) {                                                                                                    // 303
            urlVariables = url.match(settings.regExpTemplate);                                                         // 304
            urlData      = urlData || settings.urlData;                                                                // 305
                                                                                                                       // 306
            if(urlVariables) {                                                                                         // 307
              module.debug('Looking for URL variables', urlVariables);                                                 // 308
              $.each(urlVariables, function(index, templateValue){                                                     // 309
                var                                                                                                    // 310
                  term      = templateValue.substr( 2, templateValue.length - 3),                                      // 311
                  termValue = ($.isPlainObject(urlData) && urlData[term] !== undefined)                                // 312
                    ? urlData[term]                                                                                    // 313
                    : ($module.data(term) !== undefined)                                                               // 314
                      ? $module.data(term)                                                                             // 315
                      : urlData[term]                                                                                  // 316
                ;                                                                                                      // 317
                module.verbose('Looking for variable', term, $module, $module.data(term), urlData[term]);              // 318
                // remove optional value                                                                               // 319
                if(termValue === false) {                                                                              // 320
                  module.debug('Removing variable from URL', urlVariables);                                            // 321
                  url = url.replace('/' + templateValue, '');                                                          // 322
                }                                                                                                      // 323
                // undefined condition                                                                                 // 324
                else if(termValue === undefined || !termValue) {                                                       // 325
                  module.error(error.missingParameter + term);                                                         // 326
                  url = false;                                                                                         // 327
                  return false;                                                                                        // 328
                }                                                                                                      // 329
                else {                                                                                                 // 330
                  url = url.replace(templateValue, termValue);                                                         // 331
                }                                                                                                      // 332
              });                                                                                                      // 333
            }                                                                                                          // 334
          }                                                                                                            // 335
          return url;                                                                                                  // 336
        }                                                                                                              // 337
      },                                                                                                               // 338
                                                                                                                       // 339
      // reset api request                                                                                             // 340
      reset: function() {                                                                                              // 341
        $module                                                                                                        // 342
          .data(metadata.promise, false)                                                                               // 343
          .data(metadata.xhr, false)                                                                                   // 344
        ;                                                                                                              // 345
        $context                                                                                                       // 346
          .removeClass(className.error)                                                                                // 347
          .removeClass(className.loading)                                                                              // 348
        ;                                                                                                              // 349
      },                                                                                                               // 350
                                                                                                                       // 351
      setting: function(name, value) {                                                                                 // 352
        if( $.isPlainObject(name) ) {                                                                                  // 353
          $.extend(true, settings, name);                                                                              // 354
        }                                                                                                              // 355
        else if(value !== undefined) {                                                                                 // 356
          settings[name] = value;                                                                                      // 357
        }                                                                                                              // 358
        else {                                                                                                         // 359
          return settings[name];                                                                                       // 360
        }                                                                                                              // 361
      },                                                                                                               // 362
      internal: function(name, value) {                                                                                // 363
        if( $.isPlainObject(name) ) {                                                                                  // 364
          $.extend(true, module, name);                                                                                // 365
        }                                                                                                              // 366
        else if(value !== undefined) {                                                                                 // 367
          module[name] = value;                                                                                        // 368
        }                                                                                                              // 369
        else {                                                                                                         // 370
          return module[name];                                                                                         // 371
        }                                                                                                              // 372
      },                                                                                                               // 373
      debug: function() {                                                                                              // 374
        if(settings.debug) {                                                                                           // 375
          if(settings.performance) {                                                                                   // 376
            module.performance.log(arguments);                                                                         // 377
          }                                                                                                            // 378
          else {                                                                                                       // 379
            module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');                   // 380
            module.debug.apply(console, arguments);                                                                    // 381
          }                                                                                                            // 382
        }                                                                                                              // 383
      },                                                                                                               // 384
      verbose: function() {                                                                                            // 385
        if(settings.verbose && settings.debug) {                                                                       // 386
          if(settings.performance) {                                                                                   // 387
            module.performance.log(arguments);                                                                         // 388
          }                                                                                                            // 389
          else {                                                                                                       // 390
            module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');                 // 391
            module.verbose.apply(console, arguments);                                                                  // 392
          }                                                                                                            // 393
        }                                                                                                              // 394
      },                                                                                                               // 395
      error: function() {                                                                                              // 396
        module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');                      // 397
        module.error.apply(console, arguments);                                                                        // 398
      },                                                                                                               // 399
      performance: {                                                                                                   // 400
        log: function(message) {                                                                                       // 401
          var                                                                                                          // 402
            currentTime,                                                                                               // 403
            executionTime,                                                                                             // 404
            previousTime                                                                                               // 405
          ;                                                                                                            // 406
          if(settings.performance) {                                                                                   // 407
            currentTime   = new Date().getTime();                                                                      // 408
            previousTime  = time || currentTime;                                                                       // 409
            executionTime = currentTime - previousTime;                                                                // 410
            time          = currentTime;                                                                               // 411
            performance.push({                                                                                         // 412
              'Element'        : element,                                                                              // 413
              'Name'           : message[0],                                                                           // 414
              'Arguments'      : [].slice.call(message, 1) || '',                                                      // 415
              'Execution Time' : executionTime                                                                         // 416
            });                                                                                                        // 417
          }                                                                                                            // 418
          clearTimeout(module.performance.timer);                                                                      // 419
          module.performance.timer = setTimeout(module.performance.display, 100);                                      // 420
        },                                                                                                             // 421
        display: function() {                                                                                          // 422
          var                                                                                                          // 423
            title = settings.name + ':',                                                                               // 424
            totalTime = 0                                                                                              // 425
          ;                                                                                                            // 426
          time = false;                                                                                                // 427
          clearTimeout(module.performance.timer);                                                                      // 428
          $.each(performance, function(index, data) {                                                                  // 429
            totalTime += data['Execution Time'];                                                                       // 430
          });                                                                                                          // 431
          title += ' ' + totalTime + 'ms';                                                                             // 432
          if(moduleSelector) {                                                                                         // 433
            title += ' \'' + moduleSelector + '\'';                                                                    // 434
          }                                                                                                            // 435
          if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {                // 436
            console.groupCollapsed(title);                                                                             // 437
            if(console.table) {                                                                                        // 438
              console.table(performance);                                                                              // 439
            }                                                                                                          // 440
            else {                                                                                                     // 441
              $.each(performance, function(index, data) {                                                              // 442
                console.log(data['Name'] + ': ' + data['Execution Time']+'ms');                                        // 443
              });                                                                                                      // 444
            }                                                                                                          // 445
            console.groupEnd();                                                                                        // 446
          }                                                                                                            // 447
          performance = [];                                                                                            // 448
        }                                                                                                              // 449
      },                                                                                                               // 450
      invoke: function(query, passedArguments, context) {                                                              // 451
        var                                                                                                            // 452
          maxDepth,                                                                                                    // 453
          found,                                                                                                       // 454
          response                                                                                                     // 455
        ;                                                                                                              // 456
        passedArguments = passedArguments || queryArguments;                                                           // 457
        context         = element         || context;                                                                  // 458
        if(typeof query == 'string' && instance !== undefined) {                                                       // 459
          query    = query.split(/[\. ]/);                                                                             // 460
          maxDepth = query.length - 1;                                                                                 // 461
          $.each(query, function(depth, value) {                                                                       // 462
            var camelCaseValue = (depth != maxDepth)                                                                   // 463
              ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)                           // 464
              : query                                                                                                  // 465
            ;                                                                                                          // 466
            if( $.isPlainObject( instance[value] ) && (depth != maxDepth) ) {                                          // 467
              instance = instance[value];                                                                              // 468
            }                                                                                                          // 469
            else if( $.isPlainObject( instance[camelCaseValue] ) && (depth != maxDepth) ) {                            // 470
              instance = instance[camelCaseValue];                                                                     // 471
            }                                                                                                          // 472
            else if( instance[value] !== undefined ) {                                                                 // 473
              found = instance[value];                                                                                 // 474
              return false;                                                                                            // 475
            }                                                                                                          // 476
            else if( instance[camelCaseValue] !== undefined ) {                                                        // 477
              found = instance[camelCaseValue];                                                                        // 478
              return false;                                                                                            // 479
            }                                                                                                          // 480
            else {                                                                                                     // 481
              module.error(error.method, query);                                                                       // 482
              return false;                                                                                            // 483
            }                                                                                                          // 484
          });                                                                                                          // 485
        }                                                                                                              // 486
        if ( $.isFunction( found ) ) {                                                                                 // 487
          response = found.apply(context, passedArguments);                                                            // 488
        }                                                                                                              // 489
        else if(found !== undefined) {                                                                                 // 490
          response = found;                                                                                            // 491
        }                                                                                                              // 492
        if($.isArray(returnedValue)) {                                                                                 // 493
          returnedValue.push(response);                                                                                // 494
        }                                                                                                              // 495
        else if(returnedValue !== undefined) {                                                                         // 496
          returnedValue = [returnedValue, response];                                                                   // 497
        }                                                                                                              // 498
        else if(response !== undefined) {                                                                              // 499
          returnedValue = response;                                                                                    // 500
        }                                                                                                              // 501
        return found;                                                                                                  // 502
      }                                                                                                                // 503
    };                                                                                                                 // 504
                                                                                                                       // 505
    if(methodInvoked) {                                                                                                // 506
      if(instance === undefined) {                                                                                     // 507
        module.initialize();                                                                                           // 508
      }                                                                                                                // 509
      module.invoke(query);                                                                                            // 510
    }                                                                                                                  // 511
    else {                                                                                                             // 512
      if(instance !== undefined) {                                                                                     // 513
        module.destroy();                                                                                              // 514
      }                                                                                                                // 515
      module.initialize();                                                                                             // 516
    }                                                                                                                  // 517
                                                                                                                       // 518
    return (returnedValue !== undefined)                                                                               // 519
      ? returnedValue                                                                                                  // 520
      : this                                                                                                           // 521
    ;                                                                                                                  // 522
  };                                                                                                                   // 523
                                                                                                                       // 524
  // handle DOM attachment to API functionality                                                                        // 525
  $.fn.apiButton = function(parameters) {                                                                              // 526
    $(this)                                                                                                            // 527
      .each(function(){                                                                                                // 528
        var                                                                                                            // 529
          // if only function passed it is success callback                                                            // 530
          $module  = $(this),                                                                                          // 531
          selector = $(this).selector || '',                                                                           // 532
                                                                                                                       // 533
          settings = ( $.isFunction(parameters) )                                                                      // 534
            ? $.extend(true, {}, $.api.settings, $.fn.apiButton.settings, { stateContext: this, success: parameters }) // 535
            : $.extend(true, {}, $.api.settings, $.fn.apiButton.settings, { stateContext: this}, parameters),          // 536
          module                                                                                                       // 537
        ;                                                                                                              // 538
        module = {                                                                                                     // 539
          initialize: function() {                                                                                     // 540
            if(settings.context && selector !== '') {                                                                  // 541
              $(settings.context)                                                                                      // 542
                .on(selector, 'click.' + settings.namespace, module.click)                                             // 543
              ;                                                                                                        // 544
            }                                                                                                          // 545
            else {                                                                                                     // 546
              $module                                                                                                  // 547
                .on('click.' + settings.namespace, module.click)                                                       // 548
              ;                                                                                                        // 549
            }                                                                                                          // 550
          },                                                                                                           // 551
          click: function() {                                                                                          // 552
            if(!settings.filter || $(this).filter(settings.filter).size() === 0) {                                     // 553
              $.proxy( $.api, this )(settings);                                                                        // 554
            }                                                                                                          // 555
          }                                                                                                            // 556
        };                                                                                                             // 557
        module.initialize();                                                                                           // 558
      })                                                                                                               // 559
    ;                                                                                                                  // 560
    return this;                                                                                                       // 561
  };                                                                                                                   // 562
                                                                                                                       // 563
  $.api.settings = {                                                                                                   // 564
                                                                                                                       // 565
    name        : 'API',                                                                                               // 566
    namespace   : 'api',                                                                                               // 567
                                                                                                                       // 568
    debug       : true,                                                                                                // 569
    verbose     : true,                                                                                                // 570
    performance : true,                                                                                                // 571
                                                                                                                       // 572
    api         : {},                                                                                                  // 573
                                                                                                                       // 574
    beforeSend  : function(settings) {                                                                                 // 575
      return settings;                                                                                                 // 576
    },                                                                                                                 // 577
    beforeXHR   : function(xhr) {},                                                                                    // 578
    success     : function(response) {},                                                                               // 579
    complete    : function(response) {},                                                                               // 580
    failure     : function(errorCode) {},                                                                              // 581
    progress    : false,                                                                                               // 582
                                                                                                                       // 583
    error : {                                                                                                          // 584
      missingAction    : 'API action used but no url was defined',                                                     // 585
      missingURL       : 'URL not specified for the API action',                                                       // 586
      missingParameter : 'Missing an essential URL parameter: ',                                                       // 587
                                                                                                                       // 588
      timeout          : 'Your request timed out',                                                                     // 589
      error            : 'There was an error with your request',                                                       // 590
      parseError       : 'There was an error parsing your request',                                                    // 591
      JSONParse        : 'JSON could not be parsed during error handling',                                             // 592
      statusMessage    : 'Server gave an error: ',                                                                     // 593
      beforeSend       : 'The before send function has aborted the request',                                           // 594
      exitConditions   : 'API Request Aborted. Exit conditions met'                                                    // 595
    },                                                                                                                 // 596
                                                                                                                       // 597
    className: {                                                                                                       // 598
      loading : 'loading',                                                                                             // 599
      error   : 'error'                                                                                                // 600
    },                                                                                                                 // 601
                                                                                                                       // 602
    metadata: {                                                                                                        // 603
      action  : 'action',                                                                                              // 604
      promise : 'promise',                                                                                             // 605
      xhr     : 'xhr'                                                                                                  // 606
    },                                                                                                                 // 607
                                                                                                                       // 608
    regExpTemplate: /\{\$([A-z]+)\}/g,                                                                                 // 609
                                                                                                                       // 610
    action        : false,                                                                                             // 611
    url           : false,                                                                                             // 612
    urlData       : false,                                                                                             // 613
    serializeForm : false,                                                                                             // 614
                                                                                                                       // 615
    stateContext  : false,                                                                                             // 616
                                                                                                                       // 617
    method        : 'get',                                                                                             // 618
    data          : {},                                                                                                // 619
    dataType      : 'json',                                                                                            // 620
    cache         : true,                                                                                              // 621
                                                                                                                       // 622
    loadingLength : 200,                                                                                               // 623
    errorLength   : 2000                                                                                               // 624
                                                                                                                       // 625
  };                                                                                                                   // 626
                                                                                                                       // 627
  $.fn.apiButton.settings = {                                                                                          // 628
    filter       : '.disabled, .loading',                                                                              // 629
    context      : false,                                                                                              // 630
    stateContext : false                                                                                               // 631
  };                                                                                                                   // 632
                                                                                                                       // 633
})( jQuery, window , document );                                                                                       // 634
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}).call(this);






(function () {

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// packages/semantic-ui/lib/semantic-ui/build/uncompressed/modules/behavior/colorize.js                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/*                                                                                                                     // 1
 * # Semantic - Colorize                                                                                               // 2
 * http://github.com/jlukic/semantic-ui/                                                                               // 3
 *                                                                                                                     // 4
 *                                                                                                                     // 5
 * Copyright 2013 Contributors                                                                                         // 6
 * Released under the MIT license                                                                                      // 7
 * http://opensource.org/licenses/MIT                                                                                  // 8
 *                                                                                                                     // 9
 */                                                                                                                    // 10
                                                                                                                       // 11
;(function ( $, window, document, undefined ) {                                                                        // 12
                                                                                                                       // 13
  $.fn.colorize = function(parameters) {                                                                               // 14
    var                                                                                                                // 15
      settings        = $.extend(true, {}, $.fn.colorize.settings, parameters),                                        // 16
      // hoist arguments                                                                                               // 17
      moduleArguments = arguments || false                                                                             // 18
    ;                                                                                                                  // 19
    $(this)                                                                                                            // 20
      .each(function(instanceIndex) {                                                                                  // 21
                                                                                                                       // 22
        var                                                                                                            // 23
          $module         = $(this),                                                                                   // 24
                                                                                                                       // 25
          mainCanvas      = $('<canvas />')[0],                                                                        // 26
          imageCanvas     = $('<canvas />')[0],                                                                        // 27
          overlayCanvas   = $('<canvas />')[0],                                                                        // 28
                                                                                                                       // 29
          backgroundImage = new Image(),                                                                               // 30
                                                                                                                       // 31
          // defs                                                                                                      // 32
          mainContext,                                                                                                 // 33
          imageContext,                                                                                                // 34
          overlayContext,                                                                                              // 35
                                                                                                                       // 36
          image,                                                                                                       // 37
          imageName,                                                                                                   // 38
                                                                                                                       // 39
          width,                                                                                                       // 40
          height,                                                                                                      // 41
                                                                                                                       // 42
          // shortucts                                                                                                 // 43
          colors    = settings.colors,                                                                                 // 44
          paths     = settings.paths,                                                                                  // 45
          namespace = settings.namespace,                                                                              // 46
          error     = settings.error,                                                                                  // 47
                                                                                                                       // 48
          // boilerplate                                                                                               // 49
          instance   = $module.data('module-' + namespace),                                                            // 50
          module                                                                                                       // 51
        ;                                                                                                              // 52
                                                                                                                       // 53
        module = {                                                                                                     // 54
                                                                                                                       // 55
          checkPreconditions: function() {                                                                             // 56
            module.debug('Checking pre-conditions');                                                                   // 57
                                                                                                                       // 58
            if( !$.isPlainObject(colors) || $.isEmptyObject(colors) ) {                                                // 59
              module.error(error.undefinedColors);                                                                     // 60
              return false;                                                                                            // 61
            }                                                                                                          // 62
            return true;                                                                                               // 63
          },                                                                                                           // 64
                                                                                                                       // 65
          async: function(callback) {                                                                                  // 66
            if(settings.async) {                                                                                       // 67
              setTimeout(callback, 0);                                                                                 // 68
            }                                                                                                          // 69
            else {                                                                                                     // 70
              callback();                                                                                              // 71
            }                                                                                                          // 72
          },                                                                                                           // 73
                                                                                                                       // 74
          getMetadata: function() {                                                                                    // 75
            module.debug('Grabbing metadata');                                                                         // 76
            image     = $module.data('image') || settings.image || undefined;                                          // 77
            imageName = $module.data('name')  || settings.name  || instanceIndex;                                      // 78
            width     = settings.width        || $module.width();                                                      // 79
            height    = settings.height       || $module.height();                                                     // 80
            if(width === 0 || height === 0) {                                                                          // 81
              module.error(error.undefinedSize);                                                                       // 82
            }                                                                                                          // 83
          },                                                                                                           // 84
                                                                                                                       // 85
          initialize: function() {                                                                                     // 86
            module.debug('Initializing with colors', colors);                                                          // 87
            if( module.checkPreconditions() ) {                                                                        // 88
                                                                                                                       // 89
              module.async(function() {                                                                                // 90
                module.getMetadata();                                                                                  // 91
                module.canvas.create();                                                                                // 92
                                                                                                                       // 93
                module.draw.image(function() {                                                                         // 94
                  module.draw.colors();                                                                                // 95
                  module.canvas.merge();                                                                               // 96
                });                                                                                                    // 97
                $module                                                                                                // 98
                  .data('module-' + namespace, module)                                                                 // 99
                ;                                                                                                      // 100
              });                                                                                                      // 101
            }                                                                                                          // 102
          },                                                                                                           // 103
                                                                                                                       // 104
          redraw: function() {                                                                                         // 105
            module.debug('Redrawing image');                                                                           // 106
            module.async(function() {                                                                                  // 107
              module.canvas.clear();                                                                                   // 108
              module.draw.colors();                                                                                    // 109
              module.canvas.merge();                                                                                   // 110
            });                                                                                                        // 111
          },                                                                                                           // 112
                                                                                                                       // 113
          change: {                                                                                                    // 114
            color: function(colorName, color) {                                                                        // 115
              module.debug('Changing color', colorName);                                                               // 116
              if(colors[colorName] === undefined) {                                                                    // 117
                module.error(error.missingColor);                                                                      // 118
                return false;                                                                                          // 119
              }                                                                                                        // 120
              colors[colorName] = color;                                                                               // 121
              module.redraw();                                                                                         // 122
            }                                                                                                          // 123
          },                                                                                                           // 124
                                                                                                                       // 125
          canvas: {                                                                                                    // 126
            create: function() {                                                                                       // 127
              module.debug('Creating canvases');                                                                       // 128
                                                                                                                       // 129
              mainCanvas.width     = width;                                                                            // 130
              mainCanvas.height    = height;                                                                           // 131
              imageCanvas.width    = width;                                                                            // 132
              imageCanvas.height   = height;                                                                           // 133
              overlayCanvas.width  = width;                                                                            // 134
              overlayCanvas.height = height;                                                                           // 135
                                                                                                                       // 136
              mainContext    = mainCanvas.getContext('2d');                                                            // 137
              imageContext   = imageCanvas.getContext('2d');                                                           // 138
              overlayContext = overlayCanvas.getContext('2d');                                                         // 139
                                                                                                                       // 140
              $module                                                                                                  // 141
                .append( mainCanvas )                                                                                  // 142
              ;                                                                                                        // 143
              mainContext    = $module.children('canvas')[0].getContext('2d');                                         // 144
            },                                                                                                         // 145
            clear: function(context) {                                                                                 // 146
              module.debug('Clearing canvas');                                                                         // 147
              overlayContext.fillStyle = '#FFFFFF';                                                                    // 148
              overlayContext.fillRect(0, 0, width, height);                                                            // 149
            },                                                                                                         // 150
            merge: function() {                                                                                        // 151
              if( !$.isFunction(mainContext.blendOnto) ) {                                                             // 152
                module.error(error.missingPlugin);                                                                     // 153
                return;                                                                                                // 154
              }                                                                                                        // 155
              mainContext.putImageData( imageContext.getImageData(0, 0, width, height), 0, 0);                         // 156
              overlayContext.blendOnto(mainContext, 'multiply');                                                       // 157
            }                                                                                                          // 158
          },                                                                                                           // 159
                                                                                                                       // 160
          draw: {                                                                                                      // 161
                                                                                                                       // 162
            image: function(callback) {                                                                                // 163
              module.debug('Drawing image');                                                                           // 164
              callback = callback || function(){};                                                                     // 165
              if(image) {                                                                                              // 166
                backgroundImage.src    = image;                                                                        // 167
                backgroundImage.onload = function() {                                                                  // 168
                  imageContext.drawImage(backgroundImage, 0, 0);                                                       // 169
                  callback();                                                                                          // 170
                };                                                                                                     // 171
              }                                                                                                        // 172
              else {                                                                                                   // 173
                module.error(error.noImage);                                                                           // 174
                callback();                                                                                            // 175
              }                                                                                                        // 176
            },                                                                                                         // 177
                                                                                                                       // 178
            colors: function() {                                                                                       // 179
              module.debug('Drawing color overlays', colors);                                                          // 180
              $.each(colors, function(colorName, color) {                                                              // 181
                settings.onDraw(overlayContext, imageName, colorName, color);                                          // 182
              });                                                                                                      // 183
            }                                                                                                          // 184
                                                                                                                       // 185
          },                                                                                                           // 186
                                                                                                                       // 187
          debug: function(message, variableName) {                                                                     // 188
            if(settings.debug) {                                                                                       // 189
              if(variableName !== undefined) {                                                                         // 190
                console.info(settings.name + ': ' + message, variableName);                                            // 191
              }                                                                                                        // 192
              else {                                                                                                   // 193
                console.info(settings.name + ': ' + message);                                                          // 194
              }                                                                                                        // 195
            }                                                                                                          // 196
          },                                                                                                           // 197
          error: function(errorMessage) {                                                                              // 198
            console.warn(settings.name + ': ' + errorMessage);                                                         // 199
          },                                                                                                           // 200
          invoke: function(methodName, context, methodArguments) {                                                     // 201
            var                                                                                                        // 202
              method                                                                                                   // 203
            ;                                                                                                          // 204
            methodArguments = methodArguments || Array.prototype.slice.call( arguments, 2 );                           // 205
                                                                                                                       // 206
            if(typeof methodName == 'string' && instance !== undefined) {                                              // 207
              methodName = methodName.split('.');                                                                      // 208
              $.each(methodName, function(index, name) {                                                               // 209
                if( $.isPlainObject( instance[name] ) ) {                                                              // 210
                  instance = instance[name];                                                                           // 211
                  return true;                                                                                         // 212
                }                                                                                                      // 213
                else if( $.isFunction( instance[name] ) ) {                                                            // 214
                  method = instance[name];                                                                             // 215
                  return true;                                                                                         // 216
                }                                                                                                      // 217
                module.error(settings.error.method);                                                                   // 218
                return false;                                                                                          // 219
              });                                                                                                      // 220
            }                                                                                                          // 221
            return ( $.isFunction( method ) )                                                                          // 222
              ? method.apply(context, methodArguments)                                                                 // 223
              : false                                                                                                  // 224
            ;                                                                                                          // 225
          }                                                                                                            // 226
                                                                                                                       // 227
        };                                                                                                             // 228
        if(instance !== undefined && moduleArguments) {                                                                // 229
          // simpler than invoke realizing to invoke itself (and losing scope due prototype.call()                     // 230
          if(moduleArguments[0] == 'invoke') {                                                                         // 231
            moduleArguments = Array.prototype.slice.call( moduleArguments, 1 );                                        // 232
          }                                                                                                            // 233
          return module.invoke(moduleArguments[0], this, Array.prototype.slice.call( moduleArguments, 1 ) );           // 234
        }                                                                                                              // 235
        // initializing                                                                                                // 236
        module.initialize();                                                                                           // 237
      })                                                                                                               // 238
    ;                                                                                                                  // 239
    return this;                                                                                                       // 240
  };                                                                                                                   // 241
                                                                                                                       // 242
  $.fn.colorize.settings = {                                                                                           // 243
    name      : 'Image Colorizer',                                                                                     // 244
    debug     : true,                                                                                                  // 245
    namespace : 'colorize',                                                                                            // 246
                                                                                                                       // 247
    onDraw    : function(overlayContext, imageName, colorName, color) {},                                              // 248
                                                                                                                       // 249
    // whether to block execution while updating canvas                                                                // 250
    async     : true,                                                                                                  // 251
    // object containing names and default values of color regions                                                     // 252
    colors    : {},                                                                                                    // 253
                                                                                                                       // 254
    metadata: {                                                                                                        // 255
      image : 'image',                                                                                                 // 256
      name  : 'name'                                                                                                   // 257
    },                                                                                                                 // 258
                                                                                                                       // 259
    error: {                                                                                                           // 260
      noImage         : 'No tracing image specified',                                                                  // 261
      undefinedColors : 'No default colors specified.',                                                                // 262
      missingColor    : 'Attempted to change color that does not exist',                                               // 263
      missingPlugin   : 'Blend onto plug-in must be included',                                                         // 264
      undefinedHeight : 'The width or height of image canvas could not be automatically determined. Please specify a height.'
    }                                                                                                                  // 266
                                                                                                                       // 267
  };                                                                                                                   // 268
                                                                                                                       // 269
})( jQuery, window , document );                                                                                       // 270
                                                                                                                       // 271
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}).call(this);






(function () {

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// packages/semantic-ui/lib/semantic-ui/build/uncompressed/modules/behavior/form.js                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/*                                                                                                                     // 1
 * # Semantic - Form Validation                                                                                        // 2
 * http://github.com/jlukic/semantic-ui/                                                                               // 3
 *                                                                                                                     // 4
 *                                                                                                                     // 5
 * Copyright 2013 Contributors                                                                                         // 6
 * Released under the MIT license                                                                                      // 7
 * http://opensource.org/licenses/MIT                                                                                  // 8
 *                                                                                                                     // 9
 */                                                                                                                    // 10
                                                                                                                       // 11
;(function ( $, window, document, undefined ) {                                                                        // 12
                                                                                                                       // 13
$.fn.form = function(fields, parameters) {                                                                             // 14
  var                                                                                                                  // 15
    $allModules     = $(this),                                                                                         // 16
                                                                                                                       // 17
    settings        = $.extend(true, {}, $.fn.form.settings, parameters),                                              // 18
    validation      = $.extend({}, $.fn.form.settings.defaults, fields),                                               // 19
                                                                                                                       // 20
    namespace       = settings.namespace,                                                                              // 21
    metadata        = settings.metadata,                                                                               // 22
    selector        = settings.selector,                                                                               // 23
    className       = settings.className,                                                                              // 24
    error           = settings.error,                                                                                  // 25
                                                                                                                       // 26
    eventNamespace  = '.' + namespace,                                                                                 // 27
    moduleNamespace = 'module-' + namespace,                                                                           // 28
                                                                                                                       // 29
    moduleSelector  = $allModules.selector || '',                                                                      // 30
                                                                                                                       // 31
    time            = new Date().getTime(),                                                                            // 32
    performance     = [],                                                                                              // 33
                                                                                                                       // 34
    query           = arguments[0],                                                                                    // 35
    methodInvoked   = (typeof query == 'string'),                                                                      // 36
    queryArguments  = [].slice.call(arguments, 1),                                                                     // 37
    returnedValue                                                                                                      // 38
  ;                                                                                                                    // 39
  $allModules                                                                                                          // 40
    .each(function() {                                                                                                 // 41
      var                                                                                                              // 42
        $module    = $(this),                                                                                          // 43
        $field     = $(this).find(selector.field),                                                                     // 44
        $group     = $(this).find(selector.group),                                                                     // 45
        $message   = $(this).find(selector.message),                                                                   // 46
        $prompt    = $(this).find(selector.prompt),                                                                    // 47
        $submit    = $(this).find(selector.submit),                                                                    // 48
                                                                                                                       // 49
        formErrors = [],                                                                                               // 50
                                                                                                                       // 51
        element    = this,                                                                                             // 52
        instance   = $module.data(moduleNamespace),                                                                    // 53
        module                                                                                                         // 54
      ;                                                                                                                // 55
                                                                                                                       // 56
      module      = {                                                                                                  // 57
                                                                                                                       // 58
        initialize: function() {                                                                                       // 59
          module.verbose('Initializing form validation', $module, validation, settings);                               // 60
          if(settings.keyboardShortcuts) {                                                                             // 61
            $field                                                                                                     // 62
              .on('keydown' + eventNamespace, module.event.field.keydown)                                              // 63
            ;                                                                                                          // 64
          }                                                                                                            // 65
          $module                                                                                                      // 66
            .on('submit' + eventNamespace, module.validate.form)                                                       // 67
          ;                                                                                                            // 68
          $field                                                                                                       // 69
            .on('blur' + eventNamespace, module.event.field.blur)                                                      // 70
          ;                                                                                                            // 71
          $submit                                                                                                      // 72
            .on('click' + eventNamespace, module.submit)                                                               // 73
          ;                                                                                                            // 74
          $field                                                                                                       // 75
            .on(module.get.changeEvent() + eventNamespace, module.event.field.change)                                  // 76
          ;                                                                                                            // 77
          module.instantiate();                                                                                        // 78
        },                                                                                                             // 79
                                                                                                                       // 80
        instantiate: function() {                                                                                      // 81
          module.verbose('Storing instance of module', module);                                                        // 82
          instance = module;                                                                                           // 83
          $module                                                                                                      // 84
            .data(moduleNamespace, module)                                                                             // 85
          ;                                                                                                            // 86
        },                                                                                                             // 87
                                                                                                                       // 88
        destroy: function() {                                                                                          // 89
          module.verbose('Destroying previous module', instance);                                                      // 90
          $module                                                                                                      // 91
            .off(eventNamespace)                                                                                       // 92
            .removeData(moduleNamespace)                                                                               // 93
          ;                                                                                                            // 94
        },                                                                                                             // 95
                                                                                                                       // 96
        refresh: function() {                                                                                          // 97
          module.verbose('Refreshing selector cache');                                                                 // 98
          $field = $module.find(selector.field);                                                                       // 99
        },                                                                                                             // 100
                                                                                                                       // 101
        submit: function() {                                                                                           // 102
          module.verbose('Submitting form', $module);                                                                  // 103
          $module                                                                                                      // 104
            .submit()                                                                                                  // 105
          ;                                                                                                            // 106
        },                                                                                                             // 107
                                                                                                                       // 108
        event: {                                                                                                       // 109
          field: {                                                                                                     // 110
            keydown: function(event) {                                                                                 // 111
              var                                                                                                      // 112
                $field  = $(this),                                                                                     // 113
                key     = event.which,                                                                                 // 114
                keyCode = {                                                                                            // 115
                  enter  : 13,                                                                                         // 116
                  escape : 27                                                                                          // 117
                }                                                                                                      // 118
              ;                                                                                                        // 119
              if( key == keyCode.escape) {                                                                             // 120
                module.verbose('Escape key pressed blurring field');                                                   // 121
                $field                                                                                                 // 122
                  .blur()                                                                                              // 123
                ;                                                                                                      // 124
              }                                                                                                        // 125
              if(!event.ctrlKey && key == keyCode.enter && $field.is(selector.input) ) {                               // 126
                module.debug('Enter key pressed, submitting form');                                                    // 127
                $submit                                                                                                // 128
                  .addClass(className.down)                                                                            // 129
                ;                                                                                                      // 130
                $field                                                                                                 // 131
                  .one('keyup' + eventNamespace, module.event.field.keyup)                                             // 132
                ;                                                                                                      // 133
                event.preventDefault();                                                                                // 134
                return false;                                                                                          // 135
              }                                                                                                        // 136
            },                                                                                                         // 137
            keyup: function() {                                                                                        // 138
              module.verbose('Doing keyboard shortcut form submit');                                                   // 139
              $submit.removeClass(className.down);                                                                     // 140
              module.submit();                                                                                         // 141
            },                                                                                                         // 142
            blur: function() {                                                                                         // 143
              var                                                                                                      // 144
                $field      = $(this),                                                                                 // 145
                $fieldGroup = $field.closest($group)                                                                   // 146
              ;                                                                                                        // 147
              if( $fieldGroup.hasClass(className.error) ) {                                                            // 148
                module.debug('Revalidating field', $field,  module.get.validation($field));                            // 149
                module.validate.field( module.get.validation($field) );                                                // 150
              }                                                                                                        // 151
              else if(settings.on == 'blur' || settings.on == 'change') {                                              // 152
                module.validate.field( module.get.validation($field) );                                                // 153
              }                                                                                                        // 154
            },                                                                                                         // 155
            change: function() {                                                                                       // 156
              var                                                                                                      // 157
                $field      = $(this),                                                                                 // 158
                $fieldGroup = $field.closest($group)                                                                   // 159
              ;                                                                                                        // 160
              if(settings.on == 'change' || ( $fieldGroup.hasClass(className.error) && settings.revalidate) ) {        // 161
                clearTimeout(module.timer);                                                                            // 162
                module.timer = setTimeout(function() {                                                                 // 163
                  module.debug('Revalidating field', $field,  module.get.validation($field));                          // 164
                  module.validate.field( module.get.validation($field) );                                              // 165
                }, settings.delay);                                                                                    // 166
              }                                                                                                        // 167
            }                                                                                                          // 168
          }                                                                                                            // 169
                                                                                                                       // 170
        },                                                                                                             // 171
                                                                                                                       // 172
        get: {                                                                                                         // 173
          changeEvent: function() {                                                                                    // 174
            return (document.createElement('input').oninput !== undefined)                                             // 175
              ? 'input'                                                                                                // 176
              : (document.createElement('input').onpropertychange !== undefined)                                       // 177
                ? 'propertychange'                                                                                     // 178
                : 'keyup'                                                                                              // 179
            ;                                                                                                          // 180
          },                                                                                                           // 181
          field: function(identifier) {                                                                                // 182
            module.verbose('Finding field with identifier', identifier);                                               // 183
            if( $field.filter('#' + identifier).size() > 0 ) {                                                         // 184
              return $field.filter('#' + identifier);                                                                  // 185
            }                                                                                                          // 186
            else if( $field.filter('[name="' + identifier +'"]').size() > 0 ) {                                        // 187
              return $field.filter('[name="' + identifier +'"]');                                                      // 188
            }                                                                                                          // 189
            else if( $field.filter('[data-' + metadata.validate + '="'+ identifier +'"]').size() > 0 ) {               // 190
              return $field.filter('[data-' + metadata.validate + '="'+ identifier +'"]');                             // 191
            }                                                                                                          // 192
            return $('<input/>');                                                                                      // 193
          },                                                                                                           // 194
          validation: function($field) {                                                                               // 195
            var                                                                                                        // 196
              rules                                                                                                    // 197
            ;                                                                                                          // 198
            $.each(validation, function(fieldName, field) {                                                            // 199
              if( module.get.field(field.identifier).get(0) == $field.get(0) ) {                                       // 200
                rules = field;                                                                                         // 201
              }                                                                                                        // 202
            });                                                                                                        // 203
            return rules || false;                                                                                     // 204
          }                                                                                                            // 205
        },                                                                                                             // 206
                                                                                                                       // 207
        has: {                                                                                                         // 208
                                                                                                                       // 209
          field: function(identifier) {                                                                                // 210
            module.verbose('Checking for existence of a field with identifier', identifier);                           // 211
            if( $field.filter('#' + identifier).size() > 0 ) {                                                         // 212
              return true;                                                                                             // 213
            }                                                                                                          // 214
            else if( $field.filter('[name="' + identifier +'"]').size() > 0 ) {                                        // 215
              return true;                                                                                             // 216
            }                                                                                                          // 217
            else if( $field.filter('[data-' + metadata.validate + '="'+ identifier +'"]').size() > 0 ) {               // 218
              return true;                                                                                             // 219
            }                                                                                                          // 220
            return false;                                                                                              // 221
          }                                                                                                            // 222
                                                                                                                       // 223
        },                                                                                                             // 224
                                                                                                                       // 225
        add: {                                                                                                         // 226
          prompt: function(field, errors) {                                                                            // 227
            var                                                                                                        // 228
              $field       = module.get.field(field.identifier),                                                       // 229
              $fieldGroup  = $field.closest($group),                                                                   // 230
              $prompt      = $fieldGroup.find(selector.prompt),                                                        // 231
              promptExists = ($prompt.size() !== 0)                                                                    // 232
            ;                                                                                                          // 233
            module.verbose('Adding inline error', field);                                                              // 234
            $fieldGroup                                                                                                // 235
              .addClass(className.error)                                                                               // 236
            ;                                                                                                          // 237
            if(settings.inline) {                                                                                      // 238
              if(!promptExists) {                                                                                      // 239
                $prompt = settings.templates.prompt(errors);                                                           // 240
                $prompt                                                                                                // 241
                  .appendTo($fieldGroup)                                                                               // 242
                ;                                                                                                      // 243
              }                                                                                                        // 244
              $prompt                                                                                                  // 245
                .html(errors[0])                                                                                       // 246
              ;                                                                                                        // 247
              if(!promptExists) {                                                                                      // 248
                if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {       // 249
                  module.verbose('Displaying error with css transition', settings.transition);                         // 250
                  $prompt.transition(settings.transition + ' in', settings.duration);                                  // 251
                }                                                                                                      // 252
                else {                                                                                                 // 253
                  module.verbose('Displaying error with fallback javascript animation');                               // 254
                  $prompt                                                                                              // 255
                    .fadeIn(settings.duration)                                                                         // 256
                  ;                                                                                                    // 257
                }                                                                                                      // 258
              }                                                                                                        // 259
            }                                                                                                          // 260
          },                                                                                                           // 261
          errors: function(errors) {                                                                                   // 262
            module.debug('Adding form error messages', errors);                                                        // 263
            $message                                                                                                   // 264
              .html( settings.templates.error(errors) )                                                                // 265
            ;                                                                                                          // 266
          }                                                                                                            // 267
        },                                                                                                             // 268
                                                                                                                       // 269
        remove: {                                                                                                      // 270
          prompt: function(field) {                                                                                    // 271
            var                                                                                                        // 272
              $field      = module.get.field(field.identifier),                                                        // 273
              $fieldGroup = $field.closest($group),                                                                    // 274
              $prompt     = $fieldGroup.find(selector.prompt)                                                          // 275
            ;                                                                                                          // 276
            $fieldGroup                                                                                                // 277
              .removeClass(className.error)                                                                            // 278
            ;                                                                                                          // 279
            if(settings.inline && $prompt.is(':visible')) {                                                            // 280
              module.verbose('Removing prompt for field', field);                                                      // 281
              if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {         // 282
                $prompt.transition(settings.transition + ' out', settings.duration, function() {                       // 283
                  $prompt.remove();                                                                                    // 284
                });                                                                                                    // 285
              }                                                                                                        // 286
              else {                                                                                                   // 287
                $prompt                                                                                                // 288
                  .fadeOut(settings.duration, function(){                                                              // 289
                    $prompt.remove();                                                                                  // 290
                  })                                                                                                   // 291
                ;                                                                                                      // 292
              }                                                                                                        // 293
            }                                                                                                          // 294
          }                                                                                                            // 295
        },                                                                                                             // 296
                                                                                                                       // 297
        validate: {                                                                                                    // 298
                                                                                                                       // 299
          form: function(event) {                                                                                      // 300
            var                                                                                                        // 301
              allValid = true                                                                                          // 302
            ;                                                                                                          // 303
            // reset errors                                                                                            // 304
            formErrors = [];                                                                                           // 305
            $.each(validation, function(fieldName, field) {                                                            // 306
              if( !( module.validate.field(field) ) ) {                                                                // 307
                allValid = false;                                                                                      // 308
              }                                                                                                        // 309
            });                                                                                                        // 310
            if(allValid) {                                                                                             // 311
              module.debug('Form has no validation errors, submitting');                                               // 312
              $module                                                                                                  // 313
                .removeClass(className.error)                                                                          // 314
                .addClass(className.success)                                                                           // 315
              ;                                                                                                        // 316
              $.proxy(settings.onSuccess, this)(event);                                                                // 317
            }                                                                                                          // 318
            else {                                                                                                     // 319
              module.debug('Form has errors');                                                                         // 320
              $module.addClass(className.error);                                                                       // 321
              if(!settings.inline) {                                                                                   // 322
                module.add.errors(formErrors);                                                                         // 323
              }                                                                                                        // 324
              return $.proxy(settings.onFailure, this)(formErrors);                                                    // 325
            }                                                                                                          // 326
          },                                                                                                           // 327
                                                                                                                       // 328
          // takes a validation object and returns whether field passes validation                                     // 329
          field: function(field) {                                                                                     // 330
            var                                                                                                        // 331
              $field      = module.get.field(field.identifier),                                                        // 332
              fieldValid  = true,                                                                                      // 333
              fieldErrors = []                                                                                         // 334
            ;                                                                                                          // 335
            if(field.rules !== undefined) {                                                                            // 336
              $.each(field.rules, function(index, rule) {                                                              // 337
                if( module.has.field(field.identifier) && !( module.validate.rule(field, rule) ) ) {                   // 338
                  module.debug('Field is invalid', field.identifier, rule.type);                                       // 339
                  fieldErrors.push(rule.prompt);                                                                       // 340
                  fieldValid = false;                                                                                  // 341
                }                                                                                                      // 342
              });                                                                                                      // 343
            }                                                                                                          // 344
            if(fieldValid) {                                                                                           // 345
              module.remove.prompt(field, fieldErrors);                                                                // 346
              $.proxy(settings.onValid, $field)();                                                                     // 347
            }                                                                                                          // 348
            else {                                                                                                     // 349
              formErrors = formErrors.concat(fieldErrors);                                                             // 350
              module.add.prompt(field, fieldErrors);                                                                   // 351
              $.proxy(settings.onInvalid, $field)(fieldErrors);                                                        // 352
              return false;                                                                                            // 353
            }                                                                                                          // 354
            return true;                                                                                               // 355
          },                                                                                                           // 356
                                                                                                                       // 357
          // takes validation rule and returns whether field passes rule                                               // 358
          rule: function(field, validation) {                                                                          // 359
            var                                                                                                        // 360
              $field        = module.get.field(field.identifier),                                                      // 361
              type          = validation.type,                                                                         // 362
              value         = $field.val() + '',                                                                       // 363
                                                                                                                       // 364
              bracketRegExp = /\[(.*?)\]/i,                                                                            // 365
              bracket       = bracketRegExp.exec(type),                                                                // 366
              isValid       = true,                                                                                    // 367
              ancillary,                                                                                               // 368
              functionType                                                                                             // 369
            ;                                                                                                          // 370
            // if bracket notation is used, pass in extra parameters                                                   // 371
            if(bracket !== undefined && bracket !== null) {                                                            // 372
              ancillary    = '' + bracket[1];                                                                          // 373
              functionType = type.replace(bracket[0], '');                                                             // 374
              isValid      = $.proxy(settings.rules[functionType], $module)(value, ancillary);                         // 375
            }                                                                                                          // 376
            // normal notation                                                                                         // 377
            else {                                                                                                     // 378
              isValid = $.proxy(settings.rules[type], $field)(value);                                                  // 379
            }                                                                                                          // 380
            return isValid;                                                                                            // 381
          }                                                                                                            // 382
        },                                                                                                             // 383
                                                                                                                       // 384
        setting: function(name, value) {                                                                               // 385
          if( $.isPlainObject(name) ) {                                                                                // 386
            $.extend(true, settings, name);                                                                            // 387
          }                                                                                                            // 388
          else if(value !== undefined) {                                                                               // 389
            settings[name] = value;                                                                                    // 390
          }                                                                                                            // 391
          else {                                                                                                       // 392
            return settings[name];                                                                                     // 393
          }                                                                                                            // 394
        },                                                                                                             // 395
        internal: function(name, value) {                                                                              // 396
          if( $.isPlainObject(name) ) {                                                                                // 397
            $.extend(true, module, name);                                                                              // 398
          }                                                                                                            // 399
          else if(value !== undefined) {                                                                               // 400
            module[name] = value;                                                                                      // 401
          }                                                                                                            // 402
          else {                                                                                                       // 403
            return module[name];                                                                                       // 404
          }                                                                                                            // 405
        },                                                                                                             // 406
        debug: function() {                                                                                            // 407
          if(settings.debug) {                                                                                         // 408
            if(settings.performance) {                                                                                 // 409
              module.performance.log(arguments);                                                                       // 410
            }                                                                                                          // 411
            else {                                                                                                     // 412
              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');                 // 413
              module.debug.apply(console, arguments);                                                                  // 414
            }                                                                                                          // 415
          }                                                                                                            // 416
        },                                                                                                             // 417
        verbose: function() {                                                                                          // 418
          if(settings.verbose && settings.debug) {                                                                     // 419
            if(settings.performance) {                                                                                 // 420
              module.performance.log(arguments);                                                                       // 421
            }                                                                                                          // 422
            else {                                                                                                     // 423
              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');               // 424
              module.verbose.apply(console, arguments);                                                                // 425
            }                                                                                                          // 426
          }                                                                                                            // 427
        },                                                                                                             // 428
        error: function() {                                                                                            // 429
          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');                    // 430
          module.error.apply(console, arguments);                                                                      // 431
        },                                                                                                             // 432
        performance: {                                                                                                 // 433
          log: function(message) {                                                                                     // 434
            var                                                                                                        // 435
              currentTime,                                                                                             // 436
              executionTime,                                                                                           // 437
              previousTime                                                                                             // 438
            ;                                                                                                          // 439
            if(settings.performance) {                                                                                 // 440
              currentTime   = new Date().getTime();                                                                    // 441
              previousTime  = time || currentTime;                                                                     // 442
              executionTime = currentTime - previousTime;                                                              // 443
              time          = currentTime;                                                                             // 444
              performance.push({                                                                                       // 445
                'Element'        : element,                                                                            // 446
                'Name'           : message[0],                                                                         // 447
                'Arguments'      : [].slice.call(message, 1) || '',                                                    // 448
                'Execution Time' : executionTime                                                                       // 449
              });                                                                                                      // 450
            }                                                                                                          // 451
            clearTimeout(module.performance.timer);                                                                    // 452
            module.performance.timer = setTimeout(module.performance.display, 100);                                    // 453
          },                                                                                                           // 454
          display: function() {                                                                                        // 455
            var                                                                                                        // 456
              title = settings.name + ':',                                                                             // 457
              totalTime = 0                                                                                            // 458
            ;                                                                                                          // 459
            time = false;                                                                                              // 460
            clearTimeout(module.performance.timer);                                                                    // 461
            $.each(performance, function(index, data) {                                                                // 462
              totalTime += data['Execution Time'];                                                                     // 463
            });                                                                                                        // 464
            title += ' ' + totalTime + 'ms';                                                                           // 465
            if(moduleSelector) {                                                                                       // 466
              title += ' \'' + moduleSelector + '\'';                                                                  // 467
            }                                                                                                          // 468
            if($allModules.size() > 1) {                                                                               // 469
              title += ' ' + '(' + $allModules.size() + ')';                                                           // 470
            }                                                                                                          // 471
            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {              // 472
              console.groupCollapsed(title);                                                                           // 473
              if(console.table) {                                                                                      // 474
                console.table(performance);                                                                            // 475
              }                                                                                                        // 476
              else {                                                                                                   // 477
                $.each(performance, function(index, data) {                                                            // 478
                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');                                      // 479
                });                                                                                                    // 480
              }                                                                                                        // 481
              console.groupEnd();                                                                                      // 482
            }                                                                                                          // 483
            performance = [];                                                                                          // 484
          }                                                                                                            // 485
        },                                                                                                             // 486
        invoke: function(query, passedArguments, context) {                                                            // 487
          var                                                                                                          // 488
            maxDepth,                                                                                                  // 489
            found,                                                                                                     // 490
            response                                                                                                   // 491
          ;                                                                                                            // 492
          passedArguments = passedArguments || queryArguments;                                                         // 493
          context         = element         || context;                                                                // 494
          if(typeof query == 'string' && instance !== undefined) {                                                     // 495
            query    = query.split(/[\. ]/);                                                                           // 496
            maxDepth = query.length - 1;                                                                               // 497
            $.each(query, function(depth, value) {                                                                     // 498
              var camelCaseValue = (depth != maxDepth)                                                                 // 499
                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)                         // 500
                : query                                                                                                // 501
              ;                                                                                                        // 502
              if( $.isPlainObject( instance[camelCaseValue] ) && (depth != maxDepth) ) {                               // 503
                instance = instance[camelCaseValue];                                                                   // 504
              }                                                                                                        // 505
              else if( instance[camelCaseValue] !== undefined ) {                                                      // 506
                found = instance[camelCaseValue];                                                                      // 507
                return false;                                                                                          // 508
              }                                                                                                        // 509
              else if( $.isPlainObject( instance[value] ) && (depth != maxDepth) ) {                                   // 510
                instance = instance[value];                                                                            // 511
              }                                                                                                        // 512
              else if( instance[value] !== undefined ) {                                                               // 513
                found = instance[value];                                                                               // 514
                return false;                                                                                          // 515
              }                                                                                                        // 516
              else {                                                                                                   // 517
                module.error(error.method, query);                                                                     // 518
                return false;                                                                                          // 519
              }                                                                                                        // 520
            });                                                                                                        // 521
          }                                                                                                            // 522
          if ( $.isFunction( found ) ) {                                                                               // 523
            response = found.apply(context, passedArguments);                                                          // 524
          }                                                                                                            // 525
          else if(found !== undefined) {                                                                               // 526
            response = found;                                                                                          // 527
          }                                                                                                            // 528
          if($.isArray(returnedValue)) {                                                                               // 529
            returnedValue.push(response);                                                                              // 530
          }                                                                                                            // 531
          else if(returnedValue !== undefined) {                                                                       // 532
            returnedValue = [returnedValue, response];                                                                 // 533
          }                                                                                                            // 534
          else if(response !== undefined) {                                                                            // 535
            returnedValue = response;                                                                                  // 536
          }                                                                                                            // 537
          return found;                                                                                                // 538
        }                                                                                                              // 539
      };                                                                                                               // 540
      if(methodInvoked) {                                                                                              // 541
        if(instance === undefined) {                                                                                   // 542
          module.initialize();                                                                                         // 543
        }                                                                                                              // 544
        module.invoke(query);                                                                                          // 545
      }                                                                                                                // 546
      else {                                                                                                           // 547
        if(instance !== undefined) {                                                                                   // 548
          module.destroy();                                                                                            // 549
        }                                                                                                              // 550
        module.initialize();                                                                                           // 551
      }                                                                                                                // 552
                                                                                                                       // 553
    })                                                                                                                 // 554
  ;                                                                                                                    // 555
                                                                                                                       // 556
  return (returnedValue !== undefined)                                                                                 // 557
    ? returnedValue                                                                                                    // 558
    : this                                                                                                             // 559
  ;                                                                                                                    // 560
};                                                                                                                     // 561
                                                                                                                       // 562
$.fn.form.settings = {                                                                                                 // 563
                                                                                                                       // 564
  name              : 'Form',                                                                                          // 565
  namespace         : 'form',                                                                                          // 566
                                                                                                                       // 567
  debug             : true,                                                                                            // 568
  verbose           : true,                                                                                            // 569
  performance       : true,                                                                                            // 570
                                                                                                                       // 571
                                                                                                                       // 572
  keyboardShortcuts : true,                                                                                            // 573
  on                : 'submit',                                                                                        // 574
  inline            : false,                                                                                           // 575
                                                                                                                       // 576
  delay             : 200,                                                                                             // 577
  revalidate        : true,                                                                                            // 578
                                                                                                                       // 579
  transition        : 'scale',                                                                                         // 580
  duration          : 150,                                                                                             // 581
                                                                                                                       // 582
                                                                                                                       // 583
  onValid           : function() {},                                                                                   // 584
  onInvalid         : function() {},                                                                                   // 585
  onSuccess         : function() { return true; },                                                                     // 586
  onFailure         : function() { return false; },                                                                    // 587
                                                                                                                       // 588
  metadata : {                                                                                                         // 589
    validate: 'validate'                                                                                               // 590
  },                                                                                                                   // 591
                                                                                                                       // 592
  selector : {                                                                                                         // 593
    message : '.error.message',                                                                                        // 594
    field   : 'input, textarea, select',                                                                               // 595
    group   : '.field',                                                                                                // 596
    input   : 'input',                                                                                                 // 597
    prompt  : '.prompt',                                                                                               // 598
    submit  : '.submit'                                                                                                // 599
  },                                                                                                                   // 600
                                                                                                                       // 601
  className : {                                                                                                        // 602
    error   : 'error',                                                                                                 // 603
    success : 'success',                                                                                               // 604
    down    : 'down',                                                                                                  // 605
    label   : 'ui label prompt'                                                                                        // 606
  },                                                                                                                   // 607
                                                                                                                       // 608
  // errors                                                                                                            // 609
  error: {                                                                                                             // 610
    method   : 'The method you called is not defined.'                                                                 // 611
  },                                                                                                                   // 612
                                                                                                                       // 613
                                                                                                                       // 614
  templates: {                                                                                                         // 615
    error: function(errors) {                                                                                          // 616
      var                                                                                                              // 617
        html = '<ul class="list">'                                                                                     // 618
      ;                                                                                                                // 619
      $.each(errors, function(index, value) {                                                                          // 620
        html += '<li>' + value + '</li>';                                                                              // 621
      });                                                                                                              // 622
      html += '</ul>';                                                                                                 // 623
      return $(html);                                                                                                  // 624
    },                                                                                                                 // 625
    prompt: function(errors) {                                                                                         // 626
      return $('<div/>')                                                                                               // 627
        .addClass('ui red pointing prompt label')                                                                      // 628
        .html(errors[0])                                                                                               // 629
      ;                                                                                                                // 630
    }                                                                                                                  // 631
  },                                                                                                                   // 632
                                                                                                                       // 633
  rules: {                                                                                                             // 634
    checked: function() {                                                                                              // 635
      return ($(this).filter(':checked').size() > 0);                                                                  // 636
    },                                                                                                                 // 637
    empty: function(value) {                                                                                           // 638
      return !(value === undefined || '' === value);                                                                   // 639
    },                                                                                                                 // 640
    email: function(value){                                                                                            // 641
      var                                                                                                              // 642
        emailRegExp = new RegExp("[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?", "i")
      ;                                                                                                                // 644
      return emailRegExp.test(value);                                                                                  // 645
    },                                                                                                                 // 646
    length: function(value, requiredLength) {                                                                          // 647
      return (value !== undefined)                                                                                     // 648
        ? (value.length >= requiredLength)                                                                             // 649
        : false                                                                                                        // 650
      ;                                                                                                                // 651
    },                                                                                                                 // 652
    not: function(value, notValue) {                                                                                   // 653
      return (value != notValue);                                                                                      // 654
    },                                                                                                                 // 655
    contains: function(value, text) {                                                                                  // 656
      text = text.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");                                              // 657
      return (value.search(text) !== -1);                                                                              // 658
    },                                                                                                                 // 659
    is: function(value, text) {                                                                                        // 660
      return (value == text);                                                                                          // 661
    },                                                                                                                 // 662
    maxLength: function(value, maxLength) {                                                                            // 663
      return (value !== undefined)                                                                                     // 664
        ? (value.length <= maxLength)                                                                                  // 665
        : false                                                                                                        // 666
      ;                                                                                                                // 667
    },                                                                                                                 // 668
    match: function(value, fieldIdentifier) {                                                                          // 669
      // use either id or name of field                                                                                // 670
      var                                                                                                              // 671
        $form = $(this),                                                                                               // 672
        matchingValue                                                                                                  // 673
      ;                                                                                                                // 674
      if($form.find('#' + fieldIdentifier).size() > 0) {                                                               // 675
        matchingValue = $form.find('#' + fieldIdentifier).val();                                                       // 676
      }                                                                                                                // 677
      else if($form.find('[name=' + fieldIdentifier +']').size() > 0) {                                                // 678
        matchingValue = $form.find('[name=' + fieldIdentifier + ']').val();                                            // 679
      }                                                                                                                // 680
      else if( $form.find('[data-validate="'+ fieldIdentifier +'"]').size() > 0 ) {                                    // 681
        matchingValue = $form.find('[data-validate="'+ fieldIdentifier +'"]').val();                                   // 682
      }                                                                                                                // 683
      return (matchingValue !== undefined)                                                                             // 684
        ? ( value.toString() == matchingValue.toString() )                                                             // 685
        : false                                                                                                        // 686
      ;                                                                                                                // 687
    },                                                                                                                 // 688
    url: function(value) {                                                                                             // 689
      var                                                                                                              // 690
        urlRegExp = /(ftp|http|https):\/\/(\w+:{0,1}\w*@)?(\S+)(:[0-9]+)?(\/|\/([\w#!:.?+=&%@!\-\/]))?/                // 691
      ;                                                                                                                // 692
      return urlRegExp.test(value);                                                                                    // 693
    }                                                                                                                  // 694
  }                                                                                                                    // 695
                                                                                                                       // 696
};                                                                                                                     // 697
                                                                                                                       // 698
})( jQuery, window , document );                                                                                       // 699
                                                                                                                       // 700
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}).call(this);






(function () {

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// packages/semantic-ui/lib/semantic-ui/build/uncompressed/modules/behavior/state.js                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/*                                                                                                                     // 1
 * # Semantic - State                                                                                                  // 2
 * http://github.com/jlukic/semantic-ui/                                                                               // 3
 *                                                                                                                     // 4
 *                                                                                                                     // 5
 * Copyright 2013 Contributors                                                                                         // 6
 * Released under the MIT license                                                                                      // 7
 * http://opensource.org/licenses/MIT                                                                                  // 8
 *                                                                                                                     // 9
 */                                                                                                                    // 10
                                                                                                                       // 11
;(function ( $, window, document, undefined ) {                                                                        // 12
                                                                                                                       // 13
$.fn.state = function(parameters) {                                                                                    // 14
  var                                                                                                                  // 15
    $allModules     = $(this),                                                                                         // 16
    settings        = $.extend(true, {}, $.fn.state.settings, parameters),                                             // 17
                                                                                                                       // 18
    moduleSelector  = $allModules.selector || '',                                                                      // 19
                                                                                                                       // 20
    time            = new Date().getTime(),                                                                            // 21
    performance     = [],                                                                                              // 22
                                                                                                                       // 23
    query           = arguments[0],                                                                                    // 24
    methodInvoked   = (typeof query == 'string'),                                                                      // 25
    queryArguments  = [].slice.call(arguments, 1),                                                                     // 26
                                                                                                                       // 27
    // shortcuts                                                                                                       // 28
    error         = settings.error,                                                                                    // 29
    metadata      = settings.metadata,                                                                                 // 30
    className     = settings.className,                                                                                // 31
    namespace     = settings.namespace,                                                                                // 32
    states        = settings.states,                                                                                   // 33
    text          = settings.text,                                                                                     // 34
                                                                                                                       // 35
    eventNamespace  = '.' + namespace,                                                                                 // 36
    moduleNamespace = namespace + '-module',                                                                           // 37
                                                                                                                       // 38
                                                                                                                       // 39
    returnedValue                                                                                                      // 40
  ;                                                                                                                    // 41
  $allModules                                                                                                          // 42
    .each(function() {                                                                                                 // 43
      var                                                                                                              // 44
        $module       = $(this),                                                                                       // 45
                                                                                                                       // 46
        element       = this,                                                                                          // 47
        instance      = $module.data(moduleNamespace),                                                                 // 48
                                                                                                                       // 49
        module                                                                                                         // 50
      ;                                                                                                                // 51
      module = {                                                                                                       // 52
                                                                                                                       // 53
        initialize: function() {                                                                                       // 54
          module.verbose('Initializing module');                                                                       // 55
                                                                                                                       // 56
          // allow module to guess desired state based on element                                                      // 57
          if(settings.automatic) {                                                                                     // 58
            module.add.defaults();                                                                                     // 59
          }                                                                                                            // 60
                                                                                                                       // 61
          // bind events with delegated events                                                                         // 62
          if(settings.context && moduleSelector !== '') {                                                              // 63
            if( module.allows('hover') ) {                                                                             // 64
              $(element, settings.context)                                                                             // 65
                .on(moduleSelector, 'mouseenter' + eventNamespace, module.enable.hover)                                // 66
                .on(moduleSelector, 'mouseleave' + eventNamespace, module.disable.hover)                               // 67
              ;                                                                                                        // 68
            }                                                                                                          // 69
            if( module.allows('down') ) {                                                                              // 70
              $(element, settings.context)                                                                             // 71
                .on(moduleSelector, 'mousedown' + eventNamespace, module.enable.down)                                  // 72
                .on(moduleSelector, 'mouseup'   + eventNamespace, module.disable.down)                                 // 73
              ;                                                                                                        // 74
            }                                                                                                          // 75
            if( module.allows('focus') ) {                                                                             // 76
              $(element, settings.context)                                                                             // 77
                .on(moduleSelector, 'focus' + eventNamespace, module.enable.focus)                                     // 78
                .on(moduleSelector, 'blur'  + eventNamespace, module.disable.focus)                                    // 79
              ;                                                                                                        // 80
            }                                                                                                          // 81
            $(settings.context)                                                                                        // 82
              .on(moduleSelector, 'mouseenter' + eventNamespace, module.change.text)                                   // 83
              .on(moduleSelector, 'mouseleave' + eventNamespace, module.reset.text)                                    // 84
              .on(moduleSelector, 'click'      + eventNamespace, module.toggle.state)                                  // 85
            ;                                                                                                          // 86
          }                                                                                                            // 87
          else {                                                                                                       // 88
            if( module.allows('hover') ) {                                                                             // 89
              $module                                                                                                  // 90
                .on('mouseenter' + eventNamespace, module.enable.hover)                                                // 91
                .on('mouseleave' + eventNamespace, module.disable.hover)                                               // 92
              ;                                                                                                        // 93
            }                                                                                                          // 94
            if( module.allows('down') ) {                                                                              // 95
              $module                                                                                                  // 96
                .on('mousedown' + eventNamespace, module.enable.down)                                                  // 97
                .on('mouseup'   + eventNamespace, module.disable.down)                                                 // 98
              ;                                                                                                        // 99
            }                                                                                                          // 100
            if( module.allows('focus') ) {                                                                             // 101
              $module                                                                                                  // 102
                .on('focus' + eventNamespace, module.enable.focus)                                                     // 103
                .on('blur'  + eventNamespace, module.disable.focus)                                                    // 104
              ;                                                                                                        // 105
            }                                                                                                          // 106
            $module                                                                                                    // 107
              .on('mouseenter' + eventNamespace, module.change.text)                                                   // 108
              .on('mouseleave' + eventNamespace, module.reset.text)                                                    // 109
              .on('click'      + eventNamespace, module.toggle.state)                                                  // 110
            ;                                                                                                          // 111
          }                                                                                                            // 112
          module.instantiate();                                                                                        // 113
        },                                                                                                             // 114
                                                                                                                       // 115
        instantiate: function() {                                                                                      // 116
          module.verbose('Storing instance of module', module);                                                        // 117
          instance = module;                                                                                           // 118
          $module                                                                                                      // 119
            .data(moduleNamespace, module)                                                                             // 120
          ;                                                                                                            // 121
        },                                                                                                             // 122
                                                                                                                       // 123
        destroy: function() {                                                                                          // 124
          module.verbose('Destroying previous module', instance);                                                      // 125
          $module                                                                                                      // 126
            .off(eventNamespace)                                                                                       // 127
            .removeData(moduleNamespace)                                                                               // 128
          ;                                                                                                            // 129
        },                                                                                                             // 130
                                                                                                                       // 131
        refresh: function() {                                                                                          // 132
          module.verbose('Refreshing selector cache');                                                                 // 133
          $module = $(element);                                                                                        // 134
        },                                                                                                             // 135
                                                                                                                       // 136
        add: {                                                                                                         // 137
          defaults: function() {                                                                                       // 138
            var                                                                                                        // 139
              userStates = parameters && $.isPlainObject(parameters.states)                                            // 140
                ? parameters.states                                                                                    // 141
                : {}                                                                                                   // 142
            ;                                                                                                          // 143
            $.each(settings.defaults, function(type, typeStates) {                                                     // 144
              if( module.is[type] !== undefined && module.is[type]() ) {                                               // 145
                module.verbose('Adding default states', type, element);                                                // 146
                $.extend(settings.states, typeStates, userStates);                                                     // 147
              }                                                                                                        // 148
            });                                                                                                        // 149
          }                                                                                                            // 150
        },                                                                                                             // 151
                                                                                                                       // 152
        is: {                                                                                                          // 153
                                                                                                                       // 154
          active: function() {                                                                                         // 155
            return $module.hasClass(className.active);                                                                 // 156
          },                                                                                                           // 157
          loading: function() {                                                                                        // 158
            return $module.hasClass(className.loading);                                                                // 159
          },                                                                                                           // 160
          inactive: function() {                                                                                       // 161
            return !( $module.hasClass(className.active) );                                                            // 162
          },                                                                                                           // 163
                                                                                                                       // 164
          enabled: function() {                                                                                        // 165
            return !( $module.is(settings.filter.active) );                                                            // 166
          },                                                                                                           // 167
          disabled: function() {                                                                                       // 168
            return ( $module.is(settings.filter.active) );                                                             // 169
          },                                                                                                           // 170
          textEnabled: function() {                                                                                    // 171
            return !( $module.is(settings.filter.text) );                                                              // 172
          },                                                                                                           // 173
                                                                                                                       // 174
          // definitions for automatic type detection                                                                  // 175
          button: function() {                                                                                         // 176
            return $module.is('.button:not(a, .submit)');                                                              // 177
          },                                                                                                           // 178
          input: function() {                                                                                          // 179
            return $module.is('input');                                                                                // 180
          }                                                                                                            // 181
        },                                                                                                             // 182
                                                                                                                       // 183
        allow: function(state) {                                                                                       // 184
          module.debug('Now allowing state', state);                                                                   // 185
          states[state] = true;                                                                                        // 186
        },                                                                                                             // 187
        disallow: function(state) {                                                                                    // 188
          module.debug('No longer allowing', state);                                                                   // 189
          states[state] = false;                                                                                       // 190
        },                                                                                                             // 191
                                                                                                                       // 192
        allows: function(state) {                                                                                      // 193
          return states[state] || false;                                                                               // 194
        },                                                                                                             // 195
                                                                                                                       // 196
        enable: {                                                                                                      // 197
          state: function(state) {                                                                                     // 198
            if(module.allows(state)) {                                                                                 // 199
              $module.addClass( className[state] );                                                                    // 200
            }                                                                                                          // 201
          },                                                                                                           // 202
          // convenience                                                                                               // 203
          focus: function() {                                                                                          // 204
            $module.addClass(className.focus);                                                                         // 205
          },                                                                                                           // 206
          hover: function() {                                                                                          // 207
            $module.addClass(className.hover);                                                                         // 208
          },                                                                                                           // 209
          down: function() {                                                                                           // 210
            $module.addClass(className.down);                                                                          // 211
          },                                                                                                           // 212
        },                                                                                                             // 213
                                                                                                                       // 214
        disable: {                                                                                                     // 215
          state: function(state) {                                                                                     // 216
            if(module.allows(state)) {                                                                                 // 217
              $module.removeClass( className[state] );                                                                 // 218
            }                                                                                                          // 219
          },                                                                                                           // 220
          // convenience                                                                                               // 221
          focus: function() {                                                                                          // 222
            $module.removeClass(className.focus);                                                                      // 223
          },                                                                                                           // 224
          hover: function() {                                                                                          // 225
            $module.removeClass(className.hover);                                                                      // 226
          },                                                                                                           // 227
          down: function() {                                                                                           // 228
            $module.removeClass(className.down);                                                                       // 229
          },                                                                                                           // 230
        },                                                                                                             // 231
                                                                                                                       // 232
        toggle: {                                                                                                      // 233
          state: function() {                                                                                          // 234
            var                                                                                                        // 235
              apiRequest = $module.data(metadata.promise)                                                              // 236
            ;                                                                                                          // 237
            if( module.allows('active') && module.is.enabled() ) {                                                     // 238
              module.refresh();                                                                                        // 239
              if(apiRequest !== undefined) {                                                                           // 240
                module.listenTo(apiRequest);                                                                           // 241
              }                                                                                                        // 242
              else {                                                                                                   // 243
                module.change.state();                                                                                 // 244
              }                                                                                                        // 245
            }                                                                                                          // 246
          }                                                                                                            // 247
        },                                                                                                             // 248
                                                                                                                       // 249
        listenTo: function(apiRequest) {                                                                               // 250
          module.debug('API request detected, waiting for state signal', apiRequest);                                  // 251
          if(apiRequest) {                                                                                             // 252
            if(text.loading) {                                                                                         // 253
              module.update.text(text.loading);                                                                        // 254
            }                                                                                                          // 255
            $.when(apiRequest)                                                                                         // 256
              .then(function() {                                                                                       // 257
                if(apiRequest.state() == 'resolved') {                                                                 // 258
                  module.debug('API request succeeded');                                                               // 259
                  settings.activateTest   = function(){ return true; };                                                // 260
                  settings.deactivateTest = function(){ return true; };                                                // 261
                }                                                                                                      // 262
                else {                                                                                                 // 263
                  module.debug('API request failed');                                                                  // 264
                  settings.activateTest   = function(){ return false; };                                               // 265
                  settings.deactivateTest = function(){ return false; };                                               // 266
                }                                                                                                      // 267
                module.change.state();                                                                                 // 268
              })                                                                                                       // 269
            ;                                                                                                          // 270
          }                                                                                                            // 271
          // xhr exists but set to false, beforeSend killed the xhr                                                    // 272
          else {                                                                                                       // 273
            settings.activateTest   = function(){ return false; };                                                     // 274
            settings.deactivateTest = function(){ return false; };                                                     // 275
          }                                                                                                            // 276
        },                                                                                                             // 277
                                                                                                                       // 278
        // checks whether active/inactive state can be given                                                           // 279
        change: {                                                                                                      // 280
                                                                                                                       // 281
          state: function() {                                                                                          // 282
            module.debug('Determining state change direction');                                                        // 283
            // inactive to active change                                                                               // 284
            if( module.is.inactive() ) {                                                                               // 285
              module.activate();                                                                                       // 286
            }                                                                                                          // 287
            else {                                                                                                     // 288
              module.deactivate();                                                                                     // 289
            }                                                                                                          // 290
            if(settings.sync) {                                                                                        // 291
              module.sync();                                                                                           // 292
            }                                                                                                          // 293
            $.proxy(settings.onChange, element)();                                                                     // 294
          },                                                                                                           // 295
                                                                                                                       // 296
          text: function() {                                                                                           // 297
            if( module.is.textEnabled() ) {                                                                            // 298
              if( module.is.active() ) {                                                                               // 299
                if(text.hover) {                                                                                       // 300
                  module.verbose('Changing text to hover text', text.hover);                                           // 301
                  module.update.text(text.hover);                                                                      // 302
                }                                                                                                      // 303
                else if(text.disable) {                                                                                // 304
                  module.verbose('Changing text to disable text', text.disable);                                       // 305
                  module.update.text(text.disable);                                                                    // 306
                }                                                                                                      // 307
              }                                                                                                        // 308
              else {                                                                                                   // 309
                if(text.hover) {                                                                                       // 310
                  module.verbose('Changing text to hover text', text.disable);                                         // 311
                  module.update.text(text.hover);                                                                      // 312
                }                                                                                                      // 313
                else if(text.enable){                                                                                  // 314
                  module.verbose('Changing text to enable text', text.enable);                                         // 315
                  module.update.text(text.enable);                                                                     // 316
                }                                                                                                      // 317
              }                                                                                                        // 318
            }                                                                                                          // 319
          }                                                                                                            // 320
                                                                                                                       // 321
        },                                                                                                             // 322
                                                                                                                       // 323
        activate: function() {                                                                                         // 324
          if( $.proxy(settings.activateTest, element)() ) {                                                            // 325
            module.debug('Setting state to active');                                                                   // 326
            $module                                                                                                    // 327
              .addClass(className.active)                                                                              // 328
            ;                                                                                                          // 329
            module.update.text(text.active);                                                                           // 330
          }                                                                                                            // 331
          $.proxy(settings.onActivate, element)();                                                                     // 332
        },                                                                                                             // 333
                                                                                                                       // 334
        deactivate: function() {                                                                                       // 335
          if($.proxy(settings.deactivateTest, element)() ) {                                                           // 336
            module.debug('Setting state to inactive');                                                                 // 337
            $module                                                                                                    // 338
              .removeClass(className.active)                                                                           // 339
            ;                                                                                                          // 340
            module.update.text(text.inactive);                                                                         // 341
          }                                                                                                            // 342
          $.proxy(settings.onDeactivate, element)();                                                                   // 343
        },                                                                                                             // 344
                                                                                                                       // 345
        sync: function() {                                                                                             // 346
          module.verbose('Syncing other buttons to current state');                                                    // 347
          if( module.is.active() ) {                                                                                   // 348
            $allModules                                                                                                // 349
              .not($module)                                                                                            // 350
                .state('activate');                                                                                    // 351
          }                                                                                                            // 352
          else {                                                                                                       // 353
            $allModules                                                                                                // 354
              .not($module)                                                                                            // 355
                .state('deactivate')                                                                                   // 356
            ;                                                                                                          // 357
          }                                                                                                            // 358
        },                                                                                                             // 359
                                                                                                                       // 360
        get: {                                                                                                         // 361
          text: function() {                                                                                           // 362
            return (settings.selector.text)                                                                            // 363
              ? $module.find(settings.selector.text).text()                                                            // 364
              : $module.html()                                                                                         // 365
            ;                                                                                                          // 366
          },                                                                                                           // 367
          textFor: function(state) {                                                                                   // 368
            return text[state] || false;                                                                               // 369
          }                                                                                                            // 370
        },                                                                                                             // 371
                                                                                                                       // 372
        flash: {                                                                                                       // 373
          text: function(text, duration) {                                                                             // 374
            var                                                                                                        // 375
              previousText = module.get.text()                                                                         // 376
            ;                                                                                                          // 377
            module.debug('Flashing text message', text, duration);                                                     // 378
            text     = text     || settings.text.flash;                                                                // 379
            duration = duration || settings.flashDuration;                                                             // 380
            module.update.text(text);                                                                                  // 381
            setTimeout(function(){                                                                                     // 382
              module.update.text(previousText);                                                                        // 383
            }, duration);                                                                                              // 384
          }                                                                                                            // 385
        },                                                                                                             // 386
                                                                                                                       // 387
        reset: {                                                                                                       // 388
          // on mouseout sets text to previous value                                                                   // 389
          text: function() {                                                                                           // 390
            var                                                                                                        // 391
              activeText   = text.active   || $module.data(metadata.storedText),                                       // 392
              inactiveText = text.inactive || $module.data(metadata.storedText)                                        // 393
            ;                                                                                                          // 394
            if( module.is.textEnabled() ) {                                                                            // 395
              if( module.is.active() && activeText) {                                                                  // 396
                module.verbose('Resetting active text', activeText);                                                   // 397
                module.update.text(activeText);                                                                        // 398
              }                                                                                                        // 399
              else if(inactiveText) {                                                                                  // 400
                module.verbose('Resetting inactive text', activeText);                                                 // 401
                module.update.text(inactiveText);                                                                      // 402
              }                                                                                                        // 403
            }                                                                                                          // 404
          }                                                                                                            // 405
        },                                                                                                             // 406
                                                                                                                       // 407
        update: {                                                                                                      // 408
          text: function(text) {                                                                                       // 409
            var                                                                                                        // 410
              currentText = module.get.text()                                                                          // 411
            ;                                                                                                          // 412
            if(text && text !== currentText) {                                                                         // 413
              module.debug('Updating text', text);                                                                     // 414
              if(settings.selector.text) {                                                                             // 415
                $module                                                                                                // 416
                  .data(metadata.storedText, text)                                                                     // 417
                  .find(settings.selector.text)                                                                        // 418
                    .text(text)                                                                                        // 419
                ;                                                                                                      // 420
              }                                                                                                        // 421
              else {                                                                                                   // 422
                $module                                                                                                // 423
                  .data(metadata.storedText, text)                                                                     // 424
                  .html(text)                                                                                          // 425
                ;                                                                                                      // 426
              }                                                                                                        // 427
            }                                                                                                          // 428
            else {                                                                                                     // 429
              module.debug('Text is already sane, ignoring update', text);                                             // 430
            }                                                                                                          // 431
          }                                                                                                            // 432
        },                                                                                                             // 433
                                                                                                                       // 434
        setting: function(name, value) {                                                                               // 435
          module.debug('Changing setting', name, value);                                                               // 436
          if(value !== undefined) {                                                                                    // 437
            if( $.isPlainObject(name) ) {                                                                              // 438
              $.extend(true, settings, name);                                                                          // 439
            }                                                                                                          // 440
            else {                                                                                                     // 441
              settings[name] = value;                                                                                  // 442
            }                                                                                                          // 443
          }                                                                                                            // 444
          else {                                                                                                       // 445
            return settings[name];                                                                                     // 446
          }                                                                                                            // 447
        },                                                                                                             // 448
        internal: function(name, value) {                                                                              // 449
          module.debug('Changing internal', name, value);                                                              // 450
          if(value !== undefined) {                                                                                    // 451
            if( $.isPlainObject(name) ) {                                                                              // 452
              $.extend(true, module, name);                                                                            // 453
            }                                                                                                          // 454
            else {                                                                                                     // 455
              module[name] = value;                                                                                    // 456
            }                                                                                                          // 457
          }                                                                                                            // 458
          else {                                                                                                       // 459
            return module[name];                                                                                       // 460
          }                                                                                                            // 461
        },                                                                                                             // 462
        debug: function() {                                                                                            // 463
          if(settings.debug) {                                                                                         // 464
            if(settings.performance) {                                                                                 // 465
              module.performance.log(arguments);                                                                       // 466
            }                                                                                                          // 467
            else {                                                                                                     // 468
              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');                 // 469
              module.debug.apply(console, arguments);                                                                  // 470
            }                                                                                                          // 471
          }                                                                                                            // 472
        },                                                                                                             // 473
        verbose: function() {                                                                                          // 474
          if(settings.verbose && settings.debug) {                                                                     // 475
            if(settings.performance) {                                                                                 // 476
              module.performance.log(arguments);                                                                       // 477
            }                                                                                                          // 478
            else {                                                                                                     // 479
              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');               // 480
              module.verbose.apply(console, arguments);                                                                // 481
            }                                                                                                          // 482
          }                                                                                                            // 483
        },                                                                                                             // 484
        error: function() {                                                                                            // 485
          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');                    // 486
          module.error.apply(console, arguments);                                                                      // 487
        },                                                                                                             // 488
        performance: {                                                                                                 // 489
          log: function(message) {                                                                                     // 490
            var                                                                                                        // 491
              currentTime,                                                                                             // 492
              executionTime,                                                                                           // 493
              previousTime                                                                                             // 494
            ;                                                                                                          // 495
            if(settings.performance) {                                                                                 // 496
              currentTime   = new Date().getTime();                                                                    // 497
              previousTime  = time || currentTime;                                                                     // 498
              executionTime = currentTime - previousTime;                                                              // 499
              time          = currentTime;                                                                             // 500
              performance.push({                                                                                       // 501
                'Element'        : element,                                                                            // 502
                'Name'           : message[0],                                                                         // 503
                'Arguments'      : [].slice.call(message, 1) || '',                                                    // 504
                'Execution Time' : executionTime                                                                       // 505
              });                                                                                                      // 506
            }                                                                                                          // 507
            clearTimeout(module.performance.timer);                                                                    // 508
            module.performance.timer = setTimeout(module.performance.display, 100);                                    // 509
          },                                                                                                           // 510
          display: function() {                                                                                        // 511
            var                                                                                                        // 512
              title = settings.name + ':',                                                                             // 513
              totalTime = 0                                                                                            // 514
            ;                                                                                                          // 515
            time = false;                                                                                              // 516
            clearTimeout(module.performance.timer);                                                                    // 517
            $.each(performance, function(index, data) {                                                                // 518
              totalTime += data['Execution Time'];                                                                     // 519
            });                                                                                                        // 520
            title += ' ' + totalTime + 'ms';                                                                           // 521
            if(moduleSelector) {                                                                                       // 522
              title += ' \'' + moduleSelector + '\'';                                                                  // 523
            }                                                                                                          // 524
            if($allModules.size() > 1) {                                                                               // 525
              title += ' ' + '(' + $allModules.size() + ')';                                                           // 526
            }                                                                                                          // 527
            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {              // 528
              console.groupCollapsed(title);                                                                           // 529
              if(console.table) {                                                                                      // 530
                console.table(performance);                                                                            // 531
              }                                                                                                        // 532
              else {                                                                                                   // 533
                $.each(performance, function(index, data) {                                                            // 534
                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');                                      // 535
                });                                                                                                    // 536
              }                                                                                                        // 537
              console.groupEnd();                                                                                      // 538
            }                                                                                                          // 539
            performance = [];                                                                                          // 540
          }                                                                                                            // 541
        },                                                                                                             // 542
        invoke: function(query, passedArguments, context) {                                                            // 543
          var                                                                                                          // 544
            maxDepth,                                                                                                  // 545
            found,                                                                                                     // 546
            response                                                                                                   // 547
          ;                                                                                                            // 548
          passedArguments = passedArguments || queryArguments;                                                         // 549
          context         = element         || context;                                                                // 550
          if(typeof query == 'string' && instance !== undefined) {                                                     // 551
            query    = query.split(/[\. ]/);                                                                           // 552
            maxDepth = query.length - 1;                                                                               // 553
            $.each(query, function(depth, value) {                                                                     // 554
              var camelCaseValue = (depth != maxDepth)                                                                 // 555
                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)                         // 556
                : query                                                                                                // 557
              ;                                                                                                        // 558
              if( $.isPlainObject( instance[camelCaseValue] ) && (depth != maxDepth) ) {                               // 559
                instance = instance[camelCaseValue];                                                                   // 560
              }                                                                                                        // 561
              else if( instance[camelCaseValue] !== undefined ) {                                                      // 562
                found = instance[camelCaseValue];                                                                      // 563
                return false;                                                                                          // 564
              }                                                                                                        // 565
              else if( $.isPlainObject( instance[value] ) && (depth != maxDepth) ) {                                   // 566
                instance = instance[value];                                                                            // 567
              }                                                                                                        // 568
              else if( instance[value] !== undefined ) {                                                               // 569
                found = instance[value];                                                                               // 570
                return false;                                                                                          // 571
              }                                                                                                        // 572
              else {                                                                                                   // 573
                module.error(error.method, query);                                                                     // 574
                return false;                                                                                          // 575
              }                                                                                                        // 576
            });                                                                                                        // 577
          }                                                                                                            // 578
          if ( $.isFunction( found ) ) {                                                                               // 579
            response = found.apply(context, passedArguments);                                                          // 580
          }                                                                                                            // 581
          else if(found !== undefined) {                                                                               // 582
            response = found;                                                                                          // 583
          }                                                                                                            // 584
          if($.isArray(returnedValue)) {                                                                               // 585
            returnedValue.push(response);                                                                              // 586
          }                                                                                                            // 587
          else if(returnedValue !== undefined) {                                                                       // 588
            returnedValue = [returnedValue, response];                                                                 // 589
          }                                                                                                            // 590
          else if(response !== undefined) {                                                                            // 591
            returnedValue = response;                                                                                  // 592
          }                                                                                                            // 593
          return found;                                                                                                // 594
        }                                                                                                              // 595
      };                                                                                                               // 596
      if(methodInvoked) {                                                                                              // 597
        if(instance === undefined) {                                                                                   // 598
          module.initialize();                                                                                         // 599
        }                                                                                                              // 600
        module.invoke(query);                                                                                          // 601
      }                                                                                                                // 602
      else {                                                                                                           // 603
        if(instance !== undefined) {                                                                                   // 604
          module.destroy();                                                                                            // 605
        }                                                                                                              // 606
        module.initialize();                                                                                           // 607
      }                                                                                                                // 608
                                                                                                                       // 609
    })                                                                                                                 // 610
  ;                                                                                                                    // 611
                                                                                                                       // 612
  return (returnedValue !== undefined)                                                                                 // 613
    ? returnedValue                                                                                                    // 614
    : this                                                                                                             // 615
  ;                                                                                                                    // 616
};                                                                                                                     // 617
                                                                                                                       // 618
$.fn.state.settings = {                                                                                                // 619
                                                                                                                       // 620
  // module info                                                                                                       // 621
  name : 'State',                                                                                                      // 622
                                                                                                                       // 623
  // debug output                                                                                                      // 624
  debug      : true,                                                                                                   // 625
                                                                                                                       // 626
  // verbose debug output                                                                                              // 627
  verbose    : true,                                                                                                   // 628
                                                                                                                       // 629
  // namespace for events                                                                                              // 630
  namespace  : 'state',                                                                                                // 631
                                                                                                                       // 632
  // debug data includes performance                                                                                   // 633
  performance: true,                                                                                                   // 634
                                                                                                                       // 635
  // callback occurs on state change                                                                                   // 636
  onActivate   : function() {},                                                                                        // 637
  onDeactivate : function() {},                                                                                        // 638
  onChange     : function() {},                                                                                        // 639
                                                                                                                       // 640
  // state test functions                                                                                              // 641
  activateTest   : function() { return true; },                                                                        // 642
  deactivateTest : function() { return true; },                                                                        // 643
                                                                                                                       // 644
  // whether to automatically map default states                                                                       // 645
  automatic     : true,                                                                                                // 646
                                                                                                                       // 647
  // activate / deactivate changes all elements instantiated at same time                                              // 648
  sync          : false,                                                                                               // 649
                                                                                                                       // 650
  // default flash text duration, used for temporarily changing text of an element                                     // 651
  flashDuration : 3000,                                                                                                // 652
                                                                                                                       // 653
  // selector filter                                                                                                   // 654
  filter     : {                                                                                                       // 655
    text   : '.loading, .disabled',                                                                                    // 656
    active : '.disabled'                                                                                               // 657
  },                                                                                                                   // 658
                                                                                                                       // 659
  context    : false,                                                                                                  // 660
                                                                                                                       // 661
  // error                                                                                                             // 662
  error: {                                                                                                             // 663
    method : 'The method you called is not defined.'                                                                   // 664
  },                                                                                                                   // 665
                                                                                                                       // 666
  // metadata                                                                                                          // 667
  metadata: {                                                                                                          // 668
    promise    : 'promise',                                                                                            // 669
    storedText : 'stored-text'                                                                                         // 670
  },                                                                                                                   // 671
                                                                                                                       // 672
  // change class on state                                                                                             // 673
  className: {                                                                                                         // 674
    focus   : 'focus',                                                                                                 // 675
    hover   : 'hover',                                                                                                 // 676
    down    : 'down',                                                                                                  // 677
    active  : 'active',                                                                                                // 678
    loading : 'loading'                                                                                                // 679
  },                                                                                                                   // 680
                                                                                                                       // 681
  selector: {                                                                                                          // 682
    // selector for text node                                                                                          // 683
    text: false                                                                                                        // 684
  },                                                                                                                   // 685
                                                                                                                       // 686
  defaults : {                                                                                                         // 687
    input: {                                                                                                           // 688
      hover   : true,                                                                                                  // 689
      focus   : true,                                                                                                  // 690
      down    : true,                                                                                                  // 691
      loading : false,                                                                                                 // 692
      active  : false                                                                                                  // 693
    },                                                                                                                 // 694
    button: {                                                                                                          // 695
      hover   : true,                                                                                                  // 696
      focus   : false,                                                                                                 // 697
      down    : true,                                                                                                  // 698
      active  : true,                                                                                                  // 699
      loading : true                                                                                                   // 700
    }                                                                                                                  // 701
  },                                                                                                                   // 702
                                                                                                                       // 703
  states     : {                                                                                                       // 704
    hover   : true,                                                                                                    // 705
    focus   : true,                                                                                                    // 706
    down    : true,                                                                                                    // 707
    loading : false,                                                                                                   // 708
    active  : false                                                                                                    // 709
  },                                                                                                                   // 710
                                                                                                                       // 711
  text     : {                                                                                                         // 712
    flash    : false,                                                                                                  // 713
    hover    : false,                                                                                                  // 714
    active   : false,                                                                                                  // 715
    inactive : false,                                                                                                  // 716
    enable   : false,                                                                                                  // 717
    disable  : false                                                                                                   // 718
  }                                                                                                                    // 719
                                                                                                                       // 720
};                                                                                                                     // 721
                                                                                                                       // 722
                                                                                                                       // 723
                                                                                                                       // 724
})( jQuery, window , document );                                                                                       // 725
                                                                                                                       // 726
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}).call(this);






(function () {

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// packages/semantic-ui/lib/semantic-ui/build/uncompressed/modules/chatroom.js                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/*                                                                                                                     // 1
 * # Semantic - Chatroom                                                                                               // 2
 * http://github.com/jlukic/semantic-ui/                                                                               // 3
 *                                                                                                                     // 4
 *                                                                                                                     // 5
 * Copyright 2013 Contributors                                                                                         // 6
 * Released under the MIT license                                                                                      // 7
 * http://opensource.org/licenses/MIT                                                                                  // 8
 *                                                                                                                     // 9
 */                                                                                                                    // 10
                                                                                                                       // 11
;(function ($, window, document, undefined) {                                                                          // 12
                                                                                                                       // 13
$.fn.chatroom = function(parameters) {                                                                                 // 14
  var                                                                                                                  // 15
    $allModules    = $(this),                                                                                          // 16
    moduleSelector = $allModules.selector || '',                                                                       // 17
                                                                                                                       // 18
    time           = new Date().getTime(),                                                                             // 19
    performance    = [],                                                                                               // 20
                                                                                                                       // 21
    query          = arguments[0],                                                                                     // 22
    methodInvoked  = (typeof query == 'string'),                                                                       // 23
    queryArguments = [].slice.call(arguments, 1),                                                                      // 24
    returnedValue                                                                                                      // 25
  ;                                                                                                                    // 26
  $(this)                                                                                                              // 27
    .each(function() {                                                                                                 // 28
      var                                                                                                              // 29
        settings  = $.extend(true, {}, $.fn.chatroom.settings, parameters),                                            // 30
                                                                                                                       // 31
        className = settings.className,                                                                                // 32
        namespace = settings.namespace,                                                                                // 33
        selector  = settings.selector,                                                                                 // 34
        error     = settings.error,                                                                                    // 35
                                                                                                                       // 36
        $module         = $(this),                                                                                     // 37
                                                                                                                       // 38
        $expandButton   = $module.find(selector.expandButton),                                                         // 39
        $userListButton = $module.find(selector.userListButton),                                                       // 40
                                                                                                                       // 41
        $userList       = $module.find(selector.userList),                                                             // 42
        $room           = $module.find(selector.room),                                                                 // 43
        $userCount      = $module.find(selector.userCount),                                                            // 44
                                                                                                                       // 45
        $log            = $module.find(selector.log),                                                                  // 46
        $message        = $module.find(selector.message),                                                              // 47
                                                                                                                       // 48
        $messageInput   = $module.find(selector.messageInput),                                                         // 49
        $messageButton  = $module.find(selector.messageButton),                                                        // 50
                                                                                                                       // 51
        instance        = $module.data('module'),                                                                      // 52
        element         = this,                                                                                        // 53
                                                                                                                       // 54
        html            = '',                                                                                          // 55
        users           = {},                                                                                          // 56
                                                                                                                       // 57
        channel,                                                                                                       // 58
        loggedInUser,                                                                                                  // 59
                                                                                                                       // 60
        message,                                                                                                       // 61
        count,                                                                                                         // 62
                                                                                                                       // 63
        height,                                                                                                        // 64
                                                                                                                       // 65
        pusher,                                                                                                        // 66
        module                                                                                                         // 67
      ;                                                                                                                // 68
                                                                                                                       // 69
      module = {                                                                                                       // 70
                                                                                                                       // 71
        width: {                                                                                                       // 72
          log      : $log.width(),                                                                                     // 73
          userList : $userList.outerWidth()                                                                            // 74
        },                                                                                                             // 75
                                                                                                                       // 76
        initialize: function() {                                                                                       // 77
                                                                                                                       // 78
          // check error conditions                                                                                    // 79
          if(Pusher === undefined) {                                                                                   // 80
            module.error(error.pusher);                                                                                // 81
          }                                                                                                            // 82
          if(settings.key === undefined || settings.channelName === undefined) {                                       // 83
            module.error(error.key);                                                                                   // 84
            return false;                                                                                              // 85
          }                                                                                                            // 86
          else if( !(settings.endpoint.message || settings.endpoint.authentication) ) {                                // 87
            module.error(error.endpoint);                                                                              // 88
            return false;                                                                                              // 89
          }                                                                                                            // 90
                                                                                                                       // 91
          // define pusher                                                                                             // 92
          pusher                       = new Pusher(settings.key);                                                     // 93
          Pusher.channel_auth_endpoint = settings.endpoint.authentication;                                             // 94
                                                                                                                       // 95
          channel = pusher.subscribe(settings.channelName);                                                            // 96
                                                                                                                       // 97
          channel.bind('pusher:subscription_succeeded', module.user.list.create);                                      // 98
          channel.bind('pusher:subscription_error', module.error);                                                     // 99
          channel.bind('pusher:member_added', module.user.joined);                                                     // 100
          channel.bind('pusher:member_removed', module.user.left);                                                     // 101
          channel.bind('update_messages', module.message.receive);                                                     // 102
                                                                                                                       // 103
          $.each(settings.customEvents, function(label, value) {                                                       // 104
            channel.bind(label, value);                                                                                // 105
          });                                                                                                          // 106
                                                                                                                       // 107
          // bind module events                                                                                        // 108
          $userListButton                                                                                              // 109
            .on('click.' +  namespace, module.event.toggleUserList)                                                    // 110
          ;                                                                                                            // 111
          $expandButton                                                                                                // 112
            .on('click.'   +  namespace, module.event.toggleExpand)                                                    // 113
          ;                                                                                                            // 114
          $messageInput                                                                                                // 115
            .on('keydown.' +  namespace, module.event.input.keydown)                                                   // 116
            .on('keyup.'   +  namespace, module.event.input.keyup)                                                     // 117
          ;                                                                                                            // 118
          $messageButton                                                                                               // 119
            .on('mouseenter.' +  namespace, module.event.hover)                                                        // 120
            .on('mouseleave.' +  namespace, module.event.hover)                                                        // 121
            .on('click.' +  namespace, module.event.submit)                                                            // 122
          ;                                                                                                            // 123
          // scroll to bottom of chat log                                                                              // 124
          $log                                                                                                         // 125
            .animate({                                                                                                 // 126
              scrollTop: $log.prop('scrollHeight')                                                                     // 127
            }, 400)                                                                                                    // 128
          ;                                                                                                            // 129
          $module                                                                                                      // 130
            .data('module', module)                                                                                    // 131
            .addClass(className.loading)                                                                               // 132
          ;                                                                                                            // 133
                                                                                                                       // 134
        },                                                                                                             // 135
                                                                                                                       // 136
        // refresh module                                                                                              // 137
        refresh: function() {                                                                                          // 138
          // reset width calculations                                                                                  // 139
          $userListButton                                                                                              // 140
            .removeClass(className.active)                                                                             // 141
          ;                                                                                                            // 142
          module.width = {                                                                                             // 143
            log      : $log.width(),                                                                                   // 144
            userList : $userList.outerWidth()                                                                          // 145
          };                                                                                                           // 146
          if( $userListButton.hasClass(className.active) ) {                                                           // 147
            module.user.list.hide();                                                                                   // 148
          }                                                                                                            // 149
          $module.data('module', module);                                                                              // 150
        },                                                                                                             // 151
                                                                                                                       // 152
        user: {                                                                                                        // 153
                                                                                                                       // 154
          updateCount: function() {                                                                                    // 155
            if(settings.userCount) {                                                                                   // 156
              users = $module.data('users');                                                                           // 157
              count = 0;                                                                                               // 158
              $.each(users, function() {                                                                               // 159
                count++;                                                                                               // 160
              });                                                                                                      // 161
              $userCount                                                                                               // 162
                .html( settings.templates.userCount(count) )                                                           // 163
              ;                                                                                                        // 164
            }                                                                                                          // 165
          },                                                                                                           // 166
                                                                                                                       // 167
          // add user to user list                                                                                     // 168
          joined: function(member) {                                                                                   // 169
            users = $module.data('users');                                                                             // 170
            if(member.id != 'anonymous' && users[ member.id ] === undefined ) {                                        // 171
              users[ member.id ] = member.info;                                                                        // 172
              if(settings.randomColor && member.info.color === undefined) {                                            // 173
                member.info.color = settings.templates.color(member.id);                                               // 174
              }                                                                                                        // 175
              html = settings.templates.userList(member.info);                                                         // 176
              if(member.info.isAdmin) {                                                                                // 177
                $(html)                                                                                                // 178
                  .prependTo($userList)                                                                                // 179
                ;                                                                                                      // 180
              }                                                                                                        // 181
              else {                                                                                                   // 182
                $(html)                                                                                                // 183
                  .appendTo($userList)                                                                                 // 184
                ;                                                                                                      // 185
              }                                                                                                        // 186
              if(settings.partingMessages) {                                                                           // 187
                $log                                                                                                   // 188
                  .append( settings.templates.joined(member.info) )                                                    // 189
                ;                                                                                                      // 190
                module.message.scroll.test();                                                                          // 191
              }                                                                                                        // 192
              module.user.updateCount();                                                                               // 193
            }                                                                                                          // 194
          },                                                                                                           // 195
                                                                                                                       // 196
          // remove user from user list                                                                                // 197
          left: function(member) {                                                                                     // 198
            users = $module.data('users');                                                                             // 199
            if(member !== undefined && member.id !== 'anonymous') {                                                    // 200
              delete users[ member.id ];                                                                               // 201
              $module                                                                                                  // 202
                .data('users', users)                                                                                  // 203
              ;                                                                                                        // 204
              $userList                                                                                                // 205
                .find('[data-id='+ member.id + ']')                                                                    // 206
                  .remove()                                                                                            // 207
              ;                                                                                                        // 208
              if(settings.partingMessages) {                                                                           // 209
                $log                                                                                                   // 210
                  .append( settings.templates.left(member.info) )                                                      // 211
                ;                                                                                                      // 212
                module.message.scroll.test();                                                                          // 213
              }                                                                                                        // 214
              module.user.updateCount();                                                                               // 215
            }                                                                                                          // 216
          },                                                                                                           // 217
                                                                                                                       // 218
          list: {                                                                                                      // 219
                                                                                                                       // 220
            // receives list of members and generates user list                                                        // 221
            create: function(members) {                                                                                // 222
              users = {};                                                                                              // 223
              members.each(function(member) {                                                                          // 224
                if(member.id !== 'anonymous' && member.id !== 'undefined') {                                           // 225
                  if(settings.randomColor && member.info.color === undefined) {                                        // 226
                    member.info.color = settings.templates.color(member.id);                                           // 227
                  }                                                                                                    // 228
                  // sort list with admin first                                                                        // 229
                  html = (member.info.isAdmin)                                                                         // 230
                    ? settings.templates.userList(member.info) + html                                                  // 231
                    : html + settings.templates.userList(member.info)                                                  // 232
                  ;                                                                                                    // 233
                  users[ member.id ] = member.info;                                                                    // 234
                }                                                                                                      // 235
              });                                                                                                      // 236
              $module                                                                                                  // 237
                .data('users', users)                                                                                  // 238
                .data('user', users[members.me.id] )                                                                   // 239
                .removeClass(className.loading)                                                                        // 240
              ;                                                                                                        // 241
              $userList                                                                                                // 242
                .html(html)                                                                                            // 243
              ;                                                                                                        // 244
              module.user.updateCount();                                                                               // 245
              $.proxy(settings.onJoin, $userList.children())();                                                        // 246
            },                                                                                                         // 247
                                                                                                                       // 248
            // shows user list                                                                                         // 249
            show: function() {                                                                                         // 250
              $log                                                                                                     // 251
                .animate({                                                                                             // 252
                  width: (module.width.log - module.width.userList)                                                    // 253
                }, {                                                                                                   // 254
                  duration : settings.speed,                                                                           // 255
                  easing   : settings.easing,                                                                          // 256
                  complete : module.message.scroll.move                                                                // 257
                })                                                                                                     // 258
              ;                                                                                                        // 259
            },                                                                                                         // 260
                                                                                                                       // 261
            // hides user list                                                                                         // 262
            hide: function() {                                                                                         // 263
              $log                                                                                                     // 264
                .stop()                                                                                                // 265
                .animate({                                                                                             // 266
                  width: (module.width.log)                                                                            // 267
                }, {                                                                                                   // 268
                  duration : settings.speed,                                                                           // 269
                  easing   : settings.easing,                                                                          // 270
                  complete : module.message.scroll.move                                                                // 271
                })                                                                                                     // 272
              ;                                                                                                        // 273
            }                                                                                                          // 274
                                                                                                                       // 275
          }                                                                                                            // 276
                                                                                                                       // 277
        },                                                                                                             // 278
                                                                                                                       // 279
        message: {                                                                                                     // 280
                                                                                                                       // 281
          // handles scrolling of chat log                                                                             // 282
          scroll: {                                                                                                    // 283
            test: function() {                                                                                         // 284
              height = $log.prop('scrollHeight') - $log.height();                                                      // 285
              if( Math.abs($log.scrollTop() - height) < settings.scrollArea) {                                         // 286
                module.message.scroll.move();                                                                          // 287
              }                                                                                                        // 288
            },                                                                                                         // 289
                                                                                                                       // 290
            move: function() {                                                                                         // 291
              height = $log.prop('scrollHeight') - $log.height();                                                      // 292
              $log                                                                                                     // 293
                .scrollTop(height)                                                                                     // 294
              ;                                                                                                        // 295
            }                                                                                                          // 296
          },                                                                                                           // 297
                                                                                                                       // 298
          // sends chat message                                                                                        // 299
          send: function(message) {                                                                                    // 300
            if( !module.utils.emptyString(message) ) {                                                                 // 301
              $.api({                                                                                                  // 302
                url    : settings.endpoint.message,                                                                    // 303
                method : 'POST',                                                                                       // 304
                data   : {                                                                                             // 305
                  'message': {                                                                                         // 306
                    content   : message,                                                                               // 307
                    timestamp : new Date().getTime()                                                                   // 308
                  }                                                                                                    // 309
                }                                                                                                      // 310
              });                                                                                                      // 311
            }                                                                                                          // 312
          },                                                                                                           // 313
                                                                                                                       // 314
          // receives chat response and processes                                                                      // 315
          receive: function(response) {                                                                                // 316
            message      = response.data;                                                                              // 317
            users        = $module.data('users');                                                                      // 318
            loggedInUser = $module.data('user');                                                                       // 319
            if(users[ message.userID] !== undefined) {                                                                 // 320
              // logged in user's messages already pushed instantly                                                    // 321
              if(loggedInUser === undefined || loggedInUser.id != message.userID) {                                    // 322
                message.user = users[ message.userID ];                                                                // 323
                module.message.display(message);                                                                       // 324
              }                                                                                                        // 325
            }                                                                                                          // 326
          },                                                                                                           // 327
                                                                                                                       // 328
          // displays message in chat log                                                                              // 329
          display: function(message) {                                                                                 // 330
            $log                                                                                                       // 331
              .append( settings.templates.message(message) )                                                           // 332
            ;                                                                                                          // 333
            module.message.scroll.test();                                                                              // 334
            $.proxy(settings.onMessage, $log.children().last() )();                                                    // 335
          }                                                                                                            // 336
                                                                                                                       // 337
        },                                                                                                             // 338
                                                                                                                       // 339
        expand: function() {                                                                                           // 340
          $module                                                                                                      // 341
            .addClass(className.expand)                                                                                // 342
          ;                                                                                                            // 343
          $.proxy(settings.onExpand, $module )();                                                                      // 344
          module.refresh();                                                                                            // 345
        },                                                                                                             // 346
                                                                                                                       // 347
        contract: function() {                                                                                         // 348
          $module                                                                                                      // 349
            .removeClass(className.expand)                                                                             // 350
          ;                                                                                                            // 351
          $.proxy(settings.onContract, $module )();                                                                    // 352
          module.refresh();                                                                                            // 353
        },                                                                                                             // 354
                                                                                                                       // 355
        event: {                                                                                                       // 356
                                                                                                                       // 357
          input: {                                                                                                     // 358
                                                                                                                       // 359
            keydown: function(event) {                                                                                 // 360
              if(event.which == 13) {                                                                                  // 361
                $messageButton                                                                                         // 362
                  .addClass(className.down)                                                                            // 363
                ;                                                                                                      // 364
              }                                                                                                        // 365
            },                                                                                                         // 366
                                                                                                                       // 367
            keyup: function(event) {                                                                                   // 368
              if(event.which == 13) {                                                                                  // 369
                $messageButton                                                                                         // 370
                  .removeClass(className.down)                                                                         // 371
                ;                                                                                                      // 372
                module.event.submit();                                                                                 // 373
              }                                                                                                        // 374
            }                                                                                                          // 375
                                                                                                                       // 376
          },                                                                                                           // 377
                                                                                                                       // 378
          // handles message form submit                                                                               // 379
          submit: function() {                                                                                         // 380
            var                                                                                                        // 381
              message      = $messageInput.val(),                                                                      // 382
              loggedInUser = $module.data('user')                                                                      // 383
            ;                                                                                                          // 384
            if(loggedInUser !== undefined && !module.utils.emptyString(message)) {                                     // 385
              module.message.send(message);                                                                            // 386
              // display immediately                                                                                   // 387
              module.message.display({                                                                                 // 388
                user: loggedInUser,                                                                                    // 389
                text: message                                                                                          // 390
              });                                                                                                      // 391
              module.message.scroll.move();                                                                            // 392
              $messageInput                                                                                            // 393
                .val('')                                                                                               // 394
              ;                                                                                                        // 395
                                                                                                                       // 396
            }                                                                                                          // 397
          },                                                                                                           // 398
                                                                                                                       // 399
          // handles button click on expand button                                                                     // 400
          toggleExpand: function() {                                                                                   // 401
            if( !$module.hasClass(className.expand) ) {                                                                // 402
              $expandButton                                                                                            // 403
                .addClass(className.active)                                                                            // 404
              ;                                                                                                        // 405
              module.expand();                                                                                         // 406
            }                                                                                                          // 407
            else {                                                                                                     // 408
              $expandButton                                                                                            // 409
                .removeClass(className.active)                                                                         // 410
              ;                                                                                                        // 411
              module.contract();                                                                                       // 412
            }                                                                                                          // 413
          },                                                                                                           // 414
                                                                                                                       // 415
          // handles button click on user list button                                                                  // 416
          toggleUserList: function() {                                                                                 // 417
            if( !$log.is(':animated') ) {                                                                              // 418
              if( !$userListButton.hasClass(className.active) ) {                                                      // 419
                $userListButton                                                                                        // 420
                  .addClass(className.active)                                                                          // 421
                ;                                                                                                      // 422
                module.user.list.show();                                                                               // 423
              }                                                                                                        // 424
              else {                                                                                                   // 425
                $userListButton                                                                                        // 426
                  .removeClass('active')                                                                               // 427
                ;                                                                                                      // 428
                module.user.list.hide();                                                                               // 429
              }                                                                                                        // 430
            }                                                                                                          // 431
                                                                                                                       // 432
          }                                                                                                            // 433
        },                                                                                                             // 434
                                                                                                                       // 435
        utils: {                                                                                                       // 436
                                                                                                                       // 437
          emptyString: function(string) {                                                                              // 438
            if(typeof string == 'string') {                                                                            // 439
              return (string.search(/\S/) == -1);                                                                      // 440
            }                                                                                                          // 441
            return false;                                                                                              // 442
          }                                                                                                            // 443
                                                                                                                       // 444
        },                                                                                                             // 445
                                                                                                                       // 446
      setting: function(name, value) {                                                                                 // 447
        if(value !== undefined) {                                                                                      // 448
          if( $.isPlainObject(name) ) {                                                                                // 449
            $.extend(true, settings, name);                                                                            // 450
          }                                                                                                            // 451
          else {                                                                                                       // 452
            settings[name] = value;                                                                                    // 453
          }                                                                                                            // 454
        }                                                                                                              // 455
        else {                                                                                                         // 456
          return settings[name];                                                                                       // 457
        }                                                                                                              // 458
      },                                                                                                               // 459
      internal: function(name, value) {                                                                                // 460
        if( $.isPlainObject(name) ) {                                                                                  // 461
          $.extend(true, module, name);                                                                                // 462
        }                                                                                                              // 463
        else if(value !== undefined) {                                                                                 // 464
          module[name] = value;                                                                                        // 465
        }                                                                                                              // 466
        else {                                                                                                         // 467
          return module[name];                                                                                         // 468
        }                                                                                                              // 469
      },                                                                                                               // 470
      debug: function() {                                                                                              // 471
        if(settings.debug) {                                                                                           // 472
          if(settings.performance) {                                                                                   // 473
            module.performance.log(arguments);                                                                         // 474
          }                                                                                                            // 475
          else {                                                                                                       // 476
            module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');                   // 477
            module.debug.apply(console, arguments);                                                                    // 478
          }                                                                                                            // 479
        }                                                                                                              // 480
      },                                                                                                               // 481
      verbose: function() {                                                                                            // 482
        if(settings.verbose && settings.debug) {                                                                       // 483
          if(settings.performance) {                                                                                   // 484
            module.performance.log(arguments);                                                                         // 485
          }                                                                                                            // 486
          else {                                                                                                       // 487
            module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');                 // 488
            module.verbose.apply(console, arguments);                                                                  // 489
          }                                                                                                            // 490
        }                                                                                                              // 491
      },                                                                                                               // 492
      error: function() {                                                                                              // 493
        module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');                      // 494
        module.error.apply(console, arguments);                                                                        // 495
      },                                                                                                               // 496
      performance: {                                                                                                   // 497
        log: function(message) {                                                                                       // 498
          var                                                                                                          // 499
            currentTime,                                                                                               // 500
            executionTime,                                                                                             // 501
            previousTime                                                                                               // 502
          ;                                                                                                            // 503
          if(settings.performance) {                                                                                   // 504
            currentTime   = new Date().getTime();                                                                      // 505
            previousTime  = time || currentTime;                                                                       // 506
            executionTime = currentTime - previousTime;                                                                // 507
            time          = currentTime;                                                                               // 508
            performance.push({                                                                                         // 509
              'Element'        : element,                                                                              // 510
              'Name'           : message[0],                                                                           // 511
              'Arguments'      : [].slice.call(message, 1) || '',                                                      // 512
              'Execution Time' : executionTime                                                                         // 513
            });                                                                                                        // 514
          }                                                                                                            // 515
          clearTimeout(module.performance.timer);                                                                      // 516
          module.performance.timer = setTimeout(module.performance.display, 100);                                      // 517
        },                                                                                                             // 518
        display: function() {                                                                                          // 519
          var                                                                                                          // 520
            title = settings.name + ':',                                                                               // 521
            totalTime = 0                                                                                              // 522
          ;                                                                                                            // 523
          time = false;                                                                                                // 524
          clearTimeout(module.performance.timer);                                                                      // 525
          $.each(performance, function(index, data) {                                                                  // 526
            totalTime += data['Execution Time'];                                                                       // 527
          });                                                                                                          // 528
          title += ' ' + totalTime + 'ms';                                                                             // 529
          if(moduleSelector) {                                                                                         // 530
            title += ' \'' + moduleSelector + '\'';                                                                    // 531
          }                                                                                                            // 532
          if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {                // 533
            console.groupCollapsed(title);                                                                             // 534
            if(console.table) {                                                                                        // 535
              console.table(performance);                                                                              // 536
            }                                                                                                          // 537
            else {                                                                                                     // 538
              $.each(performance, function(index, data) {                                                              // 539
                console.log(data['Name'] + ': ' + data['Execution Time']+'ms');                                        // 540
              });                                                                                                      // 541
            }                                                                                                          // 542
            console.groupEnd();                                                                                        // 543
          }                                                                                                            // 544
          performance = [];                                                                                            // 545
        }                                                                                                              // 546
      },                                                                                                               // 547
      invoke: function(query, passedArguments, context) {                                                              // 548
        var                                                                                                            // 549
          maxDepth,                                                                                                    // 550
          found                                                                                                        // 551
        ;                                                                                                              // 552
        passedArguments = passedArguments || queryArguments;                                                           // 553
        context         = element         || context;                                                                  // 554
        if(typeof query == 'string' && instance !== undefined) {                                                       // 555
          query    = query.split(/[\. ]/);                                                                             // 556
          maxDepth = query.length - 1;                                                                                 // 557
          $.each(query, function(depth, value) {                                                                       // 558
            if( $.isPlainObject( instance[value] ) && (depth != maxDepth) ) {                                          // 559
              instance = instance[value];                                                                              // 560
            }                                                                                                          // 561
            else if( instance[value] !== undefined ) {                                                                 // 562
              found = instance[value];                                                                                 // 563
            }                                                                                                          // 564
            else {                                                                                                     // 565
              module.error(error.method, query);                                                                       // 566
            }                                                                                                          // 567
          });                                                                                                          // 568
        }                                                                                                              // 569
        if ( $.isFunction( found ) ) {                                                                                 // 570
          return found.apply(context, passedArguments);                                                                // 571
        }                                                                                                              // 572
        return found || false;                                                                                         // 573
      }                                                                                                                // 574
    };                                                                                                                 // 575
                                                                                                                       // 576
    if(methodInvoked) {                                                                                                // 577
      if(instance === undefined) {                                                                                     // 578
        module.initialize();                                                                                           // 579
      }                                                                                                                // 580
      module.invoke(query);                                                                                            // 581
    }                                                                                                                  // 582
    else {                                                                                                             // 583
      if(instance !== undefined) {                                                                                     // 584
        module.destroy();                                                                                              // 585
      }                                                                                                                // 586
      module.initialize();                                                                                             // 587
    }                                                                                                                  // 588
  })                                                                                                                   // 589
;                                                                                                                      // 590
                                                                                                                       // 591
  return (returnedValue)                                                                                               // 592
    ? returnedValue                                                                                                    // 593
    : this                                                                                                             // 594
  ;                                                                                                                    // 595
};                                                                                                                     // 596
                                                                                                                       // 597
  $.fn.chatroom.settings = {                                                                                           // 598
                                                                                                                       // 599
    name            : 'Chat',                                                                                          // 600
    debug           : false,                                                                                           // 601
    namespace       : 'chat',                                                                                          // 602
                                                                                                                       // 603
    channel         : 'present-chat',                                                                                  // 604
                                                                                                                       // 605
    onJoin          : function(){},                                                                                    // 606
    onMessage       : function(){},                                                                                    // 607
    onExpand        : function(){},                                                                                    // 608
    onContract      : function(){},                                                                                    // 609
                                                                                                                       // 610
    customEvents    : {},                                                                                              // 611
                                                                                                                       // 612
    partingMessages : false,                                                                                           // 613
    userCount       : true,                                                                                            // 614
    randomColor     : true,                                                                                            // 615
                                                                                                                       // 616
    speed           : 300,                                                                                             // 617
    easing          : 'easeOutQuint',                                                                                  // 618
                                                                                                                       // 619
    // pixels from bottom of chat log that should trigger auto scroll to bottom                                        // 620
    scrollArea      : 9999,                                                                                            // 621
                                                                                                                       // 622
    endpoint        : {                                                                                                // 623
      message        : false,                                                                                          // 624
      authentication : false                                                                                           // 625
    },                                                                                                                 // 626
                                                                                                                       // 627
    error: {                                                                                                           // 628
      method   : 'The method you called is not defined',                                                               // 629
      endpoint : 'Please define a message and authentication endpoint.',                                               // 630
      key      : 'You must specify a pusher key and channel.',                                                         // 631
      pusher   : 'You must include the Pusher library.'                                                                // 632
    },                                                                                                                 // 633
                                                                                                                       // 634
    className   : {                                                                                                    // 635
      expand  : 'expand',                                                                                              // 636
      active  : 'active',                                                                                              // 637
      hover   : 'hover',                                                                                               // 638
      down    : 'down',                                                                                                // 639
      loading : 'loading'                                                                                              // 640
    },                                                                                                                 // 641
                                                                                                                       // 642
    selector    : {                                                                                                    // 643
      userCount      : '.actions .message',                                                                            // 644
      userListButton : '.actions .list.button',                                                                        // 645
      expandButton   : '.actions .expand.button',                                                                      // 646
      room           : '.room',                                                                                        // 647
      userList       : '.room .list',                                                                                  // 648
      log            : '.room .log',                                                                                   // 649
      message        : '.room .log .message',                                                                          // 650
      author         : '.room log .message .author',                                                                   // 651
      messageInput   : '.talk input',                                                                                  // 652
      messageButton  : '.talk .send.button'                                                                            // 653
    },                                                                                                                 // 654
                                                                                                                       // 655
    templates: {                                                                                                       // 656
                                                                                                                       // 657
      userCount: function(number) {                                                                                    // 658
        return number + ' users in chat';                                                                              // 659
      },                                                                                                               // 660
                                                                                                                       // 661
      color: function(userID) {                                                                                        // 662
        var                                                                                                            // 663
          colors = [                                                                                                   // 664
            '#000000',                                                                                                 // 665
            '#333333',                                                                                                 // 666
            '#666666',                                                                                                 // 667
            '#999999',                                                                                                 // 668
            '#CC9999',                                                                                                 // 669
            '#CC6666',                                                                                                 // 670
            '#CC3333',                                                                                                 // 671
            '#993333',                                                                                                 // 672
            '#663333',                                                                                                 // 673
            '#CC6633',                                                                                                 // 674
            '#CC9966',                                                                                                 // 675
            '#CC9933',                                                                                                 // 676
            '#999966',                                                                                                 // 677
            '#CCCC66',                                                                                                 // 678
            '#99CC66',                                                                                                 // 679
            '#669933',                                                                                                 // 680
            '#669966',                                                                                                 // 681
            '#33A3CC',                                                                                                 // 682
            '#336633',                                                                                                 // 683
            '#33CCCC',                                                                                                 // 684
            '#339999',                                                                                                 // 685
            '#336666',                                                                                                 // 686
            '#336699',                                                                                                 // 687
            '#6666CC',                                                                                                 // 688
            '#9966CC',                                                                                                 // 689
            '#333399',                                                                                                 // 690
            '#663366',                                                                                                 // 691
            '#996699',                                                                                                 // 692
            '#993366',                                                                                                 // 693
            '#CC6699'                                                                                                  // 694
          ]                                                                                                            // 695
        ;                                                                                                              // 696
        return colors[ Math.floor( Math.random() * colors.length) ];                                                   // 697
      },                                                                                                               // 698
                                                                                                                       // 699
      message: function(message) {                                                                                     // 700
        var                                                                                                            // 701
          html = ''                                                                                                    // 702
        ;                                                                                                              // 703
        if(message.user.isAdmin) {                                                                                     // 704
          message.user.color = '#55356A';                                                                              // 705
          html += '<div class="admin message">';                                                                       // 706
          html += '<span class="quirky ui flag team"></span>';                                                         // 707
        }                                                                                                              // 708
        /*                                                                                                             // 709
        else if(message.user.isPro) {                                                                                  // 710
          html += '<div class="indent message">';                                                                      // 711
          html += '<span class="quirky ui flag pro"></span>';                                                          // 712
        }                                                                                                              // 713
        */                                                                                                             // 714
        else {                                                                                                         // 715
          html += '<div class="message">';                                                                             // 716
        }                                                                                                              // 717
        html += '<p>';                                                                                                 // 718
        if(message.user.color !== undefined) {                                                                         // 719
          html += '<span class="author" style="color: ' + message.user.color + ';">' + message.user.name + '</span>: ';
        }                                                                                                              // 721
        else {                                                                                                         // 722
          html += '<span class="author">' + message.user.name + '</span>: ';                                           // 723
        }                                                                                                              // 724
        html += ''                                                                                                     // 725
          +   message.text                                                                                             // 726
          + ' </p>'                                                                                                    // 727
          + '</div>'                                                                                                   // 728
        ;                                                                                                              // 729
        return html;                                                                                                   // 730
      },                                                                                                               // 731
                                                                                                                       // 732
      joined: function(member) {                                                                                       // 733
        return (typeof member.name !== undefined)                                                                      // 734
          ? '<div class="status">' + member.name + ' has joined the chat.</div>'                                       // 735
          : false                                                                                                      // 736
        ;                                                                                                              // 737
      },                                                                                                               // 738
      left: function(member) {                                                                                         // 739
        return (typeof member.name !== undefined)                                                                      // 740
          ? '<div class="status">' + member.name + ' has left the chat.</div>'                                         // 741
          : false                                                                                                      // 742
        ;                                                                                                              // 743
      },                                                                                                               // 744
                                                                                                                       // 745
      userList: function(member) {                                                                                     // 746
        var                                                                                                            // 747
          html = ''                                                                                                    // 748
        ;                                                                                                              // 749
        if(member.isAdmin) {                                                                                           // 750
          member.color = '#55356A';                                                                                    // 751
        }                                                                                                              // 752
        html +=  ''                                                                                                    // 753
          + '<div class="user" data-id="' + member.id + '">'                                                           // 754
          + ' <div class="image">'                                                                                     // 755
          + '   <img src="' + member.avatarURL + '">'                                                                  // 756
          + ' </div>'                                                                                                  // 757
        ;                                                                                                              // 758
        if(member.color !== undefined) {                                                                               // 759
          html += ' <p><a href="/users/' + member.id + '" target="_blank" style="color: ' + member.color + ';">' + member.name + '</a></p>';
        }                                                                                                              // 761
        else {                                                                                                         // 762
          html += ' <p><a href="/users/' + member.id + '" target="_blank">' + member.name + '</a></p>';                // 763
        }                                                                                                              // 764
        html += '</div>';                                                                                              // 765
        return html;                                                                                                   // 766
      }                                                                                                                // 767
                                                                                                                       // 768
    }                                                                                                                  // 769
                                                                                                                       // 770
  };                                                                                                                   // 771
                                                                                                                       // 772
})( jQuery, window , document );                                                                                       // 773
                                                                                                                       // 774
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}).call(this);






(function () {

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// packages/semantic-ui/lib/semantic-ui/build/uncompressed/modules/checkbox.js                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/*                                                                                                                     // 1
 * # Semantic - Checkbox                                                                                               // 2
 * http://github.com/jlukic/semantic-ui/                                                                               // 3
 *                                                                                                                     // 4
 *                                                                                                                     // 5
 * Copyright 2013 Contributors                                                                                         // 6
 * Released under the MIT license                                                                                      // 7
 * http://opensource.org/licenses/MIT                                                                                  // 8
 *                                                                                                                     // 9
 */                                                                                                                    // 10
                                                                                                                       // 11
;(function ( $, window, document, undefined ) {                                                                        // 12
                                                                                                                       // 13
$.fn.checkbox = function(parameters) {                                                                                 // 14
  var                                                                                                                  // 15
    $allModules    = $(this),                                                                                          // 16
    moduleSelector = $allModules.selector || '',                                                                       // 17
                                                                                                                       // 18
    time           = new Date().getTime(),                                                                             // 19
    performance    = [],                                                                                               // 20
                                                                                                                       // 21
    query          = arguments[0],                                                                                     // 22
    methodInvoked  = (typeof query == 'string'),                                                                       // 23
    queryArguments = [].slice.call(arguments, 1),                                                                      // 24
    returnedValue                                                                                                      // 25
  ;                                                                                                                    // 26
                                                                                                                       // 27
  $allModules                                                                                                          // 28
    .each(function() {                                                                                                 // 29
      var                                                                                                              // 30
        settings        = $.extend(true, {}, $.fn.checkbox.settings, parameters),                                      // 31
                                                                                                                       // 32
        className       = settings.className,                                                                          // 33
        namespace       = settings.namespace,                                                                          // 34
        error           = settings.error,                                                                              // 35
                                                                                                                       // 36
        eventNamespace  = '.' + namespace,                                                                             // 37
        moduleNamespace = 'module-' + namespace,                                                                       // 38
                                                                                                                       // 39
        $module         = $(this),                                                                                     // 40
        $label          = $(this).next(settings.selector.label).first(),                                               // 41
        $input          = $(this).find(settings.selector.input),                                                       // 42
                                                                                                                       // 43
        selector        = $module.selector || '',                                                                      // 44
        instance        = $module.data(moduleNamespace),                                                               // 45
                                                                                                                       // 46
        element         = this,                                                                                        // 47
        module                                                                                                         // 48
      ;                                                                                                                // 49
                                                                                                                       // 50
      module      = {                                                                                                  // 51
                                                                                                                       // 52
        initialize: function() {                                                                                       // 53
          module.verbose('Initializing checkbox', settings);                                                           // 54
          if(settings.context && selector !== '') {                                                                    // 55
            module.verbose('Adding delegated events');                                                                 // 56
            $(element, settings.context)                                                                               // 57
              .on(selector, 'click' + eventNamespace, module.toggle)                                                   // 58
              .on(selector + ' + ' + settings.selector.label, 'click' + eventNamespace, module.toggle)                 // 59
            ;                                                                                                          // 60
          }                                                                                                            // 61
          else {                                                                                                       // 62
            $module                                                                                                    // 63
              .on('click' + eventNamespace, module.toggle)                                                             // 64
              .data(moduleNamespace, module)                                                                           // 65
            ;                                                                                                          // 66
            $label                                                                                                     // 67
              .on('click' + eventNamespace, module.toggle)                                                             // 68
            ;                                                                                                          // 69
          }                                                                                                            // 70
          module.instantiate();                                                                                        // 71
        },                                                                                                             // 72
                                                                                                                       // 73
        instantiate: function() {                                                                                      // 74
          module.verbose('Storing instance of module', module);                                                        // 75
          instance = module;                                                                                           // 76
          $module                                                                                                      // 77
            .data(moduleNamespace, module)                                                                             // 78
          ;                                                                                                            // 79
        },                                                                                                             // 80
                                                                                                                       // 81
        destroy: function() {                                                                                          // 82
          module.verbose('Destroying previous module');                                                                // 83
          $module                                                                                                      // 84
            .off(eventNamespace)                                                                                       // 85
            .removeData(moduleNamespace)                                                                               // 86
          ;                                                                                                            // 87
        },                                                                                                             // 88
                                                                                                                       // 89
        is: {                                                                                                          // 90
          radio: function() {                                                                                          // 91
            return $module.hasClass(className.radio);                                                                  // 92
          },                                                                                                           // 93
          enabled: function() {                                                                                        // 94
            return $input.prop('checked') !== undefined && $input.prop('checked');                                     // 95
          },                                                                                                           // 96
          disabled: function() {                                                                                       // 97
            return !module.is.enabled();                                                                               // 98
          }                                                                                                            // 99
        },                                                                                                             // 100
                                                                                                                       // 101
        can: {                                                                                                         // 102
          disable: function() {                                                                                        // 103
            return (typeof settings.required === 'boolean')                                                            // 104
              ? settings.required                                                                                      // 105
              : !module.is.radio()                                                                                     // 106
            ;                                                                                                          // 107
          }                                                                                                            // 108
        },                                                                                                             // 109
                                                                                                                       // 110
        enable: function() {                                                                                           // 111
          module.debug('Enabling checkbox', $input);                                                                   // 112
          $input                                                                                                       // 113
            .prop('checked', true)                                                                                     // 114
          ;                                                                                                            // 115
          $.proxy(settings.onChange, $input.get())();                                                                  // 116
          $.proxy(settings.onEnable, $input.get())();                                                                  // 117
        },                                                                                                             // 118
                                                                                                                       // 119
        disable: function() {                                                                                          // 120
          module.debug('Disabling checkbox');                                                                          // 121
          $input                                                                                                       // 122
            .prop('checked', false)                                                                                    // 123
          ;                                                                                                            // 124
          $.proxy(settings.onChange, $input.get())();                                                                  // 125
          $.proxy(settings.onDisable, $input.get())();                                                                 // 126
        },                                                                                                             // 127
                                                                                                                       // 128
        toggle: function(event) {                                                                                      // 129
          module.verbose('Determining new checkbox state');                                                            // 130
          if( module.is.disabled() ) {                                                                                 // 131
            module.enable();                                                                                           // 132
          }                                                                                                            // 133
          else if( module.is.enabled() && module.can.disable() ) {                                                     // 134
            module.disable();                                                                                          // 135
          }                                                                                                            // 136
        },                                                                                                             // 137
        setting: function(name, value) {                                                                               // 138
          if( $.isPlainObject(name) ) {                                                                                // 139
            $.extend(true, settings, name);                                                                            // 140
          }                                                                                                            // 141
          else if(value !== undefined) {                                                                               // 142
            settings[name] = value;                                                                                    // 143
          }                                                                                                            // 144
          else {                                                                                                       // 145
            return settings[name];                                                                                     // 146
          }                                                                                                            // 147
        },                                                                                                             // 148
        internal: function(name, value) {                                                                              // 149
          if( $.isPlainObject(name) ) {                                                                                // 150
            $.extend(true, module, name);                                                                              // 151
          }                                                                                                            // 152
          else if(value !== undefined) {                                                                               // 153
            module[name] = value;                                                                                      // 154
          }                                                                                                            // 155
          else {                                                                                                       // 156
            return module[name];                                                                                       // 157
          }                                                                                                            // 158
        },                                                                                                             // 159
        debug: function() {                                                                                            // 160
          if(settings.debug) {                                                                                         // 161
            if(settings.performance) {                                                                                 // 162
              module.performance.log(arguments);                                                                       // 163
            }                                                                                                          // 164
            else {                                                                                                     // 165
              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');                 // 166
              module.debug.apply(console, arguments);                                                                  // 167
            }                                                                                                          // 168
          }                                                                                                            // 169
        },                                                                                                             // 170
        verbose: function() {                                                                                          // 171
          if(settings.verbose && settings.debug) {                                                                     // 172
            if(settings.performance) {                                                                                 // 173
              module.performance.log(arguments);                                                                       // 174
            }                                                                                                          // 175
            else {                                                                                                     // 176
              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');               // 177
              module.verbose.apply(console, arguments);                                                                // 178
            }                                                                                                          // 179
          }                                                                                                            // 180
        },                                                                                                             // 181
        error: function() {                                                                                            // 182
          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');                    // 183
          module.error.apply(console, arguments);                                                                      // 184
        },                                                                                                             // 185
        performance: {                                                                                                 // 186
          log: function(message) {                                                                                     // 187
            var                                                                                                        // 188
              currentTime,                                                                                             // 189
              executionTime,                                                                                           // 190
              previousTime                                                                                             // 191
            ;                                                                                                          // 192
            if(settings.performance) {                                                                                 // 193
              currentTime   = new Date().getTime();                                                                    // 194
              previousTime  = time || currentTime;                                                                     // 195
              executionTime = currentTime - previousTime;                                                              // 196
              time          = currentTime;                                                                             // 197
              performance.push({                                                                                       // 198
                'Element'        : element,                                                                            // 199
                'Name'           : message[0],                                                                         // 200
                'Arguments'      : [].slice.call(message, 1) || '',                                                    // 201
                'Execution Time' : executionTime                                                                       // 202
              });                                                                                                      // 203
            }                                                                                                          // 204
            clearTimeout(module.performance.timer);                                                                    // 205
            module.performance.timer = setTimeout(module.performance.display, 100);                                    // 206
          },                                                                                                           // 207
          display: function() {                                                                                        // 208
            var                                                                                                        // 209
              title = settings.name + ':',                                                                             // 210
              totalTime = 0                                                                                            // 211
            ;                                                                                                          // 212
            time = false;                                                                                              // 213
            clearTimeout(module.performance.timer);                                                                    // 214
            $.each(performance, function(index, data) {                                                                // 215
              totalTime += data['Execution Time'];                                                                     // 216
            });                                                                                                        // 217
            title += ' ' + totalTime + 'ms';                                                                           // 218
            if(moduleSelector) {                                                                                       // 219
              title += ' \'' + moduleSelector + '\'';                                                                  // 220
            }                                                                                                          // 221
            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {              // 222
              console.groupCollapsed(title);                                                                           // 223
              if(console.table) {                                                                                      // 224
                console.table(performance);                                                                            // 225
              }                                                                                                        // 226
              else {                                                                                                   // 227
                $.each(performance, function(index, data) {                                                            // 228
                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');                                      // 229
                });                                                                                                    // 230
              }                                                                                                        // 231
              console.groupEnd();                                                                                      // 232
            }                                                                                                          // 233
            performance = [];                                                                                          // 234
          }                                                                                                            // 235
        },                                                                                                             // 236
        invoke: function(query, passedArguments, context) {                                                            // 237
          var                                                                                                          // 238
            maxDepth,                                                                                                  // 239
            found,                                                                                                     // 240
            response                                                                                                   // 241
          ;                                                                                                            // 242
          passedArguments = passedArguments || queryArguments;                                                         // 243
          context         = element         || context;                                                                // 244
          if(typeof query == 'string' && instance !== undefined) {                                                     // 245
            query    = query.split(/[\. ]/);                                                                           // 246
            maxDepth = query.length - 1;                                                                               // 247
            $.each(query, function(depth, value) {                                                                     // 248
              var camelCaseValue = (depth != maxDepth)                                                                 // 249
                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)                         // 250
                : query                                                                                                // 251
              ;                                                                                                        // 252
              if( $.isPlainObject( instance[camelCaseValue] ) && (depth != maxDepth) ) {                               // 253
                instance = instance[camelCaseValue];                                                                   // 254
              }                                                                                                        // 255
              else if( instance[camelCaseValue] !== undefined ) {                                                      // 256
                found = instance[camelCaseValue];                                                                      // 257
                return false;                                                                                          // 258
              }                                                                                                        // 259
              else if( $.isPlainObject( instance[value] ) && (depth != maxDepth) ) {                                   // 260
                instance = instance[value];                                                                            // 261
              }                                                                                                        // 262
              else if( instance[value] !== undefined ) {                                                               // 263
                found = instance[value];                                                                               // 264
                return false;                                                                                          // 265
              }                                                                                                        // 266
              else {                                                                                                   // 267
                module.error(error.method, query);                                                                     // 268
                return false;                                                                                          // 269
              }                                                                                                        // 270
            });                                                                                                        // 271
          }                                                                                                            // 272
          if ( $.isFunction( found ) ) {                                                                               // 273
            response = found.apply(context, passedArguments);                                                          // 274
          }                                                                                                            // 275
          else if(found !== undefined) {                                                                               // 276
            response = found;                                                                                          // 277
          }                                                                                                            // 278
          if($.isArray(returnedValue)) {                                                                               // 279
            returnedValue.push(response);                                                                              // 280
          }                                                                                                            // 281
          else if(returnedValue !== undefined) {                                                                       // 282
            returnedValue = [returnedValue, response];                                                                 // 283
          }                                                                                                            // 284
          else if(response !== undefined) {                                                                            // 285
            returnedValue = response;                                                                                  // 286
          }                                                                                                            // 287
          return found;                                                                                                // 288
        }                                                                                                              // 289
      };                                                                                                               // 290
                                                                                                                       // 291
      if(methodInvoked) {                                                                                              // 292
        if(instance === undefined) {                                                                                   // 293
          module.initialize();                                                                                         // 294
        }                                                                                                              // 295
        module.invoke(query);                                                                                          // 296
      }                                                                                                                // 297
      else {                                                                                                           // 298
        if(instance !== undefined) {                                                                                   // 299
          module.destroy();                                                                                            // 300
        }                                                                                                              // 301
        module.initialize();                                                                                           // 302
      }                                                                                                                // 303
    })                                                                                                                 // 304
  ;                                                                                                                    // 305
                                                                                                                       // 306
  return (returnedValue !== undefined)                                                                                 // 307
    ? returnedValue                                                                                                    // 308
    : this                                                                                                             // 309
  ;                                                                                                                    // 310
};                                                                                                                     // 311
                                                                                                                       // 312
$.fn.checkbox.settings = {                                                                                             // 313
                                                                                                                       // 314
  name        : 'Checkbox',                                                                                            // 315
  namespace   : 'checkbox',                                                                                            // 316
                                                                                                                       // 317
  verbose     : true,                                                                                                  // 318
  debug       : true,                                                                                                  // 319
  performance : true,                                                                                                  // 320
                                                                                                                       // 321
  // delegated event context                                                                                           // 322
  context     : false,                                                                                                 // 323
  required    : 'auto',                                                                                                // 324
                                                                                                                       // 325
  onChange    : function(){},                                                                                          // 326
  onEnable    : function(){},                                                                                          // 327
  onDisable   : function(){},                                                                                          // 328
                                                                                                                       // 329
  error     : {                                                                                                        // 330
    method   : 'The method you called is not defined.'                                                                 // 331
  },                                                                                                                   // 332
                                                                                                                       // 333
  selector : {                                                                                                         // 334
    input  : 'input[type=checkbox], input[type=radio]',                                                                // 335
    label  : 'label'                                                                                                   // 336
  },                                                                                                                   // 337
                                                                                                                       // 338
  className : {                                                                                                        // 339
    radio  : 'radio'                                                                                                   // 340
  }                                                                                                                    // 341
                                                                                                                       // 342
};                                                                                                                     // 343
                                                                                                                       // 344
})( jQuery, window , document );                                                                                       // 345
                                                                                                                       // 346
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}).call(this);






(function () {

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// packages/semantic-ui/lib/semantic-ui/build/uncompressed/modules/dimmer.js                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/*                                                                                                                     // 1
 * # Semantic - Dimmer                                                                                                 // 2
 * http://github.com/jlukic/semantic-ui/                                                                               // 3
 *                                                                                                                     // 4
 *                                                                                                                     // 5
 * Copyright 2013 Contributors                                                                                         // 6
 * Released under the MIT license                                                                                      // 7
 * http://opensource.org/licenses/MIT                                                                                  // 8
 *                                                                                                                     // 9
 */                                                                                                                    // 10
                                                                                                                       // 11
;(function ( $, window, document, undefined ) {                                                                        // 12
                                                                                                                       // 13
$.fn.dimmer = function(parameters) {                                                                                   // 14
  var                                                                                                                  // 15
    $allModules     = $(this),                                                                                         // 16
                                                                                                                       // 17
    time            = new Date().getTime(),                                                                            // 18
    performance     = [],                                                                                              // 19
                                                                                                                       // 20
    query           = arguments[0],                                                                                    // 21
    methodInvoked   = (typeof query == 'string'),                                                                      // 22
    queryArguments  = [].slice.call(arguments, 1),                                                                     // 23
                                                                                                                       // 24
    returnedValue                                                                                                      // 25
  ;                                                                                                                    // 26
                                                                                                                       // 27
  $allModules                                                                                                          // 28
    .each(function() {                                                                                                 // 29
      var                                                                                                              // 30
        settings        = ( $.isPlainObject(parameters) )                                                              // 31
          ? $.extend(true, {}, $.fn.dimmer.settings, parameters)                                                       // 32
          : $.extend({}, $.fn.dimmer.settings),                                                                        // 33
                                                                                                                       // 34
        selector        = settings.selector,                                                                           // 35
        namespace       = settings.namespace,                                                                          // 36
        className       = settings.className,                                                                          // 37
        error           = settings.error,                                                                              // 38
                                                                                                                       // 39
        eventNamespace  = '.' + namespace,                                                                             // 40
        moduleNamespace = 'module-' + namespace,                                                                       // 41
        moduleSelector  = $allModules.selector || '',                                                                  // 42
                                                                                                                       // 43
        clickEvent      = ('ontouchstart' in document.documentElement)                                                 // 44
          ? 'touchstart'                                                                                               // 45
          : 'click',                                                                                                   // 46
                                                                                                                       // 47
        $module = $(this),                                                                                             // 48
        $dimmer,                                                                                                       // 49
        $dimmable,                                                                                                     // 50
                                                                                                                       // 51
        element   = this,                                                                                              // 52
        instance  = $module.data(moduleNamespace),                                                                     // 53
        module                                                                                                         // 54
      ;                                                                                                                // 55
                                                                                                                       // 56
      module = {                                                                                                       // 57
                                                                                                                       // 58
        preinitialize: function() {                                                                                    // 59
          if( module.is.dimmer() ) {                                                                                   // 60
            $dimmable = $module.parent();                                                                              // 61
            $dimmer   = $module;                                                                                       // 62
          }                                                                                                            // 63
          else {                                                                                                       // 64
            $dimmable = $module;                                                                                       // 65
            if( module.has.dimmer() ) {                                                                                // 66
              $dimmer = $dimmable.children(selector.dimmer).first();                                                   // 67
            }                                                                                                          // 68
            else {                                                                                                     // 69
              $dimmer = module.create();                                                                               // 70
            }                                                                                                          // 71
          }                                                                                                            // 72
        },                                                                                                             // 73
                                                                                                                       // 74
        initialize: function() {                                                                                       // 75
          module.debug('Initializing dimmer', settings);                                                               // 76
          if(settings.on == 'hover') {                                                                                 // 77
            $dimmable                                                                                                  // 78
              .on('mouseenter' + eventNamespace, module.show)                                                          // 79
              .on('mouseleave' + eventNamespace, module.hide)                                                          // 80
            ;                                                                                                          // 81
          }                                                                                                            // 82
          else if(settings.on == 'click') {                                                                            // 83
            $dimmable                                                                                                  // 84
              .on(clickEvent + eventNamespace, module.toggle)                                                          // 85
            ;                                                                                                          // 86
          }                                                                                                            // 87
                                                                                                                       // 88
          if( module.is.page() ) {                                                                                     // 89
            module.debug('Setting as a page dimmer', $dimmable);                                                       // 90
            module.set.pageDimmer();                                                                                   // 91
          }                                                                                                            // 92
                                                                                                                       // 93
          if(settings.closable) {                                                                                      // 94
            module.verbose('Adding dimmer close event', $dimmer);                                                      // 95
            $dimmer                                                                                                    // 96
              .on(clickEvent + eventNamespace, module.event.click)                                                     // 97
            ;                                                                                                          // 98
          }                                                                                                            // 99
          module.set.dimmable();                                                                                       // 100
          module.instantiate();                                                                                        // 101
        },                                                                                                             // 102
                                                                                                                       // 103
        instantiate: function() {                                                                                      // 104
          module.verbose('Storing instance of module', module);                                                        // 105
          instance = module;                                                                                           // 106
          $module                                                                                                      // 107
            .data(moduleNamespace, instance)                                                                           // 108
          ;                                                                                                            // 109
        },                                                                                                             // 110
                                                                                                                       // 111
        destroy: function() {                                                                                          // 112
          module.verbose('Destroying previous module', $dimmer);                                                       // 113
          $module                                                                                                      // 114
            .removeData(moduleNamespace)                                                                               // 115
          ;                                                                                                            // 116
          $dimmable                                                                                                    // 117
            .off(eventNamespace)                                                                                       // 118
          ;                                                                                                            // 119
          $dimmer                                                                                                      // 120
            .off(eventNamespace)                                                                                       // 121
          ;                                                                                                            // 122
        },                                                                                                             // 123
                                                                                                                       // 124
        event: {                                                                                                       // 125
                                                                                                                       // 126
          click: function(event) {                                                                                     // 127
            module.verbose('Determining if event occured on dimmer', event);                                           // 128
            if( $dimmer.find(event.target).size() === 0 || $(event.target).is(selector.content) ) {                    // 129
              module.hide();                                                                                           // 130
              event.stopImmediatePropagation();                                                                        // 131
            }                                                                                                          // 132
          }                                                                                                            // 133
                                                                                                                       // 134
        },                                                                                                             // 135
                                                                                                                       // 136
        addContent: function(element) {                                                                                // 137
          var                                                                                                          // 138
            $content = $(element).detach()                                                                             // 139
          ;                                                                                                            // 140
          module.debug('Add content to dimmer', $content);                                                             // 141
          if($content.parent()[0] !== $dimmer[0]) {                                                                    // 142
            $dimmer.append($content);                                                                                  // 143
          }                                                                                                            // 144
        },                                                                                                             // 145
                                                                                                                       // 146
        create: function() {                                                                                           // 147
          return $( settings.template.dimmer() ).appendTo($dimmable);                                                  // 148
        },                                                                                                             // 149
                                                                                                                       // 150
        animate: {                                                                                                     // 151
          show: function(callback) {                                                                                   // 152
            callback = $.isFunction(callback)                                                                          // 153
              ? callback                                                                                               // 154
              : function(){}                                                                                           // 155
            ;                                                                                                          // 156
            module.set.dimmed();                                                                                       // 157
            if(settings.useCSS && $.fn.transition !== undefined && $module.transition('is supported')) {               // 158
              $dimmer                                                                                                  // 159
                .transition({                                                                                          // 160
                  animation : settings.transition + ' in',                                                             // 161
                  queue     : true,                                                                                    // 162
                  duration  : module.get.duration(),                                                                   // 163
                  complete  : function() {                                                                             // 164
                    module.set.active();                                                                               // 165
                    callback();                                                                                        // 166
                  }                                                                                                    // 167
                })                                                                                                     // 168
              ;                                                                                                        // 169
            }                                                                                                          // 170
            else {                                                                                                     // 171
              module.verbose('Showing dimmer animation with javascript');                                              // 172
              $dimmer                                                                                                  // 173
                .stop()                                                                                                // 174
                .css({                                                                                                 // 175
                  opacity : 0,                                                                                         // 176
                  width   : '100%',                                                                                    // 177
                  height  : '100%'                                                                                     // 178
                })                                                                                                     // 179
                .fadeTo(module.get.duration(), 1, function() {                                                         // 180
                  $dimmer.removeAttr('style');                                                                         // 181
                  module.set.active();                                                                                 // 182
                  callback();                                                                                          // 183
                })                                                                                                     // 184
              ;                                                                                                        // 185
            }                                                                                                          // 186
          },                                                                                                           // 187
          hide: function(callback) {                                                                                   // 188
            callback = $.isFunction(callback)                                                                          // 189
              ? callback                                                                                               // 190
              : function(){}                                                                                           // 191
            ;                                                                                                          // 192
            if(settings.useCSS && $.fn.transition !== undefined && $module.transition('is supported')) {               // 193
              module.verbose('Hiding dimmer with css');                                                                // 194
              $dimmer                                                                                                  // 195
                .transition({                                                                                          // 196
                  animation : settings.transition + ' out',                                                            // 197
                  duration  : module.get.duration(),                                                                   // 198
                  queue     : true,                                                                                    // 199
                  complete  : function() {                                                                             // 200
                    module.remove.dimmed();                                                                            // 201
                    module.remove.active();                                                                            // 202
                    callback();                                                                                        // 203
                  }                                                                                                    // 204
                })                                                                                                     // 205
              ;                                                                                                        // 206
            }                                                                                                          // 207
            else {                                                                                                     // 208
              module.verbose('Hiding dimmer with javascript');                                                         // 209
              $dimmer                                                                                                  // 210
                .stop()                                                                                                // 211
                .fadeOut(module.get.duration(), function() {                                                           // 212
                  $dimmer.removeAttr('style');                                                                         // 213
                  module.remove.dimmed();                                                                              // 214
                  module.remove.active();                                                                              // 215
                  callback();                                                                                          // 216
                })                                                                                                     // 217
              ;                                                                                                        // 218
            }                                                                                                          // 219
          }                                                                                                            // 220
        },                                                                                                             // 221
                                                                                                                       // 222
        get: {                                                                                                         // 223
          dimmer: function() {                                                                                         // 224
            return $dimmer;                                                                                            // 225
          },                                                                                                           // 226
          duration: function() {                                                                                       // 227
            if(typeof settings.duration == 'object') {                                                                 // 228
              if( module.is.active() ) {                                                                               // 229
                return settings.duration.hide;                                                                         // 230
              }                                                                                                        // 231
              else {                                                                                                   // 232
                return settings.duration.show;                                                                         // 233
              }                                                                                                        // 234
            }                                                                                                          // 235
            return settings.duration;                                                                                  // 236
          }                                                                                                            // 237
        },                                                                                                             // 238
                                                                                                                       // 239
        has: {                                                                                                         // 240
          dimmer: function() {                                                                                         // 241
            return ( $module.children(selector.dimmer).size() > 0 );                                                   // 242
          }                                                                                                            // 243
        },                                                                                                             // 244
                                                                                                                       // 245
        is: {                                                                                                          // 246
          active: function() {                                                                                         // 247
            return $dimmer.hasClass(className.active);                                                                 // 248
          },                                                                                                           // 249
          animating: function() {                                                                                      // 250
            return ( $dimmer.is(':animated') || $dimmer.hasClass(className.transition) );                              // 251
          },                                                                                                           // 252
          dimmer: function() {                                                                                         // 253
            return $module.is(selector.dimmer);                                                                        // 254
          },                                                                                                           // 255
          dimmable: function() {                                                                                       // 256
            return $module.is(selector.dimmable);                                                                      // 257
          },                                                                                                           // 258
          dimmed: function() {                                                                                         // 259
            return $dimmable.hasClass(className.dimmed);                                                               // 260
          },                                                                                                           // 261
          disabled: function() {                                                                                       // 262
            return $dimmable.hasClass(className.disabled);                                                             // 263
          },                                                                                                           // 264
          enabled: function() {                                                                                        // 265
            return !module.is.disabled();                                                                              // 266
          },                                                                                                           // 267
          page: function () {                                                                                          // 268
            return $dimmable.is('body');                                                                               // 269
          },                                                                                                           // 270
          pageDimmer: function() {                                                                                     // 271
            return $dimmer.hasClass(className.pageDimmer);                                                             // 272
          }                                                                                                            // 273
        },                                                                                                             // 274
                                                                                                                       // 275
        can: {                                                                                                         // 276
          show: function() {                                                                                           // 277
            return !$dimmer.hasClass(className.disabled);                                                              // 278
          }                                                                                                            // 279
        },                                                                                                             // 280
                                                                                                                       // 281
        set: {                                                                                                         // 282
          active: function() {                                                                                         // 283
            module.set.dimmed();                                                                                       // 284
            $dimmer                                                                                                    // 285
              .removeClass(className.transition)                                                                       // 286
              .addClass(className.active)                                                                              // 287
            ;                                                                                                          // 288
          },                                                                                                           // 289
          dimmable: function() {                                                                                       // 290
            $dimmable.addClass(className.dimmable);                                                                    // 291
          },                                                                                                           // 292
          dimmed: function() {                                                                                         // 293
            $dimmable.addClass(className.dimmed);                                                                      // 294
          },                                                                                                           // 295
          pageDimmer: function() {                                                                                     // 296
            $dimmer.addClass(className.pageDimmer);                                                                    // 297
          },                                                                                                           // 298
          disabled: function() {                                                                                       // 299
            $dimmer.addClass(className.disabled);                                                                      // 300
          }                                                                                                            // 301
        },                                                                                                             // 302
                                                                                                                       // 303
        remove: {                                                                                                      // 304
          active: function() {                                                                                         // 305
            $dimmer                                                                                                    // 306
              .removeClass(className.transition)                                                                       // 307
              .removeClass(className.active)                                                                           // 308
            ;                                                                                                          // 309
          },                                                                                                           // 310
          dimmed: function() {                                                                                         // 311
            $dimmable.removeClass(className.dimmed);                                                                   // 312
          },                                                                                                           // 313
          disabled: function() {                                                                                       // 314
            $dimmer.removeClass(className.disabled);                                                                   // 315
          }                                                                                                            // 316
        },                                                                                                             // 317
                                                                                                                       // 318
        show: function(callback) {                                                                                     // 319
          callback = $.isFunction(callback)                                                                            // 320
            ? callback                                                                                                 // 321
            : function(){}                                                                                             // 322
          ;                                                                                                            // 323
          module.debug('Showing dimmer', $dimmer, settings);                                                           // 324
          if( !module.is.active() && module.is.enabled() ) {                                                           // 325
            module.animate.show(callback);                                                                             // 326
            $.proxy(settings.onShow, element)();                                                                       // 327
            $.proxy(settings.onChange, element)();                                                                     // 328
          }                                                                                                            // 329
          else {                                                                                                       // 330
            module.debug('Dimmer is already shown or disabled');                                                       // 331
          }                                                                                                            // 332
        },                                                                                                             // 333
                                                                                                                       // 334
        hide: function(callback) {                                                                                     // 335
          callback = $.isFunction(callback)                                                                            // 336
            ? callback                                                                                                 // 337
            : function(){}                                                                                             // 338
          ;                                                                                                            // 339
          if( module.is.active() || module.is.animating() ) {                                                          // 340
            module.debug('Hiding dimmer', $dimmer);                                                                    // 341
            module.animate.hide(callback);                                                                             // 342
            $.proxy(settings.onHide, element)();                                                                       // 343
            $.proxy(settings.onChange, element)();                                                                     // 344
          }                                                                                                            // 345
          else {                                                                                                       // 346
            module.debug('Dimmer is not visible');                                                                     // 347
          }                                                                                                            // 348
        },                                                                                                             // 349
                                                                                                                       // 350
        toggle: function() {                                                                                           // 351
          module.verbose('Toggling dimmer visibility', $dimmer);                                                       // 352
          if( !module.is.dimmed() ) {                                                                                  // 353
            module.show();                                                                                             // 354
          }                                                                                                            // 355
          else {                                                                                                       // 356
            module.hide();                                                                                             // 357
          }                                                                                                            // 358
        },                                                                                                             // 359
                                                                                                                       // 360
        setting: function(name, value) {                                                                               // 361
          if( $.isPlainObject(name) ) {                                                                                // 362
            $.extend(true, settings, name);                                                                            // 363
          }                                                                                                            // 364
          else if(value !== undefined) {                                                                               // 365
            settings[name] = value;                                                                                    // 366
          }                                                                                                            // 367
          else {                                                                                                       // 368
            return settings[name];                                                                                     // 369
          }                                                                                                            // 370
        },                                                                                                             // 371
        internal: function(name, value) {                                                                              // 372
          if( $.isPlainObject(name) ) {                                                                                // 373
            $.extend(true, module, name);                                                                              // 374
          }                                                                                                            // 375
          else if(value !== undefined) {                                                                               // 376
            module[name] = value;                                                                                      // 377
          }                                                                                                            // 378
          else {                                                                                                       // 379
            return module[name];                                                                                       // 380
          }                                                                                                            // 381
        },                                                                                                             // 382
        debug: function() {                                                                                            // 383
          if(settings.debug) {                                                                                         // 384
            if(settings.performance) {                                                                                 // 385
              module.performance.log(arguments);                                                                       // 386
            }                                                                                                          // 387
            else {                                                                                                     // 388
              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');                 // 389
              module.debug.apply(console, arguments);                                                                  // 390
            }                                                                                                          // 391
          }                                                                                                            // 392
        },                                                                                                             // 393
        verbose: function() {                                                                                          // 394
          if(settings.verbose && settings.debug) {                                                                     // 395
            if(settings.performance) {                                                                                 // 396
              module.performance.log(arguments);                                                                       // 397
            }                                                                                                          // 398
            else {                                                                                                     // 399
              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');               // 400
              module.verbose.apply(console, arguments);                                                                // 401
            }                                                                                                          // 402
          }                                                                                                            // 403
        },                                                                                                             // 404
        error: function() {                                                                                            // 405
          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');                    // 406
          module.error.apply(console, arguments);                                                                      // 407
        },                                                                                                             // 408
        performance: {                                                                                                 // 409
          log: function(message) {                                                                                     // 410
            var                                                                                                        // 411
              currentTime,                                                                                             // 412
              executionTime,                                                                                           // 413
              previousTime                                                                                             // 414
            ;                                                                                                          // 415
            if(settings.performance) {                                                                                 // 416
              currentTime   = new Date().getTime();                                                                    // 417
              previousTime  = time || currentTime;                                                                     // 418
              executionTime = currentTime - previousTime;                                                              // 419
              time          = currentTime;                                                                             // 420
              performance.push({                                                                                       // 421
                'Element'        : element,                                                                            // 422
                'Name'           : message[0],                                                                         // 423
                'Arguments'      : [].slice.call(message, 1) || '',                                                    // 424
                'Execution Time' : executionTime                                                                       // 425
              });                                                                                                      // 426
            }                                                                                                          // 427
            clearTimeout(module.performance.timer);                                                                    // 428
            module.performance.timer = setTimeout(module.performance.display, 100);                                    // 429
          },                                                                                                           // 430
          display: function() {                                                                                        // 431
            var                                                                                                        // 432
              title = settings.name + ':',                                                                             // 433
              totalTime = 0                                                                                            // 434
            ;                                                                                                          // 435
            time = false;                                                                                              // 436
            clearTimeout(module.performance.timer);                                                                    // 437
            $.each(performance, function(index, data) {                                                                // 438
              totalTime += data['Execution Time'];                                                                     // 439
            });                                                                                                        // 440
            title += ' ' + totalTime + 'ms';                                                                           // 441
            if(moduleSelector) {                                                                                       // 442
              title += ' \'' + moduleSelector + '\'';                                                                  // 443
            }                                                                                                          // 444
            if($allModules.size() > 1) {                                                                               // 445
              title += ' ' + '(' + $allModules.size() + ')';                                                           // 446
            }                                                                                                          // 447
            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {              // 448
              console.groupCollapsed(title);                                                                           // 449
              if(console.table) {                                                                                      // 450
                console.table(performance);                                                                            // 451
              }                                                                                                        // 452
              else {                                                                                                   // 453
                $.each(performance, function(index, data) {                                                            // 454
                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');                                      // 455
                });                                                                                                    // 456
              }                                                                                                        // 457
              console.groupEnd();                                                                                      // 458
            }                                                                                                          // 459
            performance = [];                                                                                          // 460
          }                                                                                                            // 461
        },                                                                                                             // 462
        invoke: function(query, passedArguments, context) {                                                            // 463
          var                                                                                                          // 464
            maxDepth,                                                                                                  // 465
            found,                                                                                                     // 466
            response                                                                                                   // 467
          ;                                                                                                            // 468
          passedArguments = passedArguments || queryArguments;                                                         // 469
          context         = element         || context;                                                                // 470
          if(typeof query == 'string' && instance !== undefined) {                                                     // 471
            query    = query.split(/[\. ]/);                                                                           // 472
            maxDepth = query.length - 1;                                                                               // 473
            $.each(query, function(depth, value) {                                                                     // 474
              var camelCaseValue = (depth != maxDepth)                                                                 // 475
                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)                         // 476
                : query                                                                                                // 477
              ;                                                                                                        // 478
              if( $.isPlainObject( instance[camelCaseValue] ) && (depth != maxDepth) ) {                               // 479
                instance = instance[camelCaseValue];                                                                   // 480
              }                                                                                                        // 481
              else if( $.isPlainObject( instance[value] ) && (depth != maxDepth) ) {                                   // 482
                instance = instance[value];                                                                            // 483
              }                                                                                                        // 484
              else if( instance[value] !== undefined ) {                                                               // 485
                found = instance[value];                                                                               // 486
                return false;                                                                                          // 487
              }                                                                                                        // 488
              else if( instance[camelCaseValue] !== undefined ) {                                                      // 489
                found = instance[camelCaseValue];                                                                      // 490
                return false;                                                                                          // 491
              }                                                                                                        // 492
              else {                                                                                                   // 493
                module.error(error.method, query);                                                                     // 494
                return false;                                                                                          // 495
              }                                                                                                        // 496
            });                                                                                                        // 497
          }                                                                                                            // 498
          if ( $.isFunction( found ) ) {                                                                               // 499
            response = found.apply(context, passedArguments);                                                          // 500
          }                                                                                                            // 501
          else if(found !== undefined) {                                                                               // 502
            response = found;                                                                                          // 503
          }                                                                                                            // 504
          if($.isArray(returnedValue)) {                                                                               // 505
            returnedValue.push(response);                                                                              // 506
          }                                                                                                            // 507
          else if(returnedValue !== undefined) {                                                                       // 508
            returnedValue = [returnedValue, response];                                                                 // 509
          }                                                                                                            // 510
          else if(response !== undefined) {                                                                            // 511
            returnedValue = response;                                                                                  // 512
          }                                                                                                            // 513
          return found;                                                                                                // 514
        }                                                                                                              // 515
      };                                                                                                               // 516
                                                                                                                       // 517
      module.preinitialize();                                                                                          // 518
                                                                                                                       // 519
      if(methodInvoked) {                                                                                              // 520
        if(instance === undefined) {                                                                                   // 521
          module.initialize();                                                                                         // 522
        }                                                                                                              // 523
        module.invoke(query);                                                                                          // 524
      }                                                                                                                // 525
      else {                                                                                                           // 526
        if(instance !== undefined) {                                                                                   // 527
          module.destroy();                                                                                            // 528
        }                                                                                                              // 529
        module.initialize();                                                                                           // 530
      }                                                                                                                // 531
    })                                                                                                                 // 532
  ;                                                                                                                    // 533
                                                                                                                       // 534
  return (returnedValue !== undefined)                                                                                 // 535
    ? returnedValue                                                                                                    // 536
    : this                                                                                                             // 537
  ;                                                                                                                    // 538
};                                                                                                                     // 539
                                                                                                                       // 540
$.fn.dimmer.settings = {                                                                                               // 541
                                                                                                                       // 542
  name        : 'Dimmer',                                                                                              // 543
  namespace   : 'dimmer',                                                                                              // 544
                                                                                                                       // 545
  debug       : true,                                                                                                  // 546
  verbose     : true,                                                                                                  // 547
  performance : true,                                                                                                  // 548
                                                                                                                       // 549
  transition  : 'fade',                                                                                                // 550
  useCSS      : true,                                                                                                  // 551
  on          : false,                                                                                                 // 552
  closable    : true,                                                                                                  // 553
                                                                                                                       // 554
  duration    : {                                                                                                      // 555
    show : 500,                                                                                                        // 556
    hide : 500                                                                                                         // 557
  },                                                                                                                   // 558
                                                                                                                       // 559
  onChange    : function(){},                                                                                          // 560
  onShow      : function(){},                                                                                          // 561
  onHide      : function(){},                                                                                          // 562
                                                                                                                       // 563
  error   : {                                                                                                          // 564
    method   : 'The method you called is not defined.'                                                                 // 565
  },                                                                                                                   // 566
                                                                                                                       // 567
  selector: {                                                                                                          // 568
    dimmable : '.ui.dimmable',                                                                                         // 569
    dimmer   : '.ui.dimmer',                                                                                           // 570
    content  : '.ui.dimmer > .content, .ui.dimmer > .content > .center'                                                // 571
  },                                                                                                                   // 572
                                                                                                                       // 573
  template: {                                                                                                          // 574
    dimmer: function() {                                                                                               // 575
     return $('<div />').attr('class', 'ui dimmer');                                                                   // 576
    }                                                                                                                  // 577
  },                                                                                                                   // 578
                                                                                                                       // 579
  className : {                                                                                                        // 580
    active     : 'active',                                                                                             // 581
    dimmable   : 'ui dimmable',                                                                                        // 582
    dimmed     : 'dimmed',                                                                                             // 583
    disabled   : 'disabled',                                                                                           // 584
    pageDimmer : 'page',                                                                                               // 585
    hide       : 'hide',                                                                                               // 586
    show       : 'show',                                                                                               // 587
    transition : 'transition'                                                                                          // 588
  }                                                                                                                    // 589
                                                                                                                       // 590
};                                                                                                                     // 591
                                                                                                                       // 592
})( jQuery, window , document );                                                                                       // 593
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}).call(this);






(function () {

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// packages/semantic-ui/lib/semantic-ui/build/uncompressed/modules/dropdown.js                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/*                                                                                                                     // 1
 * # Semantic - Dropdown                                                                                               // 2
 * http://github.com/jlukic/semantic-ui/                                                                               // 3
 *                                                                                                                     // 4
 *                                                                                                                     // 5
 * Copyright 2013 Contributors                                                                                         // 6
 * Released under the MIT license                                                                                      // 7
 * http://opensource.org/licenses/MIT                                                                                  // 8
 *                                                                                                                     // 9
 */                                                                                                                    // 10
;(function ( $, window, document, undefined ) {                                                                        // 11
                                                                                                                       // 12
$.fn.dropdown = function(parameters) {                                                                                 // 13
    var                                                                                                                // 14
    $allModules    = $(this),                                                                                          // 15
    $document      = $(document),                                                                                      // 16
                                                                                                                       // 17
    moduleSelector = $allModules.selector || '',                                                                       // 18
                                                                                                                       // 19
    hasTouch       = ('ontouchstart' in document.documentElement),                                                     // 20
    time           = new Date().getTime(),                                                                             // 21
    performance    = [],                                                                                               // 22
                                                                                                                       // 23
    query          = arguments[0],                                                                                     // 24
    methodInvoked  = (typeof query == 'string'),                                                                       // 25
    queryArguments = [].slice.call(arguments, 1),                                                                      // 26
    returnedValue                                                                                                      // 27
  ;                                                                                                                    // 28
                                                                                                                       // 29
  $allModules                                                                                                          // 30
    .each(function() {                                                                                                 // 31
      var                                                                                                              // 32
        settings          = ( $.isPlainObject(parameters) )                                                            // 33
          ? $.extend(true, {}, $.fn.dropdown.settings, parameters)                                                     // 34
          : $.extend({}, $.fn.dropdown.settings),                                                                      // 35
                                                                                                                       // 36
        className       = settings.className,                                                                          // 37
        metadata        = settings.metadata,                                                                           // 38
        namespace       = settings.namespace,                                                                          // 39
        selector        = settings.selector,                                                                           // 40
        error           = settings.error,                                                                              // 41
                                                                                                                       // 42
        eventNamespace  = '.' + namespace,                                                                             // 43
        moduleNamespace = 'module-' + namespace,                                                                       // 44
                                                                                                                       // 45
        $module         = $(this),                                                                                     // 46
        $item           = $module.find(selector.item),                                                                 // 47
        $text           = $module.find(selector.text),                                                                 // 48
        $input          = $module.find(selector.input),                                                                // 49
                                                                                                                       // 50
        $menu           = $module.children(selector.menu),                                                             // 51
                                                                                                                       // 52
                                                                                                                       // 53
        element         = this,                                                                                        // 54
        instance        = $module.data(moduleNamespace),                                                               // 55
        module                                                                                                         // 56
      ;                                                                                                                // 57
                                                                                                                       // 58
      module = {                                                                                                       // 59
                                                                                                                       // 60
        initialize: function() {                                                                                       // 61
          module.debug('Initializing dropdown', settings);                                                             // 62
                                                                                                                       // 63
          module.set.selected();                                                                                       // 64
                                                                                                                       // 65
          if(hasTouch) {                                                                                               // 66
            module.bind.touchEvents();                                                                                 // 67
          }                                                                                                            // 68
          // no use detecting mouse events because touch devices emulate them                                          // 69
          module.bind.mouseEvents();                                                                                   // 70
          module.instantiate();                                                                                        // 71
        },                                                                                                             // 72
                                                                                                                       // 73
        instantiate: function() {                                                                                      // 74
          module.verbose('Storing instance of dropdown', module);                                                      // 75
          instance = module;                                                                                           // 76
          $module                                                                                                      // 77
            .data(moduleNamespace, module)                                                                             // 78
          ;                                                                                                            // 79
        },                                                                                                             // 80
                                                                                                                       // 81
        destroy: function() {                                                                                          // 82
          module.verbose('Destroying previous dropdown for', $module);                                                 // 83
          $item                                                                                                        // 84
            .off(eventNamespace)                                                                                       // 85
          ;                                                                                                            // 86
          $module                                                                                                      // 87
            .off(eventNamespace)                                                                                       // 88
            .removeData(moduleNamespace)                                                                               // 89
          ;                                                                                                            // 90
        },                                                                                                             // 91
                                                                                                                       // 92
        bind: {                                                                                                        // 93
          touchEvents: function() {                                                                                    // 94
            module.debug('Touch device detected binding touch events');                                                // 95
            $module                                                                                                    // 96
              .on('touchstart' + eventNamespace, module.event.test.toggle)                                             // 97
            ;                                                                                                          // 98
            $item                                                                                                      // 99
              .on('touchstart' + eventNamespace, module.event.item.mouseenter)                                         // 100
              .on('touchstart' + eventNamespace, module.event.item.click)                                              // 101
            ;                                                                                                          // 102
          },                                                                                                           // 103
          mouseEvents: function() {                                                                                    // 104
            module.verbose('Mouse detected binding mouse events');                                                     // 105
            if(settings.on == 'click') {                                                                               // 106
              $module                                                                                                  // 107
                .on('click' + eventNamespace, module.event.test.toggle)                                                // 108
              ;                                                                                                        // 109
            }                                                                                                          // 110
            else if(settings.on == 'hover') {                                                                          // 111
              $module                                                                                                  // 112
                .on('mouseenter' + eventNamespace, module.delay.show)                                                  // 113
                .on('mouseleave' + eventNamespace, module.delay.hide)                                                  // 114
              ;                                                                                                        // 115
            }                                                                                                          // 116
            else {                                                                                                     // 117
              $module                                                                                                  // 118
                .on(settings.on + eventNamespace, module.toggle)                                                       // 119
              ;                                                                                                        // 120
            }                                                                                                          // 121
            $item                                                                                                      // 122
              .on('mouseenter' + eventNamespace, module.event.item.mouseenter)                                         // 123
              .on('mouseleave' + eventNamespace, module.event.item.mouseleave)                                         // 124
              .on('click'      + eventNamespace, module.event.item.click)                                              // 125
            ;                                                                                                          // 126
          },                                                                                                           // 127
          intent: function() {                                                                                         // 128
            module.verbose('Binding hide intent event to document');                                                   // 129
            if(hasTouch) {                                                                                             // 130
              $document                                                                                                // 131
                .on('touchstart' + eventNamespace, module.event.test.touch)                                            // 132
                .on('touchmove'  + eventNamespace, module.event.test.touch)                                            // 133
              ;                                                                                                        // 134
            }                                                                                                          // 135
            $document                                                                                                  // 136
              .on('click' + eventNamespace, module.event.test.hide)                                                    // 137
            ;                                                                                                          // 138
          }                                                                                                            // 139
        },                                                                                                             // 140
                                                                                                                       // 141
        unbind: {                                                                                                      // 142
          intent: function() {                                                                                         // 143
            module.verbose('Removing hide intent event from document');                                                // 144
            if(hasTouch) {                                                                                             // 145
              $document                                                                                                // 146
                .off('touchstart' + eventNamespace)                                                                    // 147
              ;                                                                                                        // 148
            }                                                                                                          // 149
            $document                                                                                                  // 150
              .off('click' + eventNamespace)                                                                           // 151
            ;                                                                                                          // 152
          }                                                                                                            // 153
        },                                                                                                             // 154
                                                                                                                       // 155
        event: {                                                                                                       // 156
          test: {                                                                                                      // 157
            toggle: function(event) {                                                                                  // 158
              if( module.determine.intent(event, module.toggle) ) {                                                    // 159
                event.preventDefault();                                                                                // 160
              }                                                                                                        // 161
            },                                                                                                         // 162
            touch: function(event) {                                                                                   // 163
              module.determine.intent(event, function() {                                                              // 164
                if(event.type == 'touchstart') {                                                                       // 165
                  module.timer = setTimeout(module.hide, settings.delay.touch);                                        // 166
                }                                                                                                      // 167
                else if(event.type == 'touchmove') {                                                                   // 168
                  clearTimeout(module.timer);                                                                          // 169
                }                                                                                                      // 170
              });                                                                                                      // 171
              event.stopPropagation();                                                                                 // 172
            },                                                                                                         // 173
            hide: function(event) {                                                                                    // 174
              module.determine.intent(event, module.hide);                                                             // 175
            }                                                                                                          // 176
          },                                                                                                           // 177
                                                                                                                       // 178
          item: {                                                                                                      // 179
                                                                                                                       // 180
            mouseenter: function(event) {                                                                              // 181
              var                                                                                                      // 182
                $currentMenu = $(this).find(selector.menu),                                                            // 183
                $otherMenus  = $(this).siblings(selector.item).children(selector.menu)                                 // 184
              ;                                                                                                        // 185
              if( $currentMenu.size() > 0 ) {                                                                          // 186
                clearTimeout(module.itemTimer);                                                                        // 187
                module.itemTimer = setTimeout(function() {                                                             // 188
                  module.animate.hide(false, $otherMenus);                                                             // 189
                  module.verbose('Showing sub-menu', $currentMenu);                                                    // 190
                  module.animate.show(false,  $currentMenu);                                                           // 191
                }, settings.delay.show * 2);                                                                           // 192
                event.preventDefault();                                                                                // 193
              }                                                                                                        // 194
            },                                                                                                         // 195
                                                                                                                       // 196
            mouseleave: function(event) {                                                                              // 197
              var                                                                                                      // 198
                $currentMenu = $(this).find(selector.menu)                                                             // 199
              ;                                                                                                        // 200
              if($currentMenu.size() > 0) {                                                                            // 201
                clearTimeout(module.itemTimer);                                                                        // 202
                module.itemTimer = setTimeout(function() {                                                             // 203
                  module.verbose('Hiding sub-menu', $currentMenu);                                                     // 204
                  module.animate.hide(false,  $currentMenu);                                                           // 205
                }, settings.delay.hide);                                                                               // 206
              }                                                                                                        // 207
            },                                                                                                         // 208
                                                                                                                       // 209
            click: function (event) {                                                                                  // 210
              var                                                                                                      // 211
                $choice = $(this),                                                                                     // 212
                text    = ( $choice.data(metadata.text) !== undefined )                                                // 213
                  ? $choice.data(metadata.text)                                                                        // 214
                  : $choice.text(),                                                                                    // 215
                value   = ( $choice.data(metadata.value) !== undefined)                                                // 216
                  ? $choice.data(metadata.value)                                                                       // 217
                  : text.toLowerCase()                                                                                 // 218
              ;                                                                                                        // 219
              if( $choice.find(selector.menu).size() === 0 ) {                                                         // 220
                module.determine.selectAction(text, value);                                                            // 221
                $.proxy(settings.onChange, element)(value, text);                                                      // 222
              }                                                                                                        // 223
            }                                                                                                          // 224
                                                                                                                       // 225
          },                                                                                                           // 226
                                                                                                                       // 227
          resetStyle: function() {                                                                                     // 228
            $(this).removeAttr('style');                                                                               // 229
          }                                                                                                            // 230
                                                                                                                       // 231
        },                                                                                                             // 232
                                                                                                                       // 233
        determine: {                                                                                                   // 234
          selectAction: function(text, value) {                                                                        // 235
            module.verbose('Determining action', settings.action);                                                     // 236
            if( $.isFunction( module.action[settings.action] ) ) {                                                     // 237
              module.verbose('Triggering preset action', settings.action, text, value);                                // 238
              module.action[ settings.action ](text, value);                                                           // 239
            }                                                                                                          // 240
            else if( $.isFunction(settings.action) ) {                                                                 // 241
              module.verbose('Triggering user action', settings.action, text, value);                                  // 242
              settings.action(text, value);                                                                            // 243
            }                                                                                                          // 244
            else {                                                                                                     // 245
              module.error(error.action, settings.action);                                                             // 246
            }                                                                                                          // 247
          },                                                                                                           // 248
          intent: function(event, callback) {                                                                          // 249
            module.debug('Determining whether event occurred in dropdown', event.target);                              // 250
            callback = callback || function(){};                                                                       // 251
            if( $(event.target).closest($menu).size() === 0 ) {                                                        // 252
              module.verbose('Triggering event', callback);                                                            // 253
              callback();                                                                                              // 254
              return true;                                                                                             // 255
            }                                                                                                          // 256
            else {                                                                                                     // 257
              module.verbose('Event occurred in dropdown, canceling callback');                                        // 258
              return false;                                                                                            // 259
            }                                                                                                          // 260
          }                                                                                                            // 261
        },                                                                                                             // 262
                                                                                                                       // 263
        action: {                                                                                                      // 264
                                                                                                                       // 265
          nothing: function() {},                                                                                      // 266
                                                                                                                       // 267
          hide: function() {                                                                                           // 268
            module.hide();                                                                                             // 269
          },                                                                                                           // 270
                                                                                                                       // 271
          activate: function(text, value) {                                                                            // 272
            value = (value !== undefined)                                                                              // 273
              ? value                                                                                                  // 274
              : text                                                                                                   // 275
            ;                                                                                                          // 276
            module.set.selected(value);                                                                                // 277
            module.set.value(value);                                                                                   // 278
            module.hide();                                                                                             // 279
          },                                                                                                           // 280
                                                                                                                       // 281
          /* Deprecated */                                                                                             // 282
          auto: function(text, value) {                                                                                // 283
            value = (value !== undefined)                                                                              // 284
              ? value                                                                                                  // 285
              : text                                                                                                   // 286
            ;                                                                                                          // 287
            module.set.selected(value);                                                                                // 288
            module.set.value(value);                                                                                   // 289
            module.hide();                                                                                             // 290
          },                                                                                                           // 291
                                                                                                                       // 292
          /* Deprecated */                                                                                             // 293
          changeText: function(text, value) {                                                                          // 294
            value = (value !== undefined)                                                                              // 295
              ? value                                                                                                  // 296
              : text                                                                                                   // 297
            ;                                                                                                          // 298
            module.set.selected(value);                                                                                // 299
            module.hide();                                                                                             // 300
          },                                                                                                           // 301
                                                                                                                       // 302
          /* Deprecated */                                                                                             // 303
          updateForm: function(text, value) {                                                                          // 304
            value = (value !== undefined)                                                                              // 305
              ? value                                                                                                  // 306
              : text                                                                                                   // 307
            ;                                                                                                          // 308
            module.set.selected(value);                                                                                // 309
            module.set.value(value);                                                                                   // 310
            module.hide();                                                                                             // 311
          }                                                                                                            // 312
                                                                                                                       // 313
        },                                                                                                             // 314
                                                                                                                       // 315
        get: {                                                                                                         // 316
          text: function() {                                                                                           // 317
            return $text.text();                                                                                       // 318
          },                                                                                                           // 319
          value: function() {                                                                                          // 320
            return ($input.size() > 0)                                                                                 // 321
              ? $input.val()                                                                                           // 322
              : $module.data(metadata.value)                                                                           // 323
            ;                                                                                                          // 324
          },                                                                                                           // 325
          item: function(value) {                                                                                      // 326
            var                                                                                                        // 327
              $selectedItem                                                                                            // 328
            ;                                                                                                          // 329
            value = (value !== undefined)                                                                              // 330
              ? value                                                                                                  // 331
              : ( module.get.value() !== undefined)                                                                    // 332
                ? module.get.value()                                                                                   // 333
                : module.get.text()                                                                                    // 334
            ;                                                                                                          // 335
            if(value !== undefined) {                                                                                  // 336
              $item                                                                                                    // 337
                .each(function() {                                                                                     // 338
                  var                                                                                                  // 339
                    $choice       = $(this),                                                                           // 340
                    optionText    = ( $choice.data(metadata.text) !== undefined )                                      // 341
                      ? $choice.data(metadata.text)                                                                    // 342
                      : $choice.text(),                                                                                // 343
                    optionValue   = ( $choice.data(metadata.value) !== undefined )                                     // 344
                      ? $choice.data(metadata.value)                                                                   // 345
                      : optionText.toLowerCase()                                                                       // 346
                  ;                                                                                                    // 347
                  if( optionValue == value || optionText == value ) {                                                  // 348
                    $selectedItem = $(this);                                                                           // 349
                    return false;                                                                                      // 350
                  }                                                                                                    // 351
                })                                                                                                     // 352
              ;                                                                                                        // 353
            }                                                                                                          // 354
            else {                                                                                                     // 355
              value = module.get.text();                                                                               // 356
            }                                                                                                          // 357
            return $selectedItem || false;                                                                             // 358
          }                                                                                                            // 359
        },                                                                                                             // 360
                                                                                                                       // 361
        set: {                                                                                                         // 362
          text: function(text) {                                                                                       // 363
            module.debug('Changing text', text, $text);                                                                // 364
            $text.removeClass(className.placeholder);                                                                  // 365
            $text.text(text);                                                                                          // 366
          },                                                                                                           // 367
          value: function(value) {                                                                                     // 368
            module.debug('Adding selected value to hidden input', value, $input);                                      // 369
            if($input.size() > 0) {                                                                                    // 370
              $input.val(value);                                                                                       // 371
            }                                                                                                          // 372
            else {                                                                                                     // 373
              $module.data(metadata.value, value);                                                                     // 374
            }                                                                                                          // 375
          },                                                                                                           // 376
          active: function() {                                                                                         // 377
            $module.addClass(className.active);                                                                        // 378
          },                                                                                                           // 379
          visible: function() {                                                                                        // 380
            $module.addClass(className.visible);                                                                       // 381
          },                                                                                                           // 382
          selected: function(value) {                                                                                  // 383
            var                                                                                                        // 384
              $selectedItem = module.get.item(value),                                                                  // 385
              selectedText                                                                                             // 386
            ;                                                                                                          // 387
            if($selectedItem) {                                                                                        // 388
              module.debug('Setting selected menu item to', $selectedItem);                                            // 389
              selectedText = ($selectedItem.data(metadata.text) !== undefined)                                         // 390
                ? $selectedItem.data(metadata.text)                                                                    // 391
                : $selectedItem.text()                                                                                 // 392
              ;                                                                                                        // 393
              $item                                                                                                    // 394
                .removeClass(className.active)                                                                         // 395
              ;                                                                                                        // 396
              $selectedItem                                                                                            // 397
                .addClass(className.active)                                                                            // 398
              ;                                                                                                        // 399
              module.set.text(selectedText);                                                                           // 400
            }                                                                                                          // 401
          }                                                                                                            // 402
        },                                                                                                             // 403
                                                                                                                       // 404
        remove: {                                                                                                      // 405
          active: function() {                                                                                         // 406
            $module.removeClass(className.active);                                                                     // 407
          },                                                                                                           // 408
          visible: function() {                                                                                        // 409
            $module.removeClass(className.visible);                                                                    // 410
          }                                                                                                            // 411
        },                                                                                                             // 412
                                                                                                                       // 413
        is: {                                                                                                          // 414
          selection: function() {                                                                                      // 415
            return $module.hasClass(className.selection);                                                              // 416
          },                                                                                                           // 417
          animated: function($subMenu) {                                                                               // 418
            return ($subMenu)                                                                                          // 419
              ? $subMenu.is(':animated') || $subMenu.transition('is animating')                                        // 420
              : $menu.is(':animated') || $menu.transition('is animating')                                              // 421
            ;                                                                                                          // 422
          },                                                                                                           // 423
          visible: function($subMenu) {                                                                                // 424
            return ($subMenu)                                                                                          // 425
              ? $subMenu.is(':visible')                                                                                // 426
              : $menu.is(':visible')                                                                                   // 427
            ;                                                                                                          // 428
          },                                                                                                           // 429
          hidden: function($subMenu) {                                                                                 // 430
            return ($subMenu)                                                                                          // 431
              ? $subMenu.is(':not(:visible)')                                                                          // 432
              : $menu.is(':not(:visible)')                                                                             // 433
            ;                                                                                                          // 434
          }                                                                                                            // 435
        },                                                                                                             // 436
                                                                                                                       // 437
        can: {                                                                                                         // 438
          click: function() {                                                                                          // 439
            return (hasTouch || settings.on == 'click');                                                               // 440
          },                                                                                                           // 441
          show: function() {                                                                                           // 442
            return !$module.hasClass(className.disabled);                                                              // 443
          }                                                                                                            // 444
        },                                                                                                             // 445
                                                                                                                       // 446
        animate: {                                                                                                     // 447
          show: function(callback, $subMenu) {                                                                         // 448
            var                                                                                                        // 449
              $currentMenu = $subMenu || $menu                                                                         // 450
            ;                                                                                                          // 451
            callback = callback || function(){};                                                                       // 452
            if( module.is.hidden($currentMenu) ) {                                                                     // 453
              module.verbose('Doing menu show animation', $currentMenu);                                               // 454
              if(settings.transition == 'none') {                                                                      // 455
                callback();                                                                                            // 456
              }                                                                                                        // 457
              else if($.fn.transition !== undefined && $module.transition('is supported')) {                           // 458
                $currentMenu.transition({                                                                              // 459
                  animation : settings.transition + ' in',                                                             // 460
                  duration  : settings.duration,                                                                       // 461
                  complete  : callback,                                                                                // 462
                  queue     : false                                                                                    // 463
                });                                                                                                    // 464
              }                                                                                                        // 465
              else if(settings.transition == 'slide down') {                                                           // 466
                $currentMenu                                                                                           // 467
                  .hide()                                                                                              // 468
                  .clearQueue()                                                                                        // 469
                  .children()                                                                                          // 470
                    .clearQueue()                                                                                      // 471
                    .css('opacity', 0)                                                                                 // 472
                    .delay(50)                                                                                         // 473
                    .animate({                                                                                         // 474
                      opacity : 1                                                                                      // 475
                    }, settings.duration, 'easeOutQuad', module.event.resetStyle)                                      // 476
                    .end()                                                                                             // 477
                  .slideDown(100, 'easeOutQuad', function() {                                                          // 478
                    $.proxy(module.event.resetStyle, this)();                                                          // 479
                    callback();                                                                                        // 480
                  })                                                                                                   // 481
                ;                                                                                                      // 482
              }                                                                                                        // 483
              else if(settings.transition == 'fade') {                                                                 // 484
                $currentMenu                                                                                           // 485
                  .hide()                                                                                              // 486
                  .clearQueue()                                                                                        // 487
                  .fadeIn(settings.duration, function() {                                                              // 488
                    $.proxy(module.event.resetStyle, this)();                                                          // 489
                    callback();                                                                                        // 490
                  })                                                                                                   // 491
                ;                                                                                                      // 492
              }                                                                                                        // 493
              else {                                                                                                   // 494
                module.error(error.transition, settings.transition);                                                   // 495
              }                                                                                                        // 496
            }                                                                                                          // 497
          },                                                                                                           // 498
          hide: function(callback, $subMenu) {                                                                         // 499
            var                                                                                                        // 500
              $currentMenu = $subMenu || $menu                                                                         // 501
            ;                                                                                                          // 502
            callback = callback || function(){};                                                                       // 503
            if(module.is.visible($currentMenu) ) {                                                                     // 504
              module.verbose('Doing menu hide animation', $currentMenu);                                               // 505
              if($.fn.transition !== undefined && $module.transition('is supported')) {                                // 506
                $currentMenu.transition({                                                                              // 507
                  animation : settings.transition + ' out',                                                            // 508
                  duration  : settings.duration,                                                                       // 509
                  complete  : callback,                                                                                // 510
                  queue     : false                                                                                    // 511
                });                                                                                                    // 512
              }                                                                                                        // 513
              else if(settings.transition == 'none') {                                                                 // 514
                callback();                                                                                            // 515
              }                                                                                                        // 516
              else if(settings.transition == 'slide down') {                                                           // 517
                $currentMenu                                                                                           // 518
                  .show()                                                                                              // 519
                  .clearQueue()                                                                                        // 520
                  .children()                                                                                          // 521
                    .clearQueue()                                                                                      // 522
                    .css('opacity', 1)                                                                                 // 523
                    .animate({                                                                                         // 524
                      opacity : 0                                                                                      // 525
                    }, 100, 'easeOutQuad', module.event.resetStyle)                                                    // 526
                    .end()                                                                                             // 527
                  .delay(50)                                                                                           // 528
                  .slideUp(100, 'easeOutQuad', function() {                                                            // 529
                    $.proxy(module.event.resetStyle, this)();                                                          // 530
                    callback();                                                                                        // 531
                  })                                                                                                   // 532
                ;                                                                                                      // 533
              }                                                                                                        // 534
              else if(settings.transition == 'fade') {                                                                 // 535
                $currentMenu                                                                                           // 536
                  .show()                                                                                              // 537
                  .clearQueue()                                                                                        // 538
                  .fadeOut(150, function() {                                                                           // 539
                    $.proxy(module.event.resetStyle, this)();                                                          // 540
                    callback();                                                                                        // 541
                  })                                                                                                   // 542
                ;                                                                                                      // 543
              }                                                                                                        // 544
              else {                                                                                                   // 545
                module.error(error.transition);                                                                        // 546
              }                                                                                                        // 547
            }                                                                                                          // 548
          }                                                                                                            // 549
        },                                                                                                             // 550
                                                                                                                       // 551
        show: function() {                                                                                             // 552
          module.debug('Checking if dropdown can show');                                                               // 553
          if( module.is.hidden() ) {                                                                                   // 554
            module.hideOthers();                                                                                       // 555
            module.set.active();                                                                                       // 556
            module.animate.show(function() {                                                                           // 557
              if( module.can.click() ) {                                                                               // 558
                module.bind.intent();                                                                                  // 559
              }                                                                                                        // 560
              module.set.visible();                                                                                    // 561
            });                                                                                                        // 562
            $.proxy(settings.onShow, element)();                                                                       // 563
          }                                                                                                            // 564
        },                                                                                                             // 565
                                                                                                                       // 566
        hide: function() {                                                                                             // 567
          if( !module.is.animated() && module.is.visible() ) {                                                         // 568
            module.debug('Hiding dropdown');                                                                           // 569
            if( module.can.click() ) {                                                                                 // 570
              module.unbind.intent();                                                                                  // 571
            }                                                                                                          // 572
            module.remove.active();                                                                                    // 573
            module.animate.hide(module.remove.visible);                                                                // 574
            $.proxy(settings.onHide, element)();                                                                       // 575
          }                                                                                                            // 576
        },                                                                                                             // 577
                                                                                                                       // 578
        delay: {                                                                                                       // 579
          show: function() {                                                                                           // 580
            module.verbose('Delaying show event to ensure user intent');                                               // 581
            clearTimeout(module.timer);                                                                                // 582
            module.timer = setTimeout(module.show, settings.delay.show);                                               // 583
          },                                                                                                           // 584
          hide: function() {                                                                                           // 585
            module.verbose('Delaying hide event to ensure user intent');                                               // 586
            clearTimeout(module.timer);                                                                                // 587
            module.timer = setTimeout(module.hide, settings.delay.hide);                                               // 588
          }                                                                                                            // 589
        },                                                                                                             // 590
                                                                                                                       // 591
        hideOthers: function() {                                                                                       // 592
          module.verbose('Finding other dropdowns to hide');                                                           // 593
          $allModules                                                                                                  // 594
            .not($module)                                                                                              // 595
              .has(selector.menu + ':visible')                                                                         // 596
              .dropdown('hide')                                                                                        // 597
          ;                                                                                                            // 598
        },                                                                                                             // 599
                                                                                                                       // 600
        toggle: function() {                                                                                           // 601
          module.verbose('Toggling menu visibility');                                                                  // 602
          if( module.is.hidden() ) {                                                                                   // 603
            module.show();                                                                                             // 604
          }                                                                                                            // 605
          else {                                                                                                       // 606
            module.hide();                                                                                             // 607
          }                                                                                                            // 608
        },                                                                                                             // 609
                                                                                                                       // 610
        setting: function(name, value) {                                                                               // 611
          if( $.isPlainObject(name) ) {                                                                                // 612
            $.extend(true, settings, name);                                                                            // 613
          }                                                                                                            // 614
          else if(value !== undefined) {                                                                               // 615
            settings[name] = value;                                                                                    // 616
          }                                                                                                            // 617
          else {                                                                                                       // 618
            return settings[name];                                                                                     // 619
          }                                                                                                            // 620
        },                                                                                                             // 621
        internal: function(name, value) {                                                                              // 622
          if( $.isPlainObject(name) ) {                                                                                // 623
            $.extend(true, module, name);                                                                              // 624
          }                                                                                                            // 625
          else if(value !== undefined) {                                                                               // 626
            module[name] = value;                                                                                      // 627
          }                                                                                                            // 628
          else {                                                                                                       // 629
            return module[name];                                                                                       // 630
          }                                                                                                            // 631
        },                                                                                                             // 632
        debug: function() {                                                                                            // 633
          if(settings.debug) {                                                                                         // 634
            if(settings.performance) {                                                                                 // 635
              module.performance.log(arguments);                                                                       // 636
            }                                                                                                          // 637
            else {                                                                                                     // 638
              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');                 // 639
              module.debug.apply(console, arguments);                                                                  // 640
            }                                                                                                          // 641
          }                                                                                                            // 642
        },                                                                                                             // 643
        verbose: function() {                                                                                          // 644
          if(settings.verbose && settings.debug) {                                                                     // 645
            if(settings.performance) {                                                                                 // 646
              module.performance.log(arguments);                                                                       // 647
            }                                                                                                          // 648
            else {                                                                                                     // 649
              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');               // 650
              module.verbose.apply(console, arguments);                                                                // 651
            }                                                                                                          // 652
          }                                                                                                            // 653
        },                                                                                                             // 654
        error: function() {                                                                                            // 655
          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');                    // 656
          module.error.apply(console, arguments);                                                                      // 657
        },                                                                                                             // 658
        performance: {                                                                                                 // 659
          log: function(message) {                                                                                     // 660
            var                                                                                                        // 661
              currentTime,                                                                                             // 662
              executionTime,                                                                                           // 663
              previousTime                                                                                             // 664
            ;                                                                                                          // 665
            if(settings.performance) {                                                                                 // 666
              currentTime   = new Date().getTime();                                                                    // 667
              previousTime  = time || currentTime;                                                                     // 668
              executionTime = currentTime - previousTime;                                                              // 669
              time          = currentTime;                                                                             // 670
              performance.push({                                                                                       // 671
                'Element'        : element,                                                                            // 672
                'Name'           : message[0],                                                                         // 673
                'Arguments'      : [].slice.call(message, 1) || '',                                                    // 674
                'Execution Time' : executionTime                                                                       // 675
              });                                                                                                      // 676
            }                                                                                                          // 677
            clearTimeout(module.performance.timer);                                                                    // 678
            module.performance.timer = setTimeout(module.performance.display, 100);                                    // 679
          },                                                                                                           // 680
          display: function() {                                                                                        // 681
            var                                                                                                        // 682
              title = settings.name + ':',                                                                             // 683
              totalTime = 0                                                                                            // 684
            ;                                                                                                          // 685
            time = false;                                                                                              // 686
            clearTimeout(module.performance.timer);                                                                    // 687
            $.each(performance, function(index, data) {                                                                // 688
              totalTime += data['Execution Time'];                                                                     // 689
            });                                                                                                        // 690
            title += ' ' + totalTime + 'ms';                                                                           // 691
            if(moduleSelector) {                                                                                       // 692
              title += ' \'' + moduleSelector + '\'';                                                                  // 693
            }                                                                                                          // 694
            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {              // 695
              console.groupCollapsed(title);                                                                           // 696
              if(console.table) {                                                                                      // 697
                console.table(performance);                                                                            // 698
              }                                                                                                        // 699
              else {                                                                                                   // 700
                $.each(performance, function(index, data) {                                                            // 701
                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');                                      // 702
                });                                                                                                    // 703
              }                                                                                                        // 704
              console.groupEnd();                                                                                      // 705
            }                                                                                                          // 706
            performance = [];                                                                                          // 707
          }                                                                                                            // 708
        },                                                                                                             // 709
        invoke: function(query, passedArguments, context) {                                                            // 710
          var                                                                                                          // 711
            maxDepth,                                                                                                  // 712
            found,                                                                                                     // 713
            response                                                                                                   // 714
          ;                                                                                                            // 715
          passedArguments = passedArguments || queryArguments;                                                         // 716
          context         = element         || context;                                                                // 717
          if(typeof query == 'string' && instance !== undefined) {                                                     // 718
            query    = query.split(/[\. ]/);                                                                           // 719
            maxDepth = query.length - 1;                                                                               // 720
            $.each(query, function(depth, value) {                                                                     // 721
              var camelCaseValue = (depth != maxDepth)                                                                 // 722
                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)                         // 723
                : query                                                                                                // 724
              ;                                                                                                        // 725
              if( $.isPlainObject( instance[camelCaseValue] ) && (depth != maxDepth) ) {                               // 726
                instance = instance[camelCaseValue];                                                                   // 727
              }                                                                                                        // 728
              else if( instance[camelCaseValue] !== undefined ) {                                                      // 729
                found = instance[camelCaseValue];                                                                      // 730
                return false;                                                                                          // 731
              }                                                                                                        // 732
              else if( $.isPlainObject( instance[value] ) && (depth != maxDepth) ) {                                   // 733
                instance = instance[value];                                                                            // 734
              }                                                                                                        // 735
              else if( instance[value] !== undefined ) {                                                               // 736
                found = instance[value];                                                                               // 737
                return false;                                                                                          // 738
              }                                                                                                        // 739
              else {                                                                                                   // 740
                module.error(error.method, query);                                                                     // 741
                return false;                                                                                          // 742
              }                                                                                                        // 743
            });                                                                                                        // 744
          }                                                                                                            // 745
          if ( $.isFunction( found ) ) {                                                                               // 746
            response = found.apply(context, passedArguments);                                                          // 747
          }                                                                                                            // 748
          else if(found !== undefined) {                                                                               // 749
            response = found;                                                                                          // 750
          }                                                                                                            // 751
          if($.isArray(returnedValue)) {                                                                               // 752
            returnedValue.push(response);                                                                              // 753
          }                                                                                                            // 754
          else if(returnedValue !== undefined) {                                                                       // 755
            returnedValue = [returnedValue, response];                                                                 // 756
          }                                                                                                            // 757
          else if(response !== undefined) {                                                                            // 758
            returnedValue = response;                                                                                  // 759
          }                                                                                                            // 760
          return found;                                                                                                // 761
        }                                                                                                              // 762
      };                                                                                                               // 763
                                                                                                                       // 764
      if(methodInvoked) {                                                                                              // 765
        if(instance === undefined) {                                                                                   // 766
          module.initialize();                                                                                         // 767
        }                                                                                                              // 768
        module.invoke(query);                                                                                          // 769
      }                                                                                                                // 770
      else {                                                                                                           // 771
        if(instance !== undefined) {                                                                                   // 772
          module.destroy();                                                                                            // 773
        }                                                                                                              // 774
        module.initialize();                                                                                           // 775
      }                                                                                                                // 776
    })                                                                                                                 // 777
  ;                                                                                                                    // 778
                                                                                                                       // 779
  return (returnedValue)                                                                                               // 780
    ? returnedValue                                                                                                    // 781
    : this                                                                                                             // 782
  ;                                                                                                                    // 783
};                                                                                                                     // 784
                                                                                                                       // 785
$.fn.dropdown.settings = {                                                                                             // 786
                                                                                                                       // 787
  name        : 'Dropdown',                                                                                            // 788
  namespace   : 'dropdown',                                                                                            // 789
                                                                                                                       // 790
  verbose     : true,                                                                                                  // 791
  debug       : true,                                                                                                  // 792
  performance : true,                                                                                                  // 793
                                                                                                                       // 794
  on          : 'click',                                                                                               // 795
  action      : 'activate',                                                                                            // 796
                                                                                                                       // 797
  delay: {                                                                                                             // 798
    show  : 200,                                                                                                       // 799
    hide  : 300,                                                                                                       // 800
    touch : 50                                                                                                         // 801
  },                                                                                                                   // 802
                                                                                                                       // 803
  transition : 'slide down',                                                                                           // 804
  duration   : 250,                                                                                                    // 805
                                                                                                                       // 806
  onChange : function(value, text){},                                                                                  // 807
  onShow   : function(){},                                                                                             // 808
  onHide   : function(){},                                                                                             // 809
                                                                                                                       // 810
  error   : {                                                                                                          // 811
    action    : 'You called a dropdown action that was not defined',                                                   // 812
    method    : 'The method you called is not defined.',                                                               // 813
    transition : 'The requested transition was not found'                                                              // 814
  },                                                                                                                   // 815
                                                                                                                       // 816
  metadata: {                                                                                                          // 817
    text    : 'text',                                                                                                  // 818
    value   : 'value'                                                                                                  // 819
  },                                                                                                                   // 820
                                                                                                                       // 821
  selector : {                                                                                                         // 822
    menu  : '.menu',                                                                                                   // 823
    item  : '.menu > .item',                                                                                           // 824
    text  : '> .text',                                                                                                 // 825
    input : '> input[type="hidden"]'                                                                                   // 826
  },                                                                                                                   // 827
                                                                                                                       // 828
  className : {                                                                                                        // 829
    active      : 'active',                                                                                            // 830
    placeholder : 'default',                                                                                           // 831
    disabled    : 'disabled',                                                                                          // 832
    visible     : 'visible',                                                                                           // 833
    selection   : 'selection'                                                                                          // 834
  }                                                                                                                    // 835
                                                                                                                       // 836
};                                                                                                                     // 837
                                                                                                                       // 838
// Adds easing                                                                                                         // 839
$.extend( $.easing, {                                                                                                  // 840
  easeOutQuad: function (x, t, b, c, d) {                                                                              // 841
    return -c *(t/=d)*(t-2) + b;                                                                                       // 842
  },                                                                                                                   // 843
});                                                                                                                    // 844
                                                                                                                       // 845
                                                                                                                       // 846
})( jQuery, window , document );                                                                                       // 847
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}).call(this);






(function () {

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// packages/semantic-ui/lib/semantic-ui/build/uncompressed/modules/modal.js                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/*                                                                                                                     // 1
 * # Semantic - Modal                                                                                                  // 2
 * http://github.com/jlukic/semantic-ui/                                                                               // 3
 *                                                                                                                     // 4
 *                                                                                                                     // 5
 * Copyright 2013 Contributors                                                                                         // 6
 * Released under the MIT license                                                                                      // 7
 * http://opensource.org/licenses/MIT                                                                                  // 8
 *                                                                                                                     // 9
 */                                                                                                                    // 10
                                                                                                                       // 11
;(function ( $, window, document, undefined ) {                                                                        // 12
                                                                                                                       // 13
$.fn.modal = function(parameters) {                                                                                    // 14
  var                                                                                                                  // 15
    $allModules = $(this),                                                                                             // 16
    $window     = $(window),                                                                                           // 17
    $document   = $(document),                                                                                         // 18
                                                                                                                       // 19
    time            = new Date().getTime(),                                                                            // 20
    performance     = [],                                                                                              // 21
                                                                                                                       // 22
    query           = arguments[0],                                                                                    // 23
    methodInvoked   = (typeof query == 'string'),                                                                      // 24
    queryArguments  = [].slice.call(arguments, 1),                                                                     // 25
                                                                                                                       // 26
    returnedValue                                                                                                      // 27
  ;                                                                                                                    // 28
                                                                                                                       // 29
                                                                                                                       // 30
  $allModules                                                                                                          // 31
    .each(function() {                                                                                                 // 32
      var                                                                                                              // 33
        settings    = ( $.isPlainObject(parameters) )                                                                  // 34
          ? $.extend(true, {}, $.fn.modal.settings, parameters)                                                        // 35
          : $.extend({}, $.fn.modal.settings),                                                                         // 36
                                                                                                                       // 37
        selector        = settings.selector,                                                                           // 38
        className       = settings.className,                                                                          // 39
        namespace       = settings.namespace,                                                                          // 40
        error           = settings.error,                                                                              // 41
                                                                                                                       // 42
        eventNamespace  = '.' + namespace,                                                                             // 43
        moduleNamespace = 'module-' + namespace,                                                                       // 44
        moduleSelector  = $allModules.selector || '',                                                                  // 45
                                                                                                                       // 46
        $module      = $(this),                                                                                        // 47
        $context     = $(settings.context),                                                                            // 48
        $close       = $module.find(selector.close),                                                                   // 49
                                                                                                                       // 50
        $allModals,                                                                                                    // 51
        $otherModals,                                                                                                  // 52
        $focusedElement,                                                                                               // 53
        $dimmable,                                                                                                     // 54
        $dimmer,                                                                                                       // 55
                                                                                                                       // 56
        element      = this,                                                                                           // 57
        instance     = $module.data(moduleNamespace),                                                                  // 58
        module                                                                                                         // 59
      ;                                                                                                                // 60
                                                                                                                       // 61
      module  = {                                                                                                      // 62
                                                                                                                       // 63
        initialize: function() {                                                                                       // 64
          module.verbose('Initializing dimmer', $context);                                                             // 65
                                                                                                                       // 66
          if(typeof $.fn.dimmer === undefined) {                                                                       // 67
            module.error(error.dimmer);                                                                                // 68
            return;                                                                                                    // 69
          }                                                                                                            // 70
          $dimmable = $context                                                                                         // 71
            .dimmer({                                                                                                  // 72
              closable : false,                                                                                        // 73
              useCSS   : module.is.modernBrowser(),                                                                    // 74
              show     : settings.duration * 0.9,                                                                      // 75
              hide     : settings.duration * 1.1                                                                       // 76
            })                                                                                                         // 77
            .dimmer('add content', $module)                                                                            // 78
          ;                                                                                                            // 79
          $dimmer = $dimmable                                                                                          // 80
            .dimmer('get dimmer')                                                                                      // 81
          ;                                                                                                            // 82
                                                                                                                       // 83
          $otherModals = $module.siblings(selector.modal);                                                             // 84
          $allModals   = $otherModals.add($module);                                                                    // 85
                                                                                                                       // 86
          module.verbose('Attaching close events', $close);                                                            // 87
          $close                                                                                                       // 88
            .on('click' + eventNamespace, module.event.close)                                                          // 89
          ;                                                                                                            // 90
          $window                                                                                                      // 91
            .on('resize' + eventNamespace, function() {                                                                // 92
              module.event.debounce(module.refresh, 50);                                                               // 93
            })                                                                                                         // 94
          ;                                                                                                            // 95
          module.instantiate();                                                                                        // 96
        },                                                                                                             // 97
                                                                                                                       // 98
        instantiate: function() {                                                                                      // 99
          module.verbose('Storing instance of modal');                                                                 // 100
          instance = module;                                                                                           // 101
          $module                                                                                                      // 102
            .data(moduleNamespace, instance)                                                                           // 103
          ;                                                                                                            // 104
        },                                                                                                             // 105
                                                                                                                       // 106
        destroy: function() {                                                                                          // 107
          module.verbose('Destroying previous modal');                                                                 // 108
          $module                                                                                                      // 109
            .removeData(moduleNamespace)                                                                               // 110
            .off(eventNamespace)                                                                                       // 111
          ;                                                                                                            // 112
          $close                                                                                                       // 113
            .off(eventNamespace)                                                                                       // 114
          ;                                                                                                            // 115
          $context                                                                                                     // 116
            .dimmer('destroy')                                                                                         // 117
          ;                                                                                                            // 118
        },                                                                                                             // 119
                                                                                                                       // 120
        refresh: function() {                                                                                          // 121
          module.remove.scrolling();                                                                                   // 122
          module.cacheSizes();                                                                                         // 123
          module.set.type();                                                                                           // 124
          module.set.position();                                                                                       // 125
        },                                                                                                             // 126
                                                                                                                       // 127
        attachEvents: function(selector, event) {                                                                      // 128
          var                                                                                                          // 129
            $toggle = $(selector)                                                                                      // 130
          ;                                                                                                            // 131
          event = $.isFunction(module[event])                                                                          // 132
            ? module[event]                                                                                            // 133
            : module.toggle                                                                                            // 134
          ;                                                                                                            // 135
          if($toggle.size() > 0) {                                                                                     // 136
            module.debug('Attaching modal events to element', selector, event);                                        // 137
            $toggle                                                                                                    // 138
              .off(eventNamespace)                                                                                     // 139
              .on('click' + eventNamespace, event)                                                                     // 140
            ;                                                                                                          // 141
          }                                                                                                            // 142
          else {                                                                                                       // 143
            module.error(error.notFound);                                                                              // 144
          }                                                                                                            // 145
        },                                                                                                             // 146
                                                                                                                       // 147
        event: {                                                                                                       // 148
          close: function() {                                                                                          // 149
            module.verbose('Closing element pressed');                                                                 // 150
            if( $(this).is(selector.approve) ) {                                                                       // 151
              if($.proxy(settings.onApprove, element)() !== false) {                                                   // 152
                module.hide();                                                                                         // 153
              }                                                                                                        // 154
              else {                                                                                                   // 155
                module.verbose('Approve callback returned false cancelling hide');                                     // 156
              }                                                                                                        // 157
            }                                                                                                          // 158
            else if( $(this).is(selector.deny) ) {                                                                     // 159
              if($.proxy(settings.onDeny, element)() !== false) {                                                      // 160
                module.hide();                                                                                         // 161
              }                                                                                                        // 162
              else {                                                                                                   // 163
                module.verbose('Deny callback returned false cancelling hide');                                        // 164
              }                                                                                                        // 165
            }                                                                                                          // 166
            else {                                                                                                     // 167
              module.hide();                                                                                           // 168
            }                                                                                                          // 169
          },                                                                                                           // 170
          click: function(event) {                                                                                     // 171
            if( $(event.target).closest(selector.modal).size() === 0 ) {                                               // 172
              module.debug('Dimmer clicked, hiding all modals');                                                       // 173
              module.hideAll();                                                                                        // 174
              event.stopImmediatePropagation();                                                                        // 175
            }                                                                                                          // 176
          },                                                                                                           // 177
          debounce: function(method, delay) {                                                                          // 178
            clearTimeout(module.timer);                                                                                // 179
            module.timer = setTimeout(method, delay);                                                                  // 180
          },                                                                                                           // 181
          keyboard: function(event) {                                                                                  // 182
            var                                                                                                        // 183
              keyCode   = event.which,                                                                                 // 184
              escapeKey = 27                                                                                           // 185
            ;                                                                                                          // 186
            if(keyCode == escapeKey) {                                                                                 // 187
              if(settings.closable) {                                                                                  // 188
                module.debug('Escape key pressed hiding modal');                                                       // 189
                module.hide();                                                                                         // 190
              }                                                                                                        // 191
              else {                                                                                                   // 192
                module.debug('Escape key pressed, but closable is set to false');                                      // 193
              }                                                                                                        // 194
              event.preventDefault();                                                                                  // 195
            }                                                                                                          // 196
          },                                                                                                           // 197
          resize: function() {                                                                                         // 198
            if( $dimmable.dimmer('is active') ) {                                                                      // 199
              module.refresh();                                                                                        // 200
            }                                                                                                          // 201
          }                                                                                                            // 202
        },                                                                                                             // 203
                                                                                                                       // 204
        toggle: function() {                                                                                           // 205
          if( module.is.active() ) {                                                                                   // 206
            module.hide();                                                                                             // 207
          }                                                                                                            // 208
          else {                                                                                                       // 209
            module.show();                                                                                             // 210
          }                                                                                                            // 211
        },                                                                                                             // 212
                                                                                                                       // 213
        show: function(callback) {                                                                                     // 214
          callback = $.isFunction(callback)                                                                            // 215
            ? callback                                                                                                 // 216
            : function(){}                                                                                             // 217
          ;                                                                                                            // 218
          module.showDimmer();                                                                                         // 219
          module.showModal(callback);                                                                                  // 220
        },                                                                                                             // 221
                                                                                                                       // 222
        showModal: function(callback) {                                                                                // 223
          callback = $.isFunction(callback)                                                                            // 224
            ? callback                                                                                                 // 225
            : function(){}                                                                                             // 226
          ;                                                                                                            // 227
          if( !module.is.active() ) {                                                                                  // 228
            module.cacheSizes();                                                                                       // 229
            module.set.position();                                                                                     // 230
            module.set.type();                                                                                         // 231
                                                                                                                       // 232
            if( $otherModals.filter(':visible').size() > 0 ) {                                                         // 233
              module.debug('Other modals visible, queueing show animation');                                           // 234
              module.hideOthers(module.showModal);                                                                     // 235
            }                                                                                                          // 236
            else {                                                                                                     // 237
              if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {         // 238
                module.debug('Showing modal with css animations');                                                     // 239
                $module                                                                                                // 240
                  .transition(settings.transition + ' in', settings.duration, function() {                             // 241
                    module.set.active();                                                                               // 242
                    callback();                                                                                        // 243
                  })                                                                                                   // 244
                ;                                                                                                      // 245
              }                                                                                                        // 246
              else {                                                                                                   // 247
                module.debug('Showing modal with javascript');                                                         // 248
                $module                                                                                                // 249
                  .fadeIn(settings.duration, settings.easing, function() {                                             // 250
                    module.set.active();                                                                               // 251
                    callback();                                                                                        // 252
                  })                                                                                                   // 253
                ;                                                                                                      // 254
              }                                                                                                        // 255
              $.proxy(settings.onShow, element)();                                                                     // 256
            }                                                                                                          // 257
          }                                                                                                            // 258
          else {                                                                                                       // 259
            module.debug('Modal is already visible');                                                                  // 260
          }                                                                                                            // 261
        },                                                                                                             // 262
                                                                                                                       // 263
        showDimmer: function() {                                                                                       // 264
          if( !$dimmable.dimmer('is active') ) {                                                                       // 265
            module.debug('Showing dimmer');                                                                            // 266
            $dimmable.dimmer('show');                                                                                  // 267
          }                                                                                                            // 268
          else {                                                                                                       // 269
            module.debug('Dimmer already visible');                                                                    // 270
          }                                                                                                            // 271
        },                                                                                                             // 272
                                                                                                                       // 273
        hide: function(callback) {                                                                                     // 274
          callback = $.isFunction(callback)                                                                            // 275
            ? callback                                                                                                 // 276
            : function(){}                                                                                             // 277
          ;                                                                                                            // 278
          module.hideDimmer();                                                                                         // 279
          module.hideModal(callback);                                                                                  // 280
        },                                                                                                             // 281
                                                                                                                       // 282
        hideDimmer: function() {                                                                                       // 283
          if( $dimmable.dimmer('is active') ) {                                                                        // 284
            module.debug('Hiding dimmer');                                                                             // 285
            if(settings.closable) {                                                                                    // 286
              $dimmer                                                                                                  // 287
                .off('click' + eventNamespace)                                                                         // 288
              ;                                                                                                        // 289
            }                                                                                                          // 290
            $dimmable.dimmer('hide');                                                                                  // 291
          }                                                                                                            // 292
          else {                                                                                                       // 293
            module.debug('Dimmer is not visible cannot hide');                                                         // 294
          }                                                                                                            // 295
        },                                                                                                             // 296
                                                                                                                       // 297
        hideModal: function(callback) {                                                                                // 298
          callback = $.isFunction(callback)                                                                            // 299
            ? callback                                                                                                 // 300
            : function(){}                                                                                             // 301
          ;                                                                                                            // 302
          if( module.is.active() ) {                                                                                   // 303
            module.debug('Hiding modal');                                                                              // 304
            module.remove.keyboardShortcuts();                                                                         // 305
            if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {           // 306
              $module                                                                                                  // 307
                .transition(settings.transition + ' out', settings.duration, function() {                              // 308
                  module.remove.active();                                                                              // 309
                  module.restore.focus();                                                                              // 310
                  callback();                                                                                          // 311
                })                                                                                                     // 312
              ;                                                                                                        // 313
            }                                                                                                          // 314
            else {                                                                                                     // 315
              $module                                                                                                  // 316
                .fadeOut(settings.duration, settings.easing, function() {                                              // 317
                  module.remove.active();                                                                              // 318
                  module.restore.focus();                                                                              // 319
                  callback();                                                                                          // 320
                })                                                                                                     // 321
              ;                                                                                                        // 322
            }                                                                                                          // 323
            $.proxy(settings.onHide, element)();                                                                       // 324
          }                                                                                                            // 325
        },                                                                                                             // 326
                                                                                                                       // 327
        hideAll: function(callback) {                                                                                  // 328
          callback = $.isFunction(callback)                                                                            // 329
            ? callback                                                                                                 // 330
            : function(){}                                                                                             // 331
          ;                                                                                                            // 332
          if( $allModals.is(':visible') ) {                                                                            // 333
            module.debug('Hiding all visible modals');                                                                 // 334
            module.hideDimmer();                                                                                       // 335
            $allModals                                                                                                 // 336
              .filter(':visible')                                                                                      // 337
                .modal('hide modal', callback)                                                                         // 338
            ;                                                                                                          // 339
          }                                                                                                            // 340
        },                                                                                                             // 341
                                                                                                                       // 342
        hideOthers: function(callback) {                                                                               // 343
          callback = $.isFunction(callback)                                                                            // 344
            ? callback                                                                                                 // 345
            : function(){}                                                                                             // 346
          ;                                                                                                            // 347
          if( $otherModals.is(':visible') ) {                                                                          // 348
            module.debug('Hiding other modals');                                                                       // 349
            $otherModals                                                                                               // 350
              .filter(':visible')                                                                                      // 351
                .modal('hide modal', callback)                                                                         // 352
            ;                                                                                                          // 353
          }                                                                                                            // 354
        },                                                                                                             // 355
                                                                                                                       // 356
        add: {                                                                                                         // 357
          keyboardShortcuts: function() {                                                                              // 358
            module.verbose('Adding keyboard shortcuts');                                                               // 359
            $document                                                                                                  // 360
              .on('keyup' + eventNamespace, module.event.keyboard)                                                     // 361
            ;                                                                                                          // 362
          }                                                                                                            // 363
        },                                                                                                             // 364
                                                                                                                       // 365
        save: {                                                                                                        // 366
          focus: function() {                                                                                          // 367
            $focusedElement = $(document.activeElement).blur();                                                        // 368
          }                                                                                                            // 369
        },                                                                                                             // 370
                                                                                                                       // 371
        restore: {                                                                                                     // 372
          focus: function() {                                                                                          // 373
            if($focusedElement && $focusedElement.size() > 0) {                                                        // 374
              $focusedElement.focus();                                                                                 // 375
            }                                                                                                          // 376
          }                                                                                                            // 377
        },                                                                                                             // 378
                                                                                                                       // 379
        remove: {                                                                                                      // 380
          active: function() {                                                                                         // 381
            $module.removeClass(className.active);                                                                     // 382
          },                                                                                                           // 383
          keyboardShortcuts: function() {                                                                              // 384
            module.verbose('Removing keyboard shortcuts');                                                             // 385
            $document                                                                                                  // 386
              .off('keyup' + eventNamespace)                                                                           // 387
            ;                                                                                                          // 388
          },                                                                                                           // 389
          scrolling: function() {                                                                                      // 390
            $dimmable.removeClass(className.scrolling);                                                                // 391
            $module.removeClass(className.scrolling);                                                                  // 392
          }                                                                                                            // 393
        },                                                                                                             // 394
                                                                                                                       // 395
        cacheSizes: function() {                                                                                       // 396
          module.cache = {                                                                                             // 397
            height        : $module.outerHeight() + settings.offset,                                                   // 398
            contextHeight : (settings.context == 'body')                                                               // 399
              ? $(window).height()                                                                                     // 400
              : $dimmable.height()                                                                                     // 401
          };                                                                                                           // 402
          module.debug('Caching modal and container sizes', module.cache);                                             // 403
        },                                                                                                             // 404
                                                                                                                       // 405
        can: {                                                                                                         // 406
          fit: function() {                                                                                            // 407
            return (module.cache.height < module.cache.contextHeight);                                                 // 408
          }                                                                                                            // 409
        },                                                                                                             // 410
                                                                                                                       // 411
        is: {                                                                                                          // 412
          active: function() {                                                                                         // 413
            return $module.hasClass(className.active);                                                                 // 414
          },                                                                                                           // 415
          modernBrowser: function() {                                                                                  // 416
            // lol                                                                                                     // 417
            return (navigator.appName !== 'Microsoft Internet Explorer');                                              // 418
          }                                                                                                            // 419
        },                                                                                                             // 420
                                                                                                                       // 421
        set: {                                                                                                         // 422
          active: function() {                                                                                         // 423
            module.add.keyboardShortcuts();                                                                            // 424
            module.save.focus();                                                                                       // 425
            $module                                                                                                    // 426
              .addClass(className.active)                                                                              // 427
            ;                                                                                                          // 428
            if(settings.closable) {                                                                                    // 429
              $dimmer                                                                                                  // 430
                .off('click' + eventNamespace)                                                                         // 431
                .on('click' + eventNamespace, module.event.click)                                                      // 432
              ;                                                                                                        // 433
            }                                                                                                          // 434
          },                                                                                                           // 435
          scrolling: function() {                                                                                      // 436
            $dimmable.addClass(className.scrolling);                                                                   // 437
            $module.addClass(className.scrolling);                                                                     // 438
          },                                                                                                           // 439
          type: function() {                                                                                           // 440
            if(module.can.fit()) {                                                                                     // 441
              module.verbose('Modal fits on screen');                                                                  // 442
              module.remove.scrolling();                                                                               // 443
            }                                                                                                          // 444
            else {                                                                                                     // 445
              module.verbose('Modal cannot fit on screen setting to scrolling');                                       // 446
              module.set.scrolling();                                                                                  // 447
            }                                                                                                          // 448
          },                                                                                                           // 449
          position: function() {                                                                                       // 450
            module.verbose('Centering modal on page', module.cache, module.cache.height / 2);                          // 451
            if(module.can.fit()) {                                                                                     // 452
              $module                                                                                                  // 453
                .css({                                                                                                 // 454
                  top: '',                                                                                             // 455
                  marginTop: -(module.cache.height / 2)                                                                // 456
                })                                                                                                     // 457
              ;                                                                                                        // 458
            }                                                                                                          // 459
            else {                                                                                                     // 460
              $module                                                                                                  // 461
                .css({                                                                                                 // 462
                  marginTop : '1em',                                                                                   // 463
                  top       : $document.scrollTop()                                                                    // 464
                })                                                                                                     // 465
              ;                                                                                                        // 466
            }                                                                                                          // 467
          }                                                                                                            // 468
        },                                                                                                             // 469
                                                                                                                       // 470
        setting: function(name, value) {                                                                               // 471
          if( $.isPlainObject(name) ) {                                                                                // 472
            $.extend(true, settings, name);                                                                            // 473
          }                                                                                                            // 474
          else if(value !== undefined) {                                                                               // 475
            settings[name] = value;                                                                                    // 476
          }                                                                                                            // 477
          else {                                                                                                       // 478
            return settings[name];                                                                                     // 479
          }                                                                                                            // 480
        },                                                                                                             // 481
        internal: function(name, value) {                                                                              // 482
          if( $.isPlainObject(name) ) {                                                                                // 483
            $.extend(true, module, name);                                                                              // 484
          }                                                                                                            // 485
          else if(value !== undefined) {                                                                               // 486
            module[name] = value;                                                                                      // 487
          }                                                                                                            // 488
          else {                                                                                                       // 489
            return module[name];                                                                                       // 490
          }                                                                                                            // 491
        },                                                                                                             // 492
        debug: function() {                                                                                            // 493
          if(settings.debug) {                                                                                         // 494
            if(settings.performance) {                                                                                 // 495
              module.performance.log(arguments);                                                                       // 496
            }                                                                                                          // 497
            else {                                                                                                     // 498
              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');                 // 499
              module.debug.apply(console, arguments);                                                                  // 500
            }                                                                                                          // 501
          }                                                                                                            // 502
        },                                                                                                             // 503
        verbose: function() {                                                                                          // 504
          if(settings.verbose && settings.debug) {                                                                     // 505
            if(settings.performance) {                                                                                 // 506
              module.performance.log(arguments);                                                                       // 507
            }                                                                                                          // 508
            else {                                                                                                     // 509
              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');               // 510
              module.verbose.apply(console, arguments);                                                                // 511
            }                                                                                                          // 512
          }                                                                                                            // 513
        },                                                                                                             // 514
        error: function() {                                                                                            // 515
          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');                    // 516
          module.error.apply(console, arguments);                                                                      // 517
        },                                                                                                             // 518
        performance: {                                                                                                 // 519
          log: function(message) {                                                                                     // 520
            var                                                                                                        // 521
              currentTime,                                                                                             // 522
              executionTime,                                                                                           // 523
              previousTime                                                                                             // 524
            ;                                                                                                          // 525
            if(settings.performance) {                                                                                 // 526
              currentTime   = new Date().getTime();                                                                    // 527
              previousTime  = time || currentTime;                                                                     // 528
              executionTime = currentTime - previousTime;                                                              // 529
              time          = currentTime;                                                                             // 530
              performance.push({                                                                                       // 531
                'Element'        : element,                                                                            // 532
                'Name'           : message[0],                                                                         // 533
                'Arguments'      : [].slice.call(message, 1) || '',                                                    // 534
                'Execution Time' : executionTime                                                                       // 535
              });                                                                                                      // 536
            }                                                                                                          // 537
            clearTimeout(module.performance.timer);                                                                    // 538
            module.performance.timer = setTimeout(module.performance.display, 100);                                    // 539
          },                                                                                                           // 540
          display: function() {                                                                                        // 541
            var                                                                                                        // 542
              title = settings.name + ':',                                                                             // 543
              totalTime = 0                                                                                            // 544
            ;                                                                                                          // 545
            time = false;                                                                                              // 546
            clearTimeout(module.performance.timer);                                                                    // 547
            $.each(performance, function(index, data) {                                                                // 548
              totalTime += data['Execution Time'];                                                                     // 549
            });                                                                                                        // 550
            title += ' ' + totalTime + 'ms';                                                                           // 551
            if(moduleSelector) {                                                                                       // 552
              title += ' \'' + moduleSelector + '\'';                                                                  // 553
            }                                                                                                          // 554
            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {              // 555
              console.groupCollapsed(title);                                                                           // 556
              if(console.table) {                                                                                      // 557
                console.table(performance);                                                                            // 558
              }                                                                                                        // 559
              else {                                                                                                   // 560
                $.each(performance, function(index, data) {                                                            // 561
                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');                                      // 562
                });                                                                                                    // 563
              }                                                                                                        // 564
              console.groupEnd();                                                                                      // 565
            }                                                                                                          // 566
            performance = [];                                                                                          // 567
          }                                                                                                            // 568
        },                                                                                                             // 569
        invoke: function(query, passedArguments, context) {                                                            // 570
          var                                                                                                          // 571
            maxDepth,                                                                                                  // 572
            found,                                                                                                     // 573
            response                                                                                                   // 574
          ;                                                                                                            // 575
          passedArguments = passedArguments || queryArguments;                                                         // 576
          context         = element         || context;                                                                // 577
          if(typeof query == 'string' && instance !== undefined) {                                                     // 578
            query    = query.split(/[\. ]/);                                                                           // 579
            maxDepth = query.length - 1;                                                                               // 580
            $.each(query, function(depth, value) {                                                                     // 581
              var camelCaseValue = (depth != maxDepth)                                                                 // 582
                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)                         // 583
                : query                                                                                                // 584
              ;                                                                                                        // 585
              if( $.isPlainObject( instance[camelCaseValue] ) && (depth != maxDepth) ) {                               // 586
                instance = instance[camelCaseValue];                                                                   // 587
              }                                                                                                        // 588
              else if( instance[camelCaseValue] !== undefined ) {                                                      // 589
                found = instance[camelCaseValue];                                                                      // 590
                return false;                                                                                          // 591
              }                                                                                                        // 592
              else if( $.isPlainObject( instance[value] ) && (depth != maxDepth) ) {                                   // 593
                instance = instance[value];                                                                            // 594
              }                                                                                                        // 595
              else if( instance[value] !== undefined ) {                                                               // 596
                found = instance[value];                                                                               // 597
                return false;                                                                                          // 598
              }                                                                                                        // 599
              else {                                                                                                   // 600
                module.error(error.method, query);                                                                     // 601
                return false;                                                                                          // 602
              }                                                                                                        // 603
            });                                                                                                        // 604
          }                                                                                                            // 605
          if ( $.isFunction( found ) ) {                                                                               // 606
            response = found.apply(context, passedArguments);                                                          // 607
          }                                                                                                            // 608
          else if(found !== undefined) {                                                                               // 609
            response = found;                                                                                          // 610
          }                                                                                                            // 611
          if($.isArray(returnedValue)) {                                                                               // 612
            returnedValue.push(response);                                                                              // 613
          }                                                                                                            // 614
          else if(returnedValue !== undefined) {                                                                       // 615
            returnedValue = [returnedValue, response];                                                                 // 616
          }                                                                                                            // 617
          else if(response !== undefined) {                                                                            // 618
            returnedValue = response;                                                                                  // 619
          }                                                                                                            // 620
          return found;                                                                                                // 621
        }                                                                                                              // 622
      };                                                                                                               // 623
                                                                                                                       // 624
      if(methodInvoked) {                                                                                              // 625
        if(instance === undefined) {                                                                                   // 626
          module.initialize();                                                                                         // 627
        }                                                                                                              // 628
        module.invoke(query);                                                                                          // 629
      }                                                                                                                // 630
      else {                                                                                                           // 631
        if(instance !== undefined) {                                                                                   // 632
          module.destroy();                                                                                            // 633
        }                                                                                                              // 634
        module.initialize();                                                                                           // 635
      }                                                                                                                // 636
    })                                                                                                                 // 637
  ;                                                                                                                    // 638
                                                                                                                       // 639
  return (returnedValue !== undefined)                                                                                 // 640
    ? returnedValue                                                                                                    // 641
    : this                                                                                                             // 642
  ;                                                                                                                    // 643
};                                                                                                                     // 644
                                                                                                                       // 645
$.fn.modal.settings = {                                                                                                // 646
                                                                                                                       // 647
  name        : 'Modal',                                                                                               // 648
  namespace   : 'modal',                                                                                               // 649
                                                                                                                       // 650
  debug       : true,                                                                                                  // 651
  verbose     : true,                                                                                                  // 652
  performance : true,                                                                                                  // 653
                                                                                                                       // 654
  closable    : true,                                                                                                  // 655
  context     : 'body',                                                                                                // 656
  duration    : 500,                                                                                                   // 657
  easing      : 'easeOutExpo',                                                                                         // 658
  offset      : 0,                                                                                                     // 659
  transition  : 'scale',                                                                                               // 660
                                                                                                                       // 661
  onShow      : function(){},                                                                                          // 662
  onHide      : function(){},                                                                                          // 663
  onApprove   : function(){ return true; },                                                                            // 664
  onDeny      : function(){ return true; },                                                                            // 665
                                                                                                                       // 666
  selector    : {                                                                                                      // 667
    close    : '.close, .actions .button',                                                                             // 668
    approve  : '.actions .positive, .actions .approve',                                                                // 669
    deny     : '.actions .negative, .actions .cancel',                                                                 // 670
    modal    : '.ui.modal'                                                                                             // 671
  },                                                                                                                   // 672
  error : {                                                                                                            // 673
    dimmer    : 'UI Dimmer, a required component is not included in this page',                                        // 674
    method    : 'The method you called is not defined.'                                                                // 675
  },                                                                                                                   // 676
  className : {                                                                                                        // 677
    active    : 'active',                                                                                              // 678
    scrolling : 'scrolling'                                                                                            // 679
  }                                                                                                                    // 680
};                                                                                                                     // 681
                                                                                                                       // 682
                                                                                                                       // 683
})( jQuery, window , document );                                                                                       // 684
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}).call(this);






(function () {

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// packages/semantic-ui/lib/semantic-ui/build/uncompressed/modules/nag.js                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/*                                                                                                                     // 1
 * # Semantic - Nag                                                                                                    // 2
 * http://github.com/jlukic/semantic-ui/                                                                               // 3
 *                                                                                                                     // 4
 *                                                                                                                     // 5
 * Copyright 2013 Contributors                                                                                         // 6
 * Released under the MIT license                                                                                      // 7
 * http://opensource.org/licenses/MIT                                                                                  // 8
 *                                                                                                                     // 9
 */                                                                                                                    // 10
                                                                                                                       // 11
;(function ($, window, document, undefined) {                                                                          // 12
                                                                                                                       // 13
$.fn.nag = function(parameters) {                                                                                      // 14
  var                                                                                                                  // 15
    $allModules     = $(this),                                                                                         // 16
    moduleSelector  = $allModules.selector || '',                                                                      // 17
                                                                                                                       // 18
    time            = new Date().getTime(),                                                                            // 19
    performance     = [],                                                                                              // 20
                                                                                                                       // 21
    query           = arguments[0],                                                                                    // 22
    methodInvoked   = (typeof query == 'string'),                                                                      // 23
    queryArguments  = [].slice.call(arguments, 1),                                                                     // 24
    returnedValue                                                                                                      // 25
  ;                                                                                                                    // 26
  $(this)                                                                                                              // 27
    .each(function() {                                                                                                 // 28
      var                                                                                                              // 29
        settings        = $.extend(true, {}, $.fn.nag.settings, parameters),                                           // 30
                                                                                                                       // 31
        className       = settings.className,                                                                          // 32
        selector        = settings.selector,                                                                           // 33
        error           = settings.error,                                                                              // 34
        namespace       = settings.namespace,                                                                          // 35
                                                                                                                       // 36
        eventNamespace  = '.' + namespace,                                                                             // 37
        moduleNamespace = namespace + '-module',                                                                       // 38
                                                                                                                       // 39
        $module         = $(this),                                                                                     // 40
                                                                                                                       // 41
        $close          = $module.find(selector.close),                                                                // 42
        $context        = $(settings.context),                                                                         // 43
                                                                                                                       // 44
                                                                                                                       // 45
        element         = this,                                                                                        // 46
        instance        = $module.data(moduleNamespace),                                                               // 47
                                                                                                                       // 48
        moduleOffset,                                                                                                  // 49
        moduleHeight,                                                                                                  // 50
                                                                                                                       // 51
        contextWidth,                                                                                                  // 52
        contextHeight,                                                                                                 // 53
        contextOffset,                                                                                                 // 54
                                                                                                                       // 55
        yOffset,                                                                                                       // 56
        yPosition,                                                                                                     // 57
                                                                                                                       // 58
        timer,                                                                                                         // 59
        module,                                                                                                        // 60
                                                                                                                       // 61
        requestAnimationFrame = window.requestAnimationFrame                                                           // 62
          || window.mozRequestAnimationFrame                                                                           // 63
          || window.webkitRequestAnimationFrame                                                                        // 64
          || window.msRequestAnimationFrame                                                                            // 65
          || function(callback) { setTimeout(callback, 0); }                                                           // 66
      ;                                                                                                                // 67
      module = {                                                                                                       // 68
                                                                                                                       // 69
        initialize: function() {                                                                                       // 70
          module.verbose('Initializing element');                                                                      // 71
          // calculate module offset once                                                                              // 72
          moduleOffset  = $module.offset();                                                                            // 73
          moduleHeight  = $module.outerHeight();                                                                       // 74
          contextWidth  = $context.outerWidth();                                                                       // 75
          contextHeight = $context.outerHeight();                                                                      // 76
          contextOffset = $context.offset();                                                                           // 77
                                                                                                                       // 78
          $module                                                                                                      // 79
            .data(moduleNamespace, module)                                                                             // 80
          ;                                                                                                            // 81
          $close                                                                                                       // 82
            .on('click' + eventNamespace, module.dismiss)                                                              // 83
          ;                                                                                                            // 84
          // lets avoid javascript if we dont need to reposition                                                       // 85
          if(settings.context == window && settings.position == 'fixed') {                                             // 86
            $module                                                                                                    // 87
              .addClass(className.fixed)                                                                               // 88
            ;                                                                                                          // 89
          }                                                                                                            // 90
          if(settings.sticky) {                                                                                        // 91
            module.verbose('Adding scroll events');                                                                    // 92
            // retrigger on scroll for absolute                                                                        // 93
            if(settings.position == 'absolute') {                                                                      // 94
              $context                                                                                                 // 95
                .on('scroll' + eventNamespace, module.event.scroll)                                                    // 96
                .on('resize' + eventNamespace, module.event.scroll)                                                    // 97
              ;                                                                                                        // 98
            }                                                                                                          // 99
            // fixed is always relative to window                                                                      // 100
            else {                                                                                                     // 101
              $(window)                                                                                                // 102
                .on('scroll' + eventNamespace, module.event.scroll)                                                    // 103
                .on('resize' + eventNamespace, module.event.scroll)                                                    // 104
              ;                                                                                                        // 105
            }                                                                                                          // 106
            // fire once to position on init                                                                           // 107
            $.proxy(module.event.scroll, this)();                                                                      // 108
          }                                                                                                            // 109
                                                                                                                       // 110
          if(settings.displayTime > 0) {                                                                               // 111
            setTimeout(module.hide, settings.displayTime);                                                             // 112
          }                                                                                                            // 113
          if(module.should.show()) {                                                                                   // 114
            if( !$module.is(':visible') ) {                                                                            // 115
              module.show();                                                                                           // 116
            }                                                                                                          // 117
          }                                                                                                            // 118
          else {                                                                                                       // 119
            module.hide();                                                                                             // 120
          }                                                                                                            // 121
        },                                                                                                             // 122
                                                                                                                       // 123
        destroy: function() {                                                                                          // 124
          module.verbose('Destroying instance');                                                                       // 125
          $module                                                                                                      // 126
            .removeData(moduleNamespace)                                                                               // 127
            .off(eventNamespace)                                                                                       // 128
          ;                                                                                                            // 129
          if(settings.sticky) {                                                                                        // 130
            $context                                                                                                   // 131
              .off(eventNamespace)                                                                                     // 132
            ;                                                                                                          // 133
          }                                                                                                            // 134
        },                                                                                                             // 135
                                                                                                                       // 136
        refresh: function() {                                                                                          // 137
          module.debug('Refreshing cached calculations');                                                              // 138
          moduleOffset  = $module.offset();                                                                            // 139
          moduleHeight  = $module.outerHeight();                                                                       // 140
          contextWidth  = $context.outerWidth();                                                                       // 141
          contextHeight = $context.outerHeight();                                                                      // 142
          contextOffset = $context.offset();                                                                           // 143
        },                                                                                                             // 144
                                                                                                                       // 145
        show: function() {                                                                                             // 146
          module.debug('Showing nag', settings.animation.show);                                                        // 147
          if(settings.animation.show == 'fade') {                                                                      // 148
            $module                                                                                                    // 149
              .fadeIn(settings.duration, settings.easing)                                                              // 150
            ;                                                                                                          // 151
          }                                                                                                            // 152
          else {                                                                                                       // 153
            $module                                                                                                    // 154
              .slideDown(settings.duration, settings.easing)                                                           // 155
            ;                                                                                                          // 156
          }                                                                                                            // 157
        },                                                                                                             // 158
                                                                                                                       // 159
        hide: function() {                                                                                             // 160
          module.debug('Showing nag', settings.animation.hide);                                                        // 161
          if(settings.animation.show == 'fade') {                                                                      // 162
            $module                                                                                                    // 163
              .fadeIn(settings.duration, settings.easing)                                                              // 164
            ;                                                                                                          // 165
          }                                                                                                            // 166
          else {                                                                                                       // 167
            $module                                                                                                    // 168
              .slideUp(settings.duration, settings.easing)                                                             // 169
            ;                                                                                                          // 170
          }                                                                                                            // 171
        },                                                                                                             // 172
                                                                                                                       // 173
        onHide: function() {                                                                                           // 174
          module.debug('Removing nag', settings.animation.hide);                                                       // 175
          $module.remove();                                                                                            // 176
          if (settings.onHide) {                                                                                       // 177
            settings.onHide();                                                                                         // 178
          }                                                                                                            // 179
        },                                                                                                             // 180
                                                                                                                       // 181
        stick: function() {                                                                                            // 182
          module.refresh();                                                                                            // 183
                                                                                                                       // 184
          if(settings.position == 'fixed') {                                                                           // 185
            var                                                                                                        // 186
              windowScroll = $(window).prop('pageYOffset') || $(window).scrollTop(),                                   // 187
              fixedOffset = ( $module.hasClass(className.bottom) )                                                     // 188
                ? contextOffset.top + (contextHeight - moduleHeight) - windowScroll                                    // 189
                : contextOffset.top - windowScroll                                                                     // 190
            ;                                                                                                          // 191
            $module                                                                                                    // 192
              .css({                                                                                                   // 193
                position : 'fixed',                                                                                    // 194
                top      : fixedOffset,                                                                                // 195
                left     : contextOffset.left,                                                                         // 196
                width    : contextWidth - settings.scrollBarWidth                                                      // 197
              })                                                                                                       // 198
            ;                                                                                                          // 199
          }                                                                                                            // 200
          else {                                                                                                       // 201
            $module                                                                                                    // 202
              .css({                                                                                                   // 203
                top : yPosition                                                                                        // 204
              })                                                                                                       // 205
            ;                                                                                                          // 206
          }                                                                                                            // 207
        },                                                                                                             // 208
        unStick: function() {                                                                                          // 209
          $module                                                                                                      // 210
            .css({                                                                                                     // 211
              top : ''                                                                                                 // 212
            })                                                                                                         // 213
          ;                                                                                                            // 214
        },                                                                                                             // 215
        dismiss: function(event) {                                                                                     // 216
          if(settings.storageMethod) {                                                                                 // 217
            module.storage.set(settings.storedKey, settings.storedValue);                                              // 218
          }                                                                                                            // 219
          module.hide();                                                                                               // 220
          event.stopImmediatePropagation();                                                                            // 221
          event.preventDefault();                                                                                      // 222
        },                                                                                                             // 223
                                                                                                                       // 224
        should: {                                                                                                      // 225
          show: function() {                                                                                           // 226
            if(settings.persist) {                                                                                     // 227
              module.debug('Persistent nag is set, can show nag');                                                     // 228
              return true;                                                                                             // 229
            }                                                                                                          // 230
            if(module.storage.get(settings.storedKey) != settings.storedValue) {                                       // 231
              module.debug('Stored value is not set, can show nag', module.storage.get(settings.storedKey));           // 232
              return true;                                                                                             // 233
            }                                                                                                          // 234
            module.debug('Stored value is set, cannot show nag', module.storage.get(settings.storedKey));              // 235
            return false;                                                                                              // 236
          },                                                                                                           // 237
          stick: function() {                                                                                          // 238
            yOffset   = $context.prop('pageYOffset') || $context.scrollTop();                                          // 239
            yPosition = ( $module.hasClass(className.bottom) )                                                         // 240
              ? (contextHeight - $module.outerHeight() ) + yOffset                                                     // 241
              : yOffset                                                                                                // 242
            ;                                                                                                          // 243
            // absolute position calculated when y offset met                                                          // 244
            if(yPosition > moduleOffset.top) {                                                                         // 245
              return true;                                                                                             // 246
            }                                                                                                          // 247
            else if(settings.position == 'fixed') {                                                                    // 248
              return true;                                                                                             // 249
            }                                                                                                          // 250
            return false;                                                                                              // 251
          }                                                                                                            // 252
        },                                                                                                             // 253
                                                                                                                       // 254
        storage: {                                                                                                     // 255
                                                                                                                       // 256
          set: function(key, value) {                                                                                  // 257
            module.debug('Setting stored value', key, value, settings.storageMethod);                                  // 258
            if(settings.storageMethod == 'local' && window.store !== undefined) {                                      // 259
              window.store.set(key, value);                                                                            // 260
            }                                                                                                          // 261
            // store by cookie                                                                                         // 262
            else if($.cookie !== undefined) {                                                                          // 263
              $.cookie(key, value);                                                                                    // 264
            }                                                                                                          // 265
            else {                                                                                                     // 266
              module.error(error.noStorage);                                                                           // 267
            }                                                                                                          // 268
          },                                                                                                           // 269
          get: function(key) {                                                                                         // 270
            module.debug('Getting stored value', key, settings.storageMethod);                                         // 271
            if(settings.storageMethod == 'local' && window.store !== undefined) {                                      // 272
              return window.store.get(key);                                                                            // 273
            }                                                                                                          // 274
            // get by cookie                                                                                           // 275
            else if($.cookie !== undefined) {                                                                          // 276
              return $.cookie(key);                                                                                    // 277
            }                                                                                                          // 278
            else {                                                                                                     // 279
              module.error(error.noStorage);                                                                           // 280
            }                                                                                                          // 281
          }                                                                                                            // 282
                                                                                                                       // 283
        },                                                                                                             // 284
                                                                                                                       // 285
        event: {                                                                                                       // 286
          scroll: function() {                                                                                         // 287
            if(timer !== undefined) {                                                                                  // 288
              clearTimeout(timer);                                                                                     // 289
            }                                                                                                          // 290
            timer = setTimeout(function() {                                                                            // 291
              if(module.should.stick() ) {                                                                             // 292
                requestAnimationFrame(module.stick);                                                                   // 293
              }                                                                                                        // 294
              else {                                                                                                   // 295
                module.unStick();                                                                                      // 296
              }                                                                                                        // 297
            }, settings.lag);                                                                                          // 298
          }                                                                                                            // 299
        },                                                                                                             // 300
        setting: function(name, value) {                                                                               // 301
          if( $.isPlainObject(name) ) {                                                                                // 302
            $.extend(true, settings, name);                                                                            // 303
          }                                                                                                            // 304
          else if(value !== undefined) {                                                                               // 305
            settings[name] = value;                                                                                    // 306
          }                                                                                                            // 307
          else {                                                                                                       // 308
            return settings[name];                                                                                     // 309
          }                                                                                                            // 310
        },                                                                                                             // 311
        internal: function(name, value) {                                                                              // 312
          module.debug('Changing internal', name, value);                                                              // 313
          if(value !== undefined) {                                                                                    // 314
            if( $.isPlainObject(name) ) {                                                                              // 315
              $.extend(true, module, name);                                                                            // 316
            }                                                                                                          // 317
            else {                                                                                                     // 318
              module[name] = value;                                                                                    // 319
            }                                                                                                          // 320
          }                                                                                                            // 321
          else {                                                                                                       // 322
            return module[name];                                                                                       // 323
          }                                                                                                            // 324
        },                                                                                                             // 325
        debug: function() {                                                                                            // 326
          if(settings.debug) {                                                                                         // 327
            if(settings.performance) {                                                                                 // 328
              module.performance.log(arguments);                                                                       // 329
            }                                                                                                          // 330
            else {                                                                                                     // 331
              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');                 // 332
              module.debug.apply(console, arguments);                                                                  // 333
            }                                                                                                          // 334
          }                                                                                                            // 335
        },                                                                                                             // 336
        verbose: function() {                                                                                          // 337
          if(settings.verbose && settings.debug) {                                                                     // 338
            if(settings.performance) {                                                                                 // 339
              module.performance.log(arguments);                                                                       // 340
            }                                                                                                          // 341
            else {                                                                                                     // 342
              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');               // 343
              module.verbose.apply(console, arguments);                                                                // 344
            }                                                                                                          // 345
          }                                                                                                            // 346
        },                                                                                                             // 347
        error: function() {                                                                                            // 348
          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');                    // 349
          module.error.apply(console, arguments);                                                                      // 350
        },                                                                                                             // 351
        performance: {                                                                                                 // 352
          log: function(message) {                                                                                     // 353
            var                                                                                                        // 354
              currentTime,                                                                                             // 355
              executionTime,                                                                                           // 356
              previousTime                                                                                             // 357
            ;                                                                                                          // 358
            if(settings.performance) {                                                                                 // 359
              currentTime   = new Date().getTime();                                                                    // 360
              previousTime  = time || currentTime;                                                                     // 361
              executionTime = currentTime - previousTime;                                                              // 362
              time          = currentTime;                                                                             // 363
              performance.push({                                                                                       // 364
                'Element'        : element,                                                                            // 365
                'Name'           : message[0],                                                                         // 366
                'Arguments'      : [].slice.call(message, 1) || '',                                                    // 367
                'Execution Time' : executionTime                                                                       // 368
              });                                                                                                      // 369
            }                                                                                                          // 370
            clearTimeout(module.performance.timer);                                                                    // 371
            module.performance.timer = setTimeout(module.performance.display, 100);                                    // 372
          },                                                                                                           // 373
          display: function() {                                                                                        // 374
            var                                                                                                        // 375
              title = settings.name + ':',                                                                             // 376
              totalTime = 0                                                                                            // 377
            ;                                                                                                          // 378
            time = false;                                                                                              // 379
            clearTimeout(module.performance.timer);                                                                    // 380
            $.each(performance, function(index, data) {                                                                // 381
              totalTime += data['Execution Time'];                                                                     // 382
            });                                                                                                        // 383
            title += ' ' + totalTime + 'ms';                                                                           // 384
            if(moduleSelector) {                                                                                       // 385
              title += ' \'' + moduleSelector + '\'';                                                                  // 386
            }                                                                                                          // 387
            if($allModules.size() > 1) {                                                                               // 388
              title += ' ' + '(' + $allModules.size() + ')';                                                           // 389
            }                                                                                                          // 390
            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {              // 391
              console.groupCollapsed(title);                                                                           // 392
              if(console.table) {                                                                                      // 393
                console.table(performance);                                                                            // 394
              }                                                                                                        // 395
              else {                                                                                                   // 396
                $.each(performance, function(index, data) {                                                            // 397
                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');                                      // 398
                });                                                                                                    // 399
              }                                                                                                        // 400
              console.groupEnd();                                                                                      // 401
            }                                                                                                          // 402
            performance = [];                                                                                          // 403
          }                                                                                                            // 404
        },                                                                                                             // 405
        invoke: function(query, passedArguments, context) {                                                            // 406
          var                                                                                                          // 407
            maxDepth,                                                                                                  // 408
            found,                                                                                                     // 409
            response                                                                                                   // 410
          ;                                                                                                            // 411
          passedArguments = passedArguments || queryArguments;                                                         // 412
          context         = element         || context;                                                                // 413
          if(typeof query == 'string' && instance !== undefined) {                                                     // 414
            query    = query.split(/[\. ]/);                                                                           // 415
            maxDepth = query.length - 1;                                                                               // 416
            $.each(query, function(depth, value) {                                                                     // 417
              var camelCaseValue = (depth != maxDepth)                                                                 // 418
                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)                         // 419
                : query                                                                                                // 420
              ;                                                                                                        // 421
              if( $.isPlainObject( instance[camelCaseValue] ) && (depth != maxDepth) ) {                               // 422
                instance = instance[camelCaseValue];                                                                   // 423
              }                                                                                                        // 424
              else if( instance[camelCaseValue] !== undefined ) {                                                      // 425
                found = instance[camelCaseValue];                                                                      // 426
                return false;                                                                                          // 427
              }                                                                                                        // 428
              else if( $.isPlainObject( instance[value] ) && (depth != maxDepth) ) {                                   // 429
                instance = instance[value];                                                                            // 430
              }                                                                                                        // 431
              else if( instance[value] !== undefined ) {                                                               // 432
                found = instance[value];                                                                               // 433
                return false;                                                                                          // 434
              }                                                                                                        // 435
              else {                                                                                                   // 436
                module.error(error.method, query);                                                                     // 437
                return false;                                                                                          // 438
              }                                                                                                        // 439
            });                                                                                                        // 440
          }                                                                                                            // 441
          if ( $.isFunction( found ) ) {                                                                               // 442
            response = found.apply(context, passedArguments);                                                          // 443
          }                                                                                                            // 444
          else if(found !== undefined) {                                                                               // 445
            response = found;                                                                                          // 446
          }                                                                                                            // 447
          if($.isArray(returnedValue)) {                                                                               // 448
            returnedValue.push(response);                                                                              // 449
          }                                                                                                            // 450
          else if(returnedValue !== undefined) {                                                                       // 451
            returnedValue = [returnedValue, response];                                                                 // 452
          }                                                                                                            // 453
          else if(response !== undefined) {                                                                            // 454
            returnedValue = response;                                                                                  // 455
          }                                                                                                            // 456
          return found;                                                                                                // 457
        }                                                                                                              // 458
      };                                                                                                               // 459
      if(methodInvoked) {                                                                                              // 460
        if(instance === undefined) {                                                                                   // 461
          module.initialize();                                                                                         // 462
        }                                                                                                              // 463
        module.invoke(query);                                                                                          // 464
      }                                                                                                                // 465
      else {                                                                                                           // 466
        if(instance !== undefined) {                                                                                   // 467
          module.destroy();                                                                                            // 468
        }                                                                                                              // 469
        module.initialize();                                                                                           // 470
      }                                                                                                                // 471
                                                                                                                       // 472
    })                                                                                                                 // 473
  ;                                                                                                                    // 474
  return (returnedValue !== undefined)                                                                                 // 475
    ? returnedValue                                                                                                    // 476
    : this                                                                                                             // 477
  ;                                                                                                                    // 478
};                                                                                                                     // 479
                                                                                                                       // 480
$.fn.nag.settings = {                                                                                                  // 481
                                                                                                                       // 482
  name        : 'Nag',                                                                                                 // 483
                                                                                                                       // 484
  verbose     : true,                                                                                                  // 485
  debug       : true,                                                                                                  // 486
  performance : true,                                                                                                  // 487
                                                                                                                       // 488
  namespace   : 'Nag',                                                                                                 // 489
                                                                                                                       // 490
  // allows cookie to be overriden                                                                                     // 491
  persist     : false,                                                                                                 // 492
                                                                                                                       // 493
  // set to zero to manually dismiss, otherwise hides on its own                                                       // 494
  displayTime : 0,                                                                                                     // 495
                                                                                                                       // 496
  animation   : {                                                                                                      // 497
    show: 'slide',                                                                                                     // 498
    hide: 'slide'                                                                                                      // 499
  },                                                                                                                   // 500
                                                                                                                       // 501
  // method of stickyness                                                                                              // 502
  position       : 'fixed',                                                                                            // 503
  scrollBarWidth : 18,                                                                                                 // 504
                                                                                                                       // 505
  // type of storage to use                                                                                            // 506
  storageMethod  : 'cookie',                                                                                           // 507
                                                                                                                       // 508
  // value to store in dismissed localstorage/cookie                                                                   // 509
  storedKey      : 'nag',                                                                                              // 510
  storedValue    : 'dismiss',                                                                                          // 511
                                                                                                                       // 512
  // need to calculate stickyness on scroll                                                                            // 513
  sticky         : false,                                                                                              // 514
                                                                                                                       // 515
  // how often to check scroll event                                                                                   // 516
  lag            : 0,                                                                                                  // 517
                                                                                                                       // 518
  // context for scroll event                                                                                          // 519
  context        : window,                                                                                             // 520
                                                                                                                       // 521
  error: {                                                                                                             // 522
    noStorage  : 'Neither $.cookie or store is defined. A storage solution is required for storing state',             // 523
    method    : 'The method you called is not defined.'                                                                // 524
  },                                                                                                                   // 525
                                                                                                                       // 526
  className     : {                                                                                                    // 527
    bottom      : 'bottom',                                                                                            // 528
    fixed       : 'fixed'                                                                                              // 529
  },                                                                                                                   // 530
                                                                                                                       // 531
  selector      : {                                                                                                    // 532
    close: '.icon.close'                                                                                               // 533
  },                                                                                                                   // 534
                                                                                                                       // 535
  speed         : 500,                                                                                                 // 536
  easing        : 'easeOutQuad',                                                                                       // 537
                                                                                                                       // 538
  onHide: function() {}                                                                                                // 539
                                                                                                                       // 540
};                                                                                                                     // 541
                                                                                                                       // 542
})( jQuery, window , document );                                                                                       // 543
                                                                                                                       // 544
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}).call(this);






(function () {

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// packages/semantic-ui/lib/semantic-ui/build/uncompressed/modules/popup.js                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/*                                                                                                                     // 1
 * # Semantic - Popup                                                                                                  // 2
 * http://github.com/jlukic/semantic-ui/                                                                               // 3
 *                                                                                                                     // 4
 *                                                                                                                     // 5
 * Copyright 2013 Contributors                                                                                         // 6
 * Released under the MIT license                                                                                      // 7
 * http://opensource.org/licenses/MIT                                                                                  // 8
 *                                                                                                                     // 9
 */                                                                                                                    // 10
                                                                                                                       // 11
;(function ($, window, document, undefined) {                                                                          // 12
                                                                                                                       // 13
$.fn.popup = function(parameters) {                                                                                    // 14
  var                                                                                                                  // 15
    $allModules     = $(this),                                                                                         // 16
    $document       = $(document),                                                                                     // 17
                                                                                                                       // 18
    moduleSelector  = $allModules.selector || '',                                                                      // 19
                                                                                                                       // 20
    time            = new Date().getTime(),                                                                            // 21
    performance     = [],                                                                                              // 22
                                                                                                                       // 23
    query           = arguments[0],                                                                                    // 24
    methodInvoked   = (typeof query == 'string'),                                                                      // 25
    queryArguments  = [].slice.call(arguments, 1),                                                                     // 26
                                                                                                                       // 27
    returnedValue                                                                                                      // 28
  ;                                                                                                                    // 29
  $allModules                                                                                                          // 30
    .each(function() {                                                                                                 // 31
      var                                                                                                              // 32
        settings        = ( $.isPlainObject(parameters) )                                                              // 33
          ? $.extend(true, {}, $.fn.popup.settings, parameters)                                                        // 34
          : $.extend({}, $.fn.popup.settings),                                                                         // 35
                                                                                                                       // 36
        selector        = settings.selector,                                                                           // 37
        className       = settings.className,                                                                          // 38
        error           = settings.error,                                                                              // 39
        metadata        = settings.metadata,                                                                           // 40
        namespace       = settings.namespace,                                                                          // 41
                                                                                                                       // 42
        eventNamespace  = '.' + settings.namespace,                                                                    // 43
        moduleNamespace = 'module-' + namespace,                                                                       // 44
                                                                                                                       // 45
        $module         = $(this),                                                                                     // 46
        $context        = $(settings.context),                                                                         // 47
        $target         = (settings.target)                                                                            // 48
          ? $(settings.target)                                                                                         // 49
          : $module,                                                                                                   // 50
                                                                                                                       // 51
        $window         = $(window),                                                                                   // 52
                                                                                                                       // 53
        $offsetParent   = (settings.inline)                                                                            // 54
          ? $target.offsetParent()                                                                                     // 55
          : $window,                                                                                                   // 56
        $popup          = (settings.inline)                                                                            // 57
          ? $target.next(settings.selector.popup)                                                                      // 58
          : $window.children(settings.selector.popup).last(),                                                          // 59
                                                                                                                       // 60
        searchDepth     = 0,                                                                                           // 61
                                                                                                                       // 62
        element         = this,                                                                                        // 63
        instance        = $module.data(moduleNamespace),                                                               // 64
        module                                                                                                         // 65
      ;                                                                                                                // 66
                                                                                                                       // 67
      module = {                                                                                                       // 68
                                                                                                                       // 69
        // binds events                                                                                                // 70
        initialize: function() {                                                                                       // 71
          module.debug('Initializing module', $module);                                                                // 72
          if(settings.on == 'click') {                                                                                 // 73
            $module                                                                                                    // 74
              .on('click', module.toggle)                                                                              // 75
            ;                                                                                                          // 76
          }                                                                                                            // 77
          else {                                                                                                       // 78
            $module                                                                                                    // 79
              .on(module.get.startEvent() + eventNamespace, module.event.start)                                        // 80
              .on(module.get.endEvent() + eventNamespace, module.event.end)                                            // 81
            ;                                                                                                          // 82
          }                                                                                                            // 83
          if(settings.target) {                                                                                        // 84
            module.debug('Target set to element', $target);                                                            // 85
          }                                                                                                            // 86
          $window                                                                                                      // 87
            .on('resize' + eventNamespace, module.event.resize)                                                        // 88
          ;                                                                                                            // 89
          module.instantiate();                                                                                        // 90
        },                                                                                                             // 91
                                                                                                                       // 92
        instantiate: function() {                                                                                      // 93
          module.verbose('Storing instance of module', module);                                                        // 94
          instance = module;                                                                                           // 95
          $module                                                                                                      // 96
            .data(moduleNamespace, instance)                                                                           // 97
          ;                                                                                                            // 98
        },                                                                                                             // 99
                                                                                                                       // 100
        refresh: function() {                                                                                          // 101
          if(settings.inline) {                                                                                        // 102
            $popup = $target.next(selector.popup);                                                                     // 103
            $offsetParent = $target.offsetParent();                                                                    // 104
          }                                                                                                            // 105
          else {                                                                                                       // 106
            $popup = $window.children(selector.popup).last();                                                          // 107
          }                                                                                                            // 108
        },                                                                                                             // 109
                                                                                                                       // 110
        destroy: function() {                                                                                          // 111
          module.debug('Destroying previous module');                                                                  // 112
          $window                                                                                                      // 113
            .off(eventNamespace)                                                                                       // 114
          ;                                                                                                            // 115
          $popup                                                                                                       // 116
            .remove()                                                                                                  // 117
          ;                                                                                                            // 118
          $module                                                                                                      // 119
            .off(eventNamespace)                                                                                       // 120
            .removeData(moduleNamespace)                                                                               // 121
          ;                                                                                                            // 122
        },                                                                                                             // 123
                                                                                                                       // 124
        event: {                                                                                                       // 125
          start:  function(event) {                                                                                    // 126
            module.timer = setTimeout(function() {                                                                     // 127
              if( module.is.hidden() ) {                                                                               // 128
                module.show();                                                                                         // 129
              }                                                                                                        // 130
            }, settings.delay);                                                                                        // 131
          },                                                                                                           // 132
          end:  function() {                                                                                           // 133
            clearTimeout(module.timer);                                                                                // 134
            if( module.is.visible() ) {                                                                                // 135
              module.hide();                                                                                           // 136
            }                                                                                                          // 137
          },                                                                                                           // 138
          resize: function() {                                                                                         // 139
            if( module.is.visible() ) {                                                                                // 140
              module.set.position();                                                                                   // 141
            }                                                                                                          // 142
          }                                                                                                            // 143
        },                                                                                                             // 144
                                                                                                                       // 145
        // generates popup html from metadata                                                                          // 146
        create: function() {                                                                                           // 147
          module.debug('Creating pop-up html');                                                                        // 148
          var                                                                                                          // 149
            html      = $module.data(metadata.html)      || settings.html,                                             // 150
            variation = $module.data(metadata.variation) || settings.variation,                                        // 151
            title     = $module.data(metadata.title)     || settings.title,                                            // 152
            content   = $module.data(metadata.content)   || $module.attr('title') || settings.content                  // 153
          ;                                                                                                            // 154
          if(html || content || title) {                                                                               // 155
            if(!html) {                                                                                                // 156
              html = settings.template({                                                                               // 157
                title   : title,                                                                                       // 158
                content : content                                                                                      // 159
              });                                                                                                      // 160
            }                                                                                                          // 161
            $popup = $('<div/>')                                                                                       // 162
              .addClass(className.popup)                                                                               // 163
              .addClass(variation)                                                                                     // 164
              .html(html)                                                                                              // 165
            ;                                                                                                          // 166
            if(settings.inline) {                                                                                      // 167
              module.verbose('Inserting popup element inline', $popup);                                                // 168
              $popup                                                                                                   // 169
                .insertAfter($module)                                                                                  // 170
              ;                                                                                                        // 171
            }                                                                                                          // 172
            else {                                                                                                     // 173
              module.verbose('Appending popup element to body', $popup);                                               // 174
              $popup                                                                                                   // 175
                .appendTo( $context )                                                                                  // 176
              ;                                                                                                        // 177
            }                                                                                                          // 178
            $.proxy(settings.onCreate, $popup)();                                                                      // 179
          }                                                                                                            // 180
          else {                                                                                                       // 181
            module.error(error.content);                                                                               // 182
          }                                                                                                            // 183
        },                                                                                                             // 184
                                                                                                                       // 185
        // determines popup state                                                                                      // 186
        toggle: function() {                                                                                           // 187
          module.debug('Toggling pop-up');                                                                             // 188
          if( module.is.hidden() ) {                                                                                   // 189
            module.hideAll();                                                                                          // 190
            module.show();                                                                                             // 191
          }                                                                                                            // 192
          else {                                                                                                       // 193
            module.hide();                                                                                             // 194
          }                                                                                                            // 195
        },                                                                                                             // 196
                                                                                                                       // 197
        show: function(callback) {                                                                                     // 198
          callback = callback || function(){};                                                                         // 199
          module.debug('Showing pop-up', settings.transition);                                                         // 200
          if(!settings.preserve) {                                                                                     // 201
            module.refresh();                                                                                          // 202
          }                                                                                                            // 203
          if( !module.exists() ) {                                                                                     // 204
            module.create();                                                                                           // 205
          }                                                                                                            // 206
          module.set.position();                                                                                       // 207
          module.animate.show(callback);                                                                               // 208
        },                                                                                                             // 209
                                                                                                                       // 210
                                                                                                                       // 211
        hide: function(callback) {                                                                                     // 212
          callback = callback || function(){};                                                                         // 213
          $module                                                                                                      // 214
            .removeClass(className.visible)                                                                            // 215
          ;                                                                                                            // 216
          module.unbind.close();                                                                                       // 217
          if( module.is.visible() ) {                                                                                  // 218
            module.animate.hide(callback);                                                                             // 219
          }                                                                                                            // 220
        },                                                                                                             // 221
                                                                                                                       // 222
        hideAll: function() {                                                                                          // 223
          $(selector.popup)                                                                                            // 224
            .filter(':visible')                                                                                        // 225
              .popup('hide')                                                                                           // 226
          ;                                                                                                            // 227
        },                                                                                                             // 228
                                                                                                                       // 229
        hideGracefully: function(event) {                                                                              // 230
          // don't close on clicks inside popup                                                                        // 231
          if( $(event.target).closest(selector.popup).size() === 0) {                                                  // 232
            module.hide();                                                                                             // 233
          }                                                                                                            // 234
        },                                                                                                             // 235
                                                                                                                       // 236
        exists: function() {                                                                                           // 237
          if(settings.inline) {                                                                                        // 238
            return ( $popup.size() !== 0 );                                                                            // 239
          }                                                                                                            // 240
          else {                                                                                                       // 241
            return ( $popup.parent($context).size() );                                                                 // 242
          }                                                                                                            // 243
        },                                                                                                             // 244
                                                                                                                       // 245
        remove: function() {                                                                                           // 246
          module.debug('Removing popup');                                                                              // 247
          $popup                                                                                                       // 248
            .remove()                                                                                                  // 249
          ;                                                                                                            // 250
        },                                                                                                             // 251
                                                                                                                       // 252
        animate: {                                                                                                     // 253
          show: function(callback) {                                                                                   // 254
            callback = callback || function(){};                                                                       // 255
            $module                                                                                                    // 256
              .addClass(className.visible)                                                                             // 257
            ;                                                                                                          // 258
            if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {           // 259
              $popup                                                                                                   // 260
                .transition(settings.transition + ' in', settings.duration, function() {                               // 261
                  module.bind.close();                                                                                 // 262
                  $.proxy(callback, element)();                                                                        // 263
                })                                                                                                     // 264
              ;                                                                                                        // 265
            }                                                                                                          // 266
            else {                                                                                                     // 267
              $popup                                                                                                   // 268
                .stop()                                                                                                // 269
                .fadeIn(settings.duration, settings.easing, function() {                                               // 270
                  module.bind.close();                                                                                 // 271
                  $.proxy(callback, element)();                                                                        // 272
                })                                                                                                     // 273
              ;                                                                                                        // 274
            }                                                                                                          // 275
            $.proxy(settings.onShow, element)();                                                                       // 276
          },                                                                                                           // 277
          hide: function(callback) {                                                                                   // 278
            callback = callback || function(){};                                                                       // 279
            module.debug('Hiding pop-up');                                                                             // 280
            if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {           // 281
              $popup                                                                                                   // 282
                .transition(settings.transition + ' out', settings.duration, function() {                              // 283
                  module.reset();                                                                                      // 284
                  callback();                                                                                          // 285
                })                                                                                                     // 286
              ;                                                                                                        // 287
            }                                                                                                          // 288
            else {                                                                                                     // 289
              $popup                                                                                                   // 290
                .stop()                                                                                                // 291
                .fadeOut(settings.duration, settings.easing, function() {                                              // 292
                  module.reset();                                                                                      // 293
                  callback();                                                                                          // 294
                })                                                                                                     // 295
              ;                                                                                                        // 296
            }                                                                                                          // 297
            $.proxy(settings.onHide, element)();                                                                       // 298
          }                                                                                                            // 299
        },                                                                                                             // 300
                                                                                                                       // 301
        get: {                                                                                                         // 302
          startEvent: function() {                                                                                     // 303
            if(settings.on == 'hover') {                                                                               // 304
              return 'mouseenter';                                                                                     // 305
            }                                                                                                          // 306
            else if(settings.on == 'focus') {                                                                          // 307
              return 'focus';                                                                                          // 308
            }                                                                                                          // 309
          },                                                                                                           // 310
          endEvent: function() {                                                                                       // 311
            if(settings.on == 'hover') {                                                                               // 312
              return 'mouseleave';                                                                                     // 313
            }                                                                                                          // 314
            else if(settings.on == 'focus') {                                                                          // 315
              return 'blur';                                                                                           // 316
            }                                                                                                          // 317
          },                                                                                                           // 318
          offstagePosition: function() {                                                                               // 319
            var                                                                                                        // 320
              boundary  = {                                                                                            // 321
                top    : $(window).scrollTop(),                                                                        // 322
                bottom : $(window).scrollTop() + $(window).height(),                                                   // 323
                left   : 0,                                                                                            // 324
                right  : $(window).width()                                                                             // 325
              },                                                                                                       // 326
              popup     = {                                                                                            // 327
                width    : $popup.width(),                                                                             // 328
                height   : $popup.outerHeight(),                                                                       // 329
                position : $popup.offset()                                                                             // 330
              },                                                                                                       // 331
              offstage  = {},                                                                                          // 332
              offstagePositions = []                                                                                   // 333
            ;                                                                                                          // 334
            if(popup.position) {                                                                                       // 335
              offstage = {                                                                                             // 336
                top    : (popup.position.top < boundary.top),                                                          // 337
                bottom : (popup.position.top + popup.height > boundary.bottom),                                        // 338
                right  : (popup.position.left + popup.width > boundary.right),                                         // 339
                left   : (popup.position.left < boundary.left)                                                         // 340
              };                                                                                                       // 341
            }                                                                                                          // 342
            module.verbose('Checking if outside viewable area', popup.position);                                       // 343
            // return only boundaries that have been surpassed                                                         // 344
            $.each(offstage, function(direction, isOffstage) {                                                         // 345
              if(isOffstage) {                                                                                         // 346
                offstagePositions.push(direction);                                                                     // 347
              }                                                                                                        // 348
            });                                                                                                        // 349
            return (offstagePositions.length > 0)                                                                      // 350
              ? offstagePositions.join(' ')                                                                            // 351
              : false                                                                                                  // 352
            ;                                                                                                          // 353
          },                                                                                                           // 354
          nextPosition: function(position) {                                                                           // 355
            switch(position) {                                                                                         // 356
              case 'top left':                                                                                         // 357
                position = 'bottom left';                                                                              // 358
              break;                                                                                                   // 359
              case 'bottom left':                                                                                      // 360
                position = 'top right';                                                                                // 361
              break;                                                                                                   // 362
              case 'top right':                                                                                        // 363
                position = 'bottom right';                                                                             // 364
              break;                                                                                                   // 365
              case 'bottom right':                                                                                     // 366
                position = 'top center';                                                                               // 367
              break;                                                                                                   // 368
              case 'top center':                                                                                       // 369
                position = 'bottom center';                                                                            // 370
              break;                                                                                                   // 371
              case 'bottom center':                                                                                    // 372
                position = 'right center';                                                                             // 373
              break;                                                                                                   // 374
              case 'right center':                                                                                     // 375
                position = 'left center';                                                                              // 376
              break;                                                                                                   // 377
              case 'left center':                                                                                      // 378
                position = 'top center';                                                                               // 379
              break;                                                                                                   // 380
            }                                                                                                          // 381
            return position;                                                                                           // 382
          }                                                                                                            // 383
        },                                                                                                             // 384
                                                                                                                       // 385
        set: {                                                                                                         // 386
          position: function(position, arrowOffset) {                                                                  // 387
            var                                                                                                        // 388
              windowWidth  = $(window).width(),                                                                        // 389
              windowHeight = $(window).height(),                                                                       // 390
                                                                                                                       // 391
              width        = $target.outerWidth(),                                                                     // 392
              height       = $target.outerHeight(),                                                                    // 393
                                                                                                                       // 394
              popupWidth   = $popup.width(),                                                                           // 395
              popupHeight  = $popup.outerHeight(),                                                                     // 396
                                                                                                                       // 397
              parentWidth  = $offsetParent.outerWidth(),                                                               // 398
              parentHeight = $offsetParent.outerHeight(),                                                              // 399
                                                                                                                       // 400
              distanceAway = settings.distanceAway,                                                                    // 401
                                                                                                                       // 402
              offset       = (settings.inline)                                                                         // 403
                ? $target.position()                                                                                   // 404
                : $target.offset(),                                                                                    // 405
                                                                                                                       // 406
              positioning,                                                                                             // 407
              offstagePosition                                                                                         // 408
            ;                                                                                                          // 409
            position    = position    || $module.data(metadata.position)    || settings.position;                      // 410
            arrowOffset = arrowOffset || $module.data(metadata.offset)      || settings.offset;                        // 411
            // adjust for margin when inline                                                                           // 412
            if(settings.inline) {                                                                                      // 413
              if(position == 'left center' || position == 'right center') {                                            // 414
                arrowOffset  += parseInt( window.getComputedStyle(element).getPropertyValue('margin-top'), 10);        // 415
                distanceAway += -parseInt( window.getComputedStyle(element).getPropertyValue('margin-left'), 10);      // 416
              }                                                                                                        // 417
              else {                                                                                                   // 418
                arrowOffset  += parseInt( window.getComputedStyle(element).getPropertyValue('margin-left'), 10);       // 419
                distanceAway += parseInt( window.getComputedStyle(element).getPropertyValue('margin-top'), 10);        // 420
              }                                                                                                        // 421
            }                                                                                                          // 422
            module.debug('Calculating offset for position', position);                                                 // 423
            switch(position) {                                                                                         // 424
              case 'top left':                                                                                         // 425
                positioning = {                                                                                        // 426
                  bottom :  parentHeight - offset.top + distanceAway,                                                  // 427
                  right  :  parentWidth - offset.left - arrowOffset,                                                   // 428
                  top    : 'auto',                                                                                     // 429
                  left   : 'auto'                                                                                      // 430
                };                                                                                                     // 431
              break;                                                                                                   // 432
              case 'top center':                                                                                       // 433
                positioning = {                                                                                        // 434
                  bottom :  parentHeight - offset.top + distanceAway,                                                  // 435
                  left   : offset.left + (width / 2) - (popupWidth / 2) + arrowOffset,                                 // 436
                  top    : 'auto',                                                                                     // 437
                  right  : 'auto'                                                                                      // 438
                };                                                                                                     // 439
              break;                                                                                                   // 440
              case 'top right':                                                                                        // 441
                positioning = {                                                                                        // 442
                  top    : 'auto',                                                                                     // 443
                  bottom :  parentHeight - offset.top + distanceAway,                                                  // 444
                  left   : offset.left + width + arrowOffset,                                                          // 445
                  right  : 'auto'                                                                                      // 446
                };                                                                                                     // 447
              break;                                                                                                   // 448
              case 'left center':                                                                                      // 449
                positioning = {                                                                                        // 450
                  top    :  offset.top + (height / 2) - (popupHeight / 2) + arrowOffset,                               // 451
                  right  : parentWidth - offset.left + distanceAway,                                                   // 452
                  left   : 'auto',                                                                                     // 453
                  bottom : 'auto'                                                                                      // 454
                };                                                                                                     // 455
              break;                                                                                                   // 456
              case 'right center':                                                                                     // 457
                positioning = {                                                                                        // 458
                  top    :  offset.top + (height / 2) - (popupHeight / 2) + arrowOffset,                               // 459
                  left   : offset.left + width + distanceAway,                                                         // 460
                  bottom : 'auto',                                                                                     // 461
                  right  : 'auto'                                                                                      // 462
                };                                                                                                     // 463
              break;                                                                                                   // 464
              case 'bottom left':                                                                                      // 465
                positioning = {                                                                                        // 466
                  top    :  offset.top + height + distanceAway,                                                        // 467
                  right  : parentWidth - offset.left - arrowOffset,                                                    // 468
                  left   : 'auto',                                                                                     // 469
                  bottom : 'auto'                                                                                      // 470
                };                                                                                                     // 471
              break;                                                                                                   // 472
              case 'bottom center':                                                                                    // 473
                positioning = {                                                                                        // 474
                  top    :  offset.top + height + distanceAway,                                                        // 475
                  left   : offset.left + (width / 2) - (popupWidth / 2) + arrowOffset,                                 // 476
                  bottom : 'auto',                                                                                     // 477
                  right  : 'auto'                                                                                      // 478
                };                                                                                                     // 479
              break;                                                                                                   // 480
              case 'bottom right':                                                                                     // 481
                positioning = {                                                                                        // 482
                  top    :  offset.top + height + distanceAway,                                                        // 483
                  left   : offset.left + width + arrowOffset,                                                          // 484
                  bottom : 'auto',                                                                                     // 485
                  right  : 'auto'                                                                                      // 486
                };                                                                                                     // 487
              break;                                                                                                   // 488
            }                                                                                                          // 489
            // tentatively place on stage                                                                              // 490
            $popup                                                                                                     // 491
              .css(positioning)                                                                                        // 492
              .removeClass(className.position)                                                                         // 493
              .addClass(position)                                                                                      // 494
              .addClass(className.loading)                                                                             // 495
            ;                                                                                                          // 496
            // check if is offstage                                                                                    // 497
            offstagePosition = module.get.offstagePosition();                                                          // 498
                                                                                                                       // 499
            // recursively find new positioning                                                                        // 500
            if(offstagePosition) {                                                                                     // 501
              module.debug('Element is outside boundaries', offstagePosition);                                         // 502
              if(searchDepth < settings.maxSearchDepth) {                                                              // 503
                position = module.get.nextPosition(position);                                                          // 504
                searchDepth++;                                                                                         // 505
                module.debug('Trying new position', position);                                                         // 506
                return module.set.position(position);                                                                  // 507
              }                                                                                                        // 508
              else {                                                                                                   // 509
                module.error(error.recursion);                                                                         // 510
                searchDepth = 0;                                                                                       // 511
                module.reset();                                                                                        // 512
                return false;                                                                                          // 513
              }                                                                                                        // 514
            }                                                                                                          // 515
            else {                                                                                                     // 516
              module.debug('Position is on stage', position);                                                          // 517
              searchDepth = 0;                                                                                         // 518
              return true;                                                                                             // 519
            }                                                                                                          // 520
                                                                                                                       // 521
            $module.removeClass(className.loading);                                                                    // 522
          }                                                                                                            // 523
                                                                                                                       // 524
        },                                                                                                             // 525
                                                                                                                       // 526
        bind: {                                                                                                        // 527
          close:function() {                                                                                           // 528
            if(settings.on == 'click' && settings.closable) {                                                          // 529
              module.verbose('Binding popup close event to document');                                                 // 530
              $document                                                                                                // 531
                .on('click' + eventNamespace, module.hideGracefully)                                                   // 532
              ;                                                                                                        // 533
            }                                                                                                          // 534
          }                                                                                                            // 535
        },                                                                                                             // 536
                                                                                                                       // 537
        unbind: {                                                                                                      // 538
          close: function() {                                                                                          // 539
            if(settings.on == 'click' && settings.closable) {                                                          // 540
              module.verbose('Removing close event from document');                                                    // 541
              $document                                                                                                // 542
                .off('click' + eventNamespace)                                                                         // 543
              ;                                                                                                        // 544
            }                                                                                                          // 545
          }                                                                                                            // 546
        },                                                                                                             // 547
                                                                                                                       // 548
        is: {                                                                                                          // 549
          visible: function() {                                                                                        // 550
            return $popup.is(':visible');                                                                              // 551
          },                                                                                                           // 552
          hidden: function() {                                                                                         // 553
            return !module.is.visible();                                                                               // 554
          }                                                                                                            // 555
        },                                                                                                             // 556
                                                                                                                       // 557
        reset: function() {                                                                                            // 558
          $popup                                                                                                       // 559
            .attr('style', '')                                                                                         // 560
            .removeAttr('style')                                                                                       // 561
          ;                                                                                                            // 562
          if(!settings.preserve) {                                                                                     // 563
            module.remove();                                                                                           // 564
          }                                                                                                            // 565
        },                                                                                                             // 566
                                                                                                                       // 567
        setting: function(name, value) {                                                                               // 568
          if( $.isPlainObject(name) ) {                                                                                // 569
            $.extend(true, settings, name);                                                                            // 570
          }                                                                                                            // 571
          else if(value !== undefined) {                                                                               // 572
            settings[name] = value;                                                                                    // 573
          }                                                                                                            // 574
          else {                                                                                                       // 575
            return settings[name];                                                                                     // 576
          }                                                                                                            // 577
        },                                                                                                             // 578
        internal: function(name, value) {                                                                              // 579
          if( $.isPlainObject(name) ) {                                                                                // 580
            $.extend(true, module, name);                                                                              // 581
          }                                                                                                            // 582
          else if(value !== undefined) {                                                                               // 583
            module[name] = value;                                                                                      // 584
          }                                                                                                            // 585
          else {                                                                                                       // 586
            return module[name];                                                                                       // 587
          }                                                                                                            // 588
        },                                                                                                             // 589
        debug: function() {                                                                                            // 590
          if(settings.debug) {                                                                                         // 591
            if(settings.performance) {                                                                                 // 592
              module.performance.log(arguments);                                                                       // 593
            }                                                                                                          // 594
            else {                                                                                                     // 595
              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');                 // 596
              module.debug.apply(console, arguments);                                                                  // 597
            }                                                                                                          // 598
          }                                                                                                            // 599
        },                                                                                                             // 600
        verbose: function() {                                                                                          // 601
          if(settings.verbose && settings.debug) {                                                                     // 602
            if(settings.performance) {                                                                                 // 603
              module.performance.log(arguments);                                                                       // 604
            }                                                                                                          // 605
            else {                                                                                                     // 606
              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');               // 607
              module.verbose.apply(console, arguments);                                                                // 608
            }                                                                                                          // 609
          }                                                                                                            // 610
        },                                                                                                             // 611
        error: function() {                                                                                            // 612
          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');                    // 613
          module.error.apply(console, arguments);                                                                      // 614
        },                                                                                                             // 615
        performance: {                                                                                                 // 616
          log: function(message) {                                                                                     // 617
            var                                                                                                        // 618
              currentTime,                                                                                             // 619
              executionTime,                                                                                           // 620
              previousTime                                                                                             // 621
            ;                                                                                                          // 622
            if(settings.performance) {                                                                                 // 623
              currentTime   = new Date().getTime();                                                                    // 624
              previousTime  = time || currentTime;                                                                     // 625
              executionTime = currentTime - previousTime;                                                              // 626
              time          = currentTime;                                                                             // 627
              performance.push({                                                                                       // 628
                'Element'        : element,                                                                            // 629
                'Name'           : message[0],                                                                         // 630
                'Arguments'      : [].slice.call(message, 1) || '',                                                    // 631
                'Execution Time' : executionTime                                                                       // 632
              });                                                                                                      // 633
            }                                                                                                          // 634
            clearTimeout(module.performance.timer);                                                                    // 635
            module.performance.timer = setTimeout(module.performance.display, 100);                                    // 636
          },                                                                                                           // 637
          display: function() {                                                                                        // 638
            var                                                                                                        // 639
              title = settings.name + ':',                                                                             // 640
              totalTime = 0                                                                                            // 641
            ;                                                                                                          // 642
            time = false;                                                                                              // 643
            clearTimeout(module.performance.timer);                                                                    // 644
            $.each(performance, function(index, data) {                                                                // 645
              totalTime += data['Execution Time'];                                                                     // 646
            });                                                                                                        // 647
            title += ' ' + totalTime + 'ms';                                                                           // 648
            if(moduleSelector) {                                                                                       // 649
              title += ' \'' + moduleSelector + '\'';                                                                  // 650
            }                                                                                                          // 651
            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {              // 652
              console.groupCollapsed(title);                                                                           // 653
              if(console.table) {                                                                                      // 654
                console.table(performance);                                                                            // 655
              }                                                                                                        // 656
              else {                                                                                                   // 657
                $.each(performance, function(index, data) {                                                            // 658
                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');                                      // 659
                });                                                                                                    // 660
              }                                                                                                        // 661
              console.groupEnd();                                                                                      // 662
            }                                                                                                          // 663
            performance = [];                                                                                          // 664
          }                                                                                                            // 665
        },                                                                                                             // 666
        invoke: function(query, passedArguments, context) {                                                            // 667
          var                                                                                                          // 668
            maxDepth,                                                                                                  // 669
            found,                                                                                                     // 670
            response                                                                                                   // 671
          ;                                                                                                            // 672
          passedArguments = passedArguments || queryArguments;                                                         // 673
          context         = element         || context;                                                                // 674
          if(typeof query == 'string' && instance !== undefined) {                                                     // 675
            query    = query.split(/[\. ]/);                                                                           // 676
            maxDepth = query.length - 1;                                                                               // 677
            $.each(query, function(depth, value) {                                                                     // 678
              var camelCaseValue = (depth != maxDepth)                                                                 // 679
                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)                         // 680
                : query                                                                                                // 681
              ;                                                                                                        // 682
              if( $.isPlainObject( instance[value] ) && (depth != maxDepth) ) {                                        // 683
                instance = instance[value];                                                                            // 684
              }                                                                                                        // 685
              else if( $.isPlainObject( instance[camelCaseValue] ) && (depth != maxDepth) ) {                          // 686
                instance = instance[camelCaseValue];                                                                   // 687
              }                                                                                                        // 688
              else if( instance[value] !== undefined ) {                                                               // 689
                found = instance[value];                                                                               // 690
                return false;                                                                                          // 691
              }                                                                                                        // 692
              else if( instance[camelCaseValue] !== undefined ) {                                                      // 693
                found = instance[camelCaseValue];                                                                      // 694
                return false;                                                                                          // 695
              }                                                                                                        // 696
              else {                                                                                                   // 697
                module.error(error.method, query);                                                                     // 698
                return false;                                                                                          // 699
              }                                                                                                        // 700
            });                                                                                                        // 701
          }                                                                                                            // 702
          if ( $.isFunction( found ) ) {                                                                               // 703
            response = found.apply(context, passedArguments);                                                          // 704
          }                                                                                                            // 705
          else if(found !== undefined) {                                                                               // 706
            response = found;                                                                                          // 707
          }                                                                                                            // 708
          if($.isArray(returnedValue)) {                                                                               // 709
            returnedValue.push(response);                                                                              // 710
          }                                                                                                            // 711
          else if(returnedValue !== undefined) {                                                                       // 712
            returnedValue = [returnedValue, response];                                                                 // 713
          }                                                                                                            // 714
          else if(response !== undefined) {                                                                            // 715
            returnedValue = response;                                                                                  // 716
          }                                                                                                            // 717
          return found;                                                                                                // 718
        }                                                                                                              // 719
      };                                                                                                               // 720
                                                                                                                       // 721
      if(methodInvoked) {                                                                                              // 722
        if(instance === undefined) {                                                                                   // 723
          module.initialize();                                                                                         // 724
        }                                                                                                              // 725
        module.invoke(query);                                                                                          // 726
      }                                                                                                                // 727
      else {                                                                                                           // 728
        if(instance !== undefined) {                                                                                   // 729
          module.destroy();                                                                                            // 730
        }                                                                                                              // 731
        module.initialize();                                                                                           // 732
      }                                                                                                                // 733
    })                                                                                                                 // 734
  ;                                                                                                                    // 735
                                                                                                                       // 736
  return (returnedValue !== undefined)                                                                                 // 737
    ? returnedValue                                                                                                    // 738
    : this                                                                                                             // 739
  ;                                                                                                                    // 740
};                                                                                                                     // 741
                                                                                                                       // 742
$.fn.popup.settings = {                                                                                                // 743
                                                                                                                       // 744
  name           : 'Popup',                                                                                            // 745
  debug          : true,                                                                                               // 746
  verbose        : true,                                                                                               // 747
  performance    : true,                                                                                               // 748
  namespace      : 'popup',                                                                                            // 749
                                                                                                                       // 750
  onCreate       : function(){},                                                                                       // 751
  onShow         : function(){},                                                                                       // 752
  onHide         : function(){},                                                                                       // 753
                                                                                                                       // 754
  variation      : '',                                                                                                 // 755
  content        : false,                                                                                              // 756
  html           : false,                                                                                              // 757
  title          : false,                                                                                              // 758
                                                                                                                       // 759
  on             : 'hover',                                                                                            // 760
  target         : false,                                                                                              // 761
  closable       : true,                                                                                               // 762
                                                                                                                       // 763
  context        : 'body',                                                                                             // 764
  position       : 'top center',                                                                                       // 765
  delay          : 150,                                                                                                // 766
  inline         : false,                                                                                              // 767
  preserve       : false,                                                                                              // 768
                                                                                                                       // 769
  duration       : 250,                                                                                                // 770
  easing         : 'easeOutQuint',                                                                                     // 771
  transition     : 'scale',                                                                                            // 772
                                                                                                                       // 773
  distanceAway   : 0,                                                                                                  // 774
  offset         : 0,                                                                                                  // 775
  maxSearchDepth : 10,                                                                                                 // 776
                                                                                                                       // 777
  error: {                                                                                                             // 778
    content   : 'Your popup has no content specified',                                                                 // 779
    method    : 'The method you called is not defined.',                                                               // 780
    recursion : 'Popup attempted to reposition element to fit, but could not find an adequate position.'               // 781
  },                                                                                                                   // 782
                                                                                                                       // 783
  metadata: {                                                                                                          // 784
    content   : 'content',                                                                                             // 785
    html      : 'html',                                                                                                // 786
    offset    : 'offset',                                                                                              // 787
    position  : 'position',                                                                                            // 788
    title     : 'title',                                                                                               // 789
    variation : 'variation'                                                                                            // 790
  },                                                                                                                   // 791
                                                                                                                       // 792
  className   : {                                                                                                      // 793
    loading     : 'loading',                                                                                           // 794
    popup       : 'ui popup',                                                                                          // 795
    position    : 'top left center bottom right',                                                                      // 796
    visible     : 'visible'                                                                                            // 797
  },                                                                                                                   // 798
                                                                                                                       // 799
  selector    : {                                                                                                      // 800
    popup    : '.ui.popup'                                                                                             // 801
  },                                                                                                                   // 802
                                                                                                                       // 803
  template: function(text) {                                                                                           // 804
    var html = '';                                                                                                     // 805
    if(typeof text !== undefined) {                                                                                    // 806
      if(typeof text.title !== undefined && text.title) {                                                              // 807
        html += '<div class="header">' + text.title + '</div class="header">';                                         // 808
      }                                                                                                                // 809
      if(typeof text.content !== undefined && text.content) {                                                          // 810
        html += '<div class="content">' + text.content + '</div>';                                                     // 811
      }                                                                                                                // 812
    }                                                                                                                  // 813
    return html;                                                                                                       // 814
  }                                                                                                                    // 815
                                                                                                                       // 816
};                                                                                                                     // 817
                                                                                                                       // 818
})( jQuery, window , document );                                                                                       // 819
                                                                                                                       // 820
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}).call(this);






(function () {

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// packages/semantic-ui/lib/semantic-ui/build/uncompressed/modules/rating.js                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/*                                                                                                                     // 1
 * # Semantic - Rating                                                                                                 // 2
 * http://github.com/jlukic/semantic-ui/                                                                               // 3
 *                                                                                                                     // 4
 *                                                                                                                     // 5
 * Copyright 2013 Contributors                                                                                         // 6
 * Released under the MIT license                                                                                      // 7
 * http://opensource.org/licenses/MIT                                                                                  // 8
 *                                                                                                                     // 9
 */                                                                                                                    // 10
                                                                                                                       // 11
;(function ($, window, document, undefined) {                                                                          // 12
                                                                                                                       // 13
$.fn.rating = function(parameters) {                                                                                   // 14
  var                                                                                                                  // 15
    $allModules     = $(this),                                                                                         // 16
    moduleSelector  = $allModules.selector || '',                                                                      // 17
                                                                                                                       // 18
    time            = new Date().getTime(),                                                                            // 19
    performance     = [],                                                                                              // 20
                                                                                                                       // 21
    query           = arguments[0],                                                                                    // 22
    methodInvoked   = (typeof query == 'string'),                                                                      // 23
    queryArguments  = [].slice.call(arguments, 1),                                                                     // 24
    returnedValue                                                                                                      // 25
  ;                                                                                                                    // 26
  $allModules                                                                                                          // 27
    .each(function() {                                                                                                 // 28
      var                                                                                                              // 29
        settings        = ( $.isPlainObject(parameters) )                                                              // 30
          ? $.extend(true, {}, $.fn.rating.settings, parameters)                                                       // 31
          : $.extend({}, $.fn.rating.settings),                                                                        // 32
                                                                                                                       // 33
        namespace       = settings.namespace,                                                                          // 34
        className       = settings.className,                                                                          // 35
        metadata        = settings.metadata,                                                                           // 36
        selector        = settings.selector,                                                                           // 37
        error           = settings.error,                                                                              // 38
                                                                                                                       // 39
        eventNamespace  = '.' + namespace,                                                                             // 40
        moduleNamespace = 'module-' + namespace,                                                                       // 41
                                                                                                                       // 42
        element         = this,                                                                                        // 43
        instance        = $(this).data(moduleNamespace),                                                               // 44
                                                                                                                       // 45
        $module         = $(this),                                                                                     // 46
        $icon           = $module.find(selector.icon),                                                                 // 47
                                                                                                                       // 48
        module                                                                                                         // 49
      ;                                                                                                                // 50
                                                                                                                       // 51
      module = {                                                                                                       // 52
                                                                                                                       // 53
        initialize: function() {                                                                                       // 54
          module.verbose('Initializing rating module', settings);                                                      // 55
                                                                                                                       // 56
          if(settings.interactive) {                                                                                   // 57
            module.enable();                                                                                           // 58
          }                                                                                                            // 59
          else {                                                                                                       // 60
            module.disable();                                                                                          // 61
          }                                                                                                            // 62
                                                                                                                       // 63
          if(settings.initialRating) {                                                                                 // 64
            module.debug('Setting initial rating');                                                                    // 65
            module.setRating(settings.initialRating);                                                                  // 66
          }                                                                                                            // 67
          if( $module.data(metadata.rating) ) {                                                                        // 68
            module.debug('Rating found in metadata');                                                                  // 69
            module.setRating( $module.data(metadata.rating) );                                                         // 70
          }                                                                                                            // 71
          module.instantiate();                                                                                        // 72
        },                                                                                                             // 73
                                                                                                                       // 74
        instantiate: function() {                                                                                      // 75
          module.verbose('Instantiating module', settings);                                                            // 76
          instance = module;                                                                                           // 77
          $module                                                                                                      // 78
            .data(moduleNamespace, module)                                                                             // 79
          ;                                                                                                            // 80
        },                                                                                                             // 81
                                                                                                                       // 82
        destroy: function() {                                                                                          // 83
          module.verbose('Destroying previous instance', instance);                                                    // 84
          $module                                                                                                      // 85
            .removeData(moduleNamespace)                                                                               // 86
          ;                                                                                                            // 87
          $icon                                                                                                        // 88
            .off(eventNamespace)                                                                                       // 89
          ;                                                                                                            // 90
        },                                                                                                             // 91
                                                                                                                       // 92
        event: {                                                                                                       // 93
          mouseenter: function() {                                                                                     // 94
            var                                                                                                        // 95
              $activeIcon = $(this)                                                                                    // 96
            ;                                                                                                          // 97
            $activeIcon                                                                                                // 98
              .nextAll()                                                                                               // 99
                .removeClass(className.hover)                                                                          // 100
            ;                                                                                                          // 101
            $module                                                                                                    // 102
              .addClass(className.hover)                                                                               // 103
            ;                                                                                                          // 104
            $activeIcon                                                                                                // 105
              .addClass(className.hover)                                                                               // 106
                .prevAll()                                                                                             // 107
                .addClass(className.hover)                                                                             // 108
            ;                                                                                                          // 109
          },                                                                                                           // 110
          mouseleave: function() {                                                                                     // 111
            $module                                                                                                    // 112
              .removeClass(className.hover)                                                                            // 113
            ;                                                                                                          // 114
            $icon                                                                                                      // 115
              .removeClass(className.hover)                                                                            // 116
            ;                                                                                                          // 117
          },                                                                                                           // 118
          click: function() {                                                                                          // 119
            var                                                                                                        // 120
              $activeIcon   = $(this),                                                                                 // 121
              currentRating = module.getRating(),                                                                      // 122
              rating        = $icon.index($activeIcon) + 1                                                             // 123
            ;                                                                                                          // 124
            if(settings.clearable && currentRating == rating) {                                                        // 125
              module.clearRating();                                                                                    // 126
            }                                                                                                          // 127
            else {                                                                                                     // 128
              module.setRating( rating );                                                                              // 129
            }                                                                                                          // 130
          }                                                                                                            // 131
        },                                                                                                             // 132
                                                                                                                       // 133
        clearRating: function() {                                                                                      // 134
          module.debug('Clearing current rating');                                                                     // 135
          module.setRating(0);                                                                                         // 136
        },                                                                                                             // 137
                                                                                                                       // 138
        getRating: function() {                                                                                        // 139
          var                                                                                                          // 140
            currentRating = $icon.filter('.' + className.active).size()                                                // 141
          ;                                                                                                            // 142
          module.verbose('Current rating retrieved', currentRating);                                                   // 143
          return currentRating;                                                                                        // 144
        },                                                                                                             // 145
                                                                                                                       // 146
        enable: function() {                                                                                           // 147
          module.debug('Setting rating to interactive mode');                                                          // 148
          $icon                                                                                                        // 149
            .on('mouseenter' + eventNamespace, module.event.mouseenter)                                                // 150
            .on('mouseleave' + eventNamespace, module.event.mouseleave)                                                // 151
            .on('click' + eventNamespace, module.event.click)                                                          // 152
          ;                                                                                                            // 153
          $module                                                                                                      // 154
            .removeClass(className.disabled)                                                                           // 155
          ;                                                                                                            // 156
        },                                                                                                             // 157
                                                                                                                       // 158
        disable: function() {                                                                                          // 159
          module.debug('Setting rating to read-only mode');                                                            // 160
          $icon                                                                                                        // 161
            .off(eventNamespace)                                                                                       // 162
          ;                                                                                                            // 163
          $module                                                                                                      // 164
            .addClass(className.disabled)                                                                              // 165
          ;                                                                                                            // 166
        },                                                                                                             // 167
                                                                                                                       // 168
        setRating: function(rating) {                                                                                  // 169
          var                                                                                                          // 170
            ratingIndex = (rating - 1 >= 0)                                                                            // 171
              ? (rating - 1)                                                                                           // 172
              : 0,                                                                                                     // 173
            $activeIcon = $icon.eq(ratingIndex)                                                                        // 174
          ;                                                                                                            // 175
          $module                                                                                                      // 176
            .removeClass(className.hover)                                                                              // 177
          ;                                                                                                            // 178
          $icon                                                                                                        // 179
            .removeClass(className.hover)                                                                              // 180
            .removeClass(className.active)                                                                             // 181
          ;                                                                                                            // 182
          if(rating > 0) {                                                                                             // 183
            module.verbose('Setting current rating to', rating);                                                       // 184
            $activeIcon                                                                                                // 185
              .addClass(className.active)                                                                              // 186
                .prevAll()                                                                                             // 187
                .addClass(className.active)                                                                            // 188
            ;                                                                                                          // 189
          }                                                                                                            // 190
          $.proxy(settings.onRate, element)(rating);                                                                   // 191
        },                                                                                                             // 192
                                                                                                                       // 193
        setting: function(name, value) {                                                                               // 194
          if( $.isPlainObject(name) ) {                                                                                // 195
            $.extend(true, settings, name);                                                                            // 196
          }                                                                                                            // 197
          else if(value !== undefined) {                                                                               // 198
            settings[name] = value;                                                                                    // 199
          }                                                                                                            // 200
          else {                                                                                                       // 201
            return settings[name];                                                                                     // 202
          }                                                                                                            // 203
        },                                                                                                             // 204
        internal: function(name, value) {                                                                              // 205
          if( $.isPlainObject(name) ) {                                                                                // 206
            $.extend(true, module, name);                                                                              // 207
          }                                                                                                            // 208
          else if(value !== undefined) {                                                                               // 209
            module[name] = value;                                                                                      // 210
          }                                                                                                            // 211
          else {                                                                                                       // 212
            return module[name];                                                                                       // 213
          }                                                                                                            // 214
        },                                                                                                             // 215
        debug: function() {                                                                                            // 216
          if(settings.debug) {                                                                                         // 217
            if(settings.performance) {                                                                                 // 218
              module.performance.log(arguments);                                                                       // 219
            }                                                                                                          // 220
            else {                                                                                                     // 221
              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');                 // 222
              module.debug.apply(console, arguments);                                                                  // 223
            }                                                                                                          // 224
          }                                                                                                            // 225
        },                                                                                                             // 226
        verbose: function() {                                                                                          // 227
          if(settings.verbose && settings.debug) {                                                                     // 228
            if(settings.performance) {                                                                                 // 229
              module.performance.log(arguments);                                                                       // 230
            }                                                                                                          // 231
            else {                                                                                                     // 232
              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');               // 233
              module.verbose.apply(console, arguments);                                                                // 234
            }                                                                                                          // 235
          }                                                                                                            // 236
        },                                                                                                             // 237
        error: function() {                                                                                            // 238
          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');                    // 239
          module.error.apply(console, arguments);                                                                      // 240
        },                                                                                                             // 241
        performance: {                                                                                                 // 242
          log: function(message) {                                                                                     // 243
            var                                                                                                        // 244
              currentTime,                                                                                             // 245
              executionTime,                                                                                           // 246
              previousTime                                                                                             // 247
            ;                                                                                                          // 248
            if(settings.performance) {                                                                                 // 249
              currentTime   = new Date().getTime();                                                                    // 250
              previousTime  = time || currentTime;                                                                     // 251
              executionTime = currentTime - previousTime;                                                              // 252
              time          = currentTime;                                                                             // 253
              performance.push({                                                                                       // 254
                'Element'        : element,                                                                            // 255
                'Name'           : message[0],                                                                         // 256
                'Arguments'      : [].slice.call(message, 1) || '',                                                    // 257
                'Execution Time' : executionTime                                                                       // 258
              });                                                                                                      // 259
            }                                                                                                          // 260
            clearTimeout(module.performance.timer);                                                                    // 261
            module.performance.timer = setTimeout(module.performance.display, 100);                                    // 262
          },                                                                                                           // 263
          display: function() {                                                                                        // 264
            var                                                                                                        // 265
              title = settings.name + ':',                                                                             // 266
              totalTime = 0                                                                                            // 267
            ;                                                                                                          // 268
            time = false;                                                                                              // 269
            clearTimeout(module.performance.timer);                                                                    // 270
            $.each(performance, function(index, data) {                                                                // 271
              totalTime += data['Execution Time'];                                                                     // 272
            });                                                                                                        // 273
            title += ' ' + totalTime + 'ms';                                                                           // 274
            if(moduleSelector) {                                                                                       // 275
              title += ' \'' + moduleSelector + '\'';                                                                  // 276
            }                                                                                                          // 277
            if($allModules.size() > 1) {                                                                               // 278
              title += ' ' + '(' + $allModules.size() + ')';                                                           // 279
            }                                                                                                          // 280
            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {              // 281
              console.groupCollapsed(title);                                                                           // 282
              if(console.table) {                                                                                      // 283
                console.table(performance);                                                                            // 284
              }                                                                                                        // 285
              else {                                                                                                   // 286
                $.each(performance, function(index, data) {                                                            // 287
                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');                                      // 288
                });                                                                                                    // 289
              }                                                                                                        // 290
              console.groupEnd();                                                                                      // 291
            }                                                                                                          // 292
            performance = [];                                                                                          // 293
          }                                                                                                            // 294
        },                                                                                                             // 295
        invoke: function(query, passedArguments, context) {                                                            // 296
          var                                                                                                          // 297
            maxDepth,                                                                                                  // 298
            found,                                                                                                     // 299
            response                                                                                                   // 300
          ;                                                                                                            // 301
          passedArguments = passedArguments || queryArguments;                                                         // 302
          context         = element         || context;                                                                // 303
          if(typeof query == 'string' && instance !== undefined) {                                                     // 304
            query    = query.split(/[\. ]/);                                                                           // 305
            maxDepth = query.length - 1;                                                                               // 306
            $.each(query, function(depth, value) {                                                                     // 307
              var camelCaseValue = (depth != maxDepth)                                                                 // 308
                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)                         // 309
                : query                                                                                                // 310
              ;                                                                                                        // 311
              if( $.isPlainObject( instance[camelCaseValue] ) && (depth != maxDepth) ) {                               // 312
                instance = instance[camelCaseValue];                                                                   // 313
              }                                                                                                        // 314
              else if( instance[camelCaseValue] !== undefined ) {                                                      // 315
                found = instance[camelCaseValue];                                                                      // 316
                return false;                                                                                          // 317
              }                                                                                                        // 318
              else if( $.isPlainObject( instance[value] ) && (depth != maxDepth) ) {                                   // 319
                instance = instance[value];                                                                            // 320
              }                                                                                                        // 321
              else if( instance[value] !== undefined ) {                                                               // 322
                found = instance[value];                                                                               // 323
                return false;                                                                                          // 324
              }                                                                                                        // 325
              else {                                                                                                   // 326
                module.error(error.method, query);                                                                     // 327
                return false;                                                                                          // 328
              }                                                                                                        // 329
            });                                                                                                        // 330
          }                                                                                                            // 331
          if ( $.isFunction( found ) ) {                                                                               // 332
            response = found.apply(context, passedArguments);                                                          // 333
          }                                                                                                            // 334
          else if(found !== undefined) {                                                                               // 335
            response = found;                                                                                          // 336
          }                                                                                                            // 337
          if($.isArray(returnedValue)) {                                                                               // 338
            returnedValue.push(response);                                                                              // 339
          }                                                                                                            // 340
          else if(returnedValue !== undefined) {                                                                       // 341
            returnedValue = [returnedValue, response];                                                                 // 342
          }                                                                                                            // 343
          else if(response !== undefined) {                                                                            // 344
            returnedValue = response;                                                                                  // 345
          }                                                                                                            // 346
          return found;                                                                                                // 347
        }                                                                                                              // 348
      };                                                                                                               // 349
      if(methodInvoked) {                                                                                              // 350
        if(instance === undefined) {                                                                                   // 351
          module.initialize();                                                                                         // 352
        }                                                                                                              // 353
        module.invoke(query);                                                                                          // 354
      }                                                                                                                // 355
      else {                                                                                                           // 356
        if(instance !== undefined) {                                                                                   // 357
          module.destroy();                                                                                            // 358
        }                                                                                                              // 359
        module.initialize();                                                                                           // 360
      }                                                                                                                // 361
    })                                                                                                                 // 362
  ;                                                                                                                    // 363
                                                                                                                       // 364
  return (returnedValue !== undefined)                                                                                 // 365
    ? returnedValue                                                                                                    // 366
    : this                                                                                                             // 367
  ;                                                                                                                    // 368
};                                                                                                                     // 369
                                                                                                                       // 370
$.fn.rating.settings = {                                                                                               // 371
                                                                                                                       // 372
  name          : 'Rating',                                                                                            // 373
  namespace     : 'rating',                                                                                            // 374
                                                                                                                       // 375
  verbose       : true,                                                                                                // 376
  debug         : true,                                                                                                // 377
  performance   : true,                                                                                                // 378
                                                                                                                       // 379
  initialRating : 0,                                                                                                   // 380
  interactive   : true,                                                                                                // 381
  clearable     : false,                                                                                               // 382
                                                                                                                       // 383
  onRate        : function(rating){},                                                                                  // 384
                                                                                                                       // 385
  error       : {                                                                                                      // 386
    method : 'The method you called is not defined'                                                                    // 387
  },                                                                                                                   // 388
                                                                                                                       // 389
  metadata: {                                                                                                          // 390
    rating: 'rating'                                                                                                   // 391
  },                                                                                                                   // 392
                                                                                                                       // 393
  className : {                                                                                                        // 394
    active   : 'active',                                                                                               // 395
    disabled : 'disabled',                                                                                             // 396
    hover    : 'hover',                                                                                                // 397
    loading  : 'loading'                                                                                               // 398
  },                                                                                                                   // 399
                                                                                                                       // 400
  selector  : {                                                                                                        // 401
    icon : '.icon'                                                                                                     // 402
  }                                                                                                                    // 403
                                                                                                                       // 404
};                                                                                                                     // 405
                                                                                                                       // 406
})( jQuery, window , document );                                                                                       // 407
                                                                                                                       // 408
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}).call(this);






(function () {

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// packages/semantic-ui/lib/semantic-ui/build/uncompressed/modules/search.js                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/*                                                                                                                     // 1
 * # Semantic - Search                                                                                                 // 2
 * http://github.com/jlukic/semantic-ui/                                                                               // 3
 *                                                                                                                     // 4
 *                                                                                                                     // 5
 * Copyright 2013 Contributors                                                                                         // 6
 * Released under the MIT license                                                                                      // 7
 * http://opensource.org/licenses/MIT                                                                                  // 8
 *                                                                                                                     // 9
 */                                                                                                                    // 10
                                                                                                                       // 11
;(function ($, window, document, undefined) {                                                                          // 12
                                                                                                                       // 13
$.fn.search = function(source, parameters) {                                                                           // 14
  var                                                                                                                  // 15
    $allModules     = $(this),                                                                                         // 16
    moduleSelector  = $allModules.selector || '',                                                                      // 17
                                                                                                                       // 18
    time            = new Date().getTime(),                                                                            // 19
    performance     = [],                                                                                              // 20
                                                                                                                       // 21
    query           = arguments[0],                                                                                    // 22
    methodInvoked   = (typeof query == 'string'),                                                                      // 23
    queryArguments  = [].slice.call(arguments, 1),                                                                     // 24
    returnedValue                                                                                                      // 25
  ;                                                                                                                    // 26
  $(this)                                                                                                              // 27
    .each(function() {                                                                                                 // 28
      var                                                                                                              // 29
        settings        = $.extend(true, {}, $.fn.search.settings, parameters),                                        // 30
                                                                                                                       // 31
        className       = settings.className,                                                                          // 32
        selector        = settings.selector,                                                                           // 33
        error           = settings.error,                                                                              // 34
        namespace       = settings.namespace,                                                                          // 35
                                                                                                                       // 36
        eventNamespace  = '.' + namespace,                                                                             // 37
        moduleNamespace = namespace + '-module',                                                                       // 38
                                                                                                                       // 39
        $module         = $(this),                                                                                     // 40
        $prompt         = $module.find(selector.prompt),                                                               // 41
        $searchButton   = $module.find(selector.searchButton),                                                         // 42
        $results        = $module.find(selector.results),                                                              // 43
        $result         = $module.find(selector.result),                                                               // 44
        $category       = $module.find(selector.category),                                                             // 45
                                                                                                                       // 46
        element         = this,                                                                                        // 47
        instance        = $module.data(moduleNamespace),                                                               // 48
                                                                                                                       // 49
        module                                                                                                         // 50
      ;                                                                                                                // 51
      module = {                                                                                                       // 52
                                                                                                                       // 53
        initialize: function() {                                                                                       // 54
          module.verbose('Initializing module');                                                                       // 55
          var                                                                                                          // 56
            prompt = $prompt[0],                                                                                       // 57
            inputEvent   = (prompt.oninput !== undefined)                                                              // 58
              ? 'input'                                                                                                // 59
              : (prompt.onpropertychange !== undefined)                                                                // 60
                ? 'propertychange'                                                                                     // 61
                : 'keyup'                                                                                              // 62
          ;                                                                                                            // 63
          // attach events                                                                                             // 64
          $prompt                                                                                                      // 65
            .on('focus' + eventNamespace, module.event.focus)                                                          // 66
            .on('blur' + eventNamespace, module.event.blur)                                                            // 67
            .on('keydown' + eventNamespace, module.handleKeyboard)                                                     // 68
          ;                                                                                                            // 69
          if(settings.automatic) {                                                                                     // 70
            $prompt                                                                                                    // 71
              .on(inputEvent + eventNamespace, module.search.throttle)                                                 // 72
            ;                                                                                                          // 73
          }                                                                                                            // 74
          $searchButton                                                                                                // 75
            .on('click' + eventNamespace, module.search.query)                                                         // 76
          ;                                                                                                            // 77
          $results                                                                                                     // 78
            .on('click' + eventNamespace, selector.result, module.results.select)                                      // 79
          ;                                                                                                            // 80
          module.instantiate();                                                                                        // 81
        },                                                                                                             // 82
        instantiate: function() {                                                                                      // 83
          module.verbose('Storing instance of module', module);                                                        // 84
          instance = module;                                                                                           // 85
          $module                                                                                                      // 86
            .data(moduleNamespace, module)                                                                             // 87
          ;                                                                                                            // 88
        },                                                                                                             // 89
        destroy: function() {                                                                                          // 90
          module.verbose('Destroying instance');                                                                       // 91
          $module                                                                                                      // 92
            .removeData(moduleNamespace)                                                                               // 93
          ;                                                                                                            // 94
        },                                                                                                             // 95
        event: {                                                                                                       // 96
          focus: function() {                                                                                          // 97
            $module                                                                                                    // 98
              .addClass(className.focus)                                                                               // 99
            ;                                                                                                          // 100
            module.results.show();                                                                                     // 101
          },                                                                                                           // 102
          blur: function() {                                                                                           // 103
            module.search.cancel();                                                                                    // 104
            $module                                                                                                    // 105
              .removeClass(className.focus)                                                                            // 106
            ;                                                                                                          // 107
            module.results.hide();                                                                                     // 108
          }                                                                                                            // 109
        },                                                                                                             // 110
        handleKeyboard: function(event) {                                                                              // 111
          var                                                                                                          // 112
            // force latest jq dom                                                                                     // 113
            $result       = $module.find(selector.result),                                                             // 114
            $category     = $module.find(selector.category),                                                           // 115
            keyCode       = event.which,                                                                               // 116
            keys          = {                                                                                          // 117
              backspace : 8,                                                                                           // 118
              enter     : 13,                                                                                          // 119
              escape    : 27,                                                                                          // 120
              upArrow   : 38,                                                                                          // 121
              downArrow : 40                                                                                           // 122
            },                                                                                                         // 123
            activeClass  = className.active,                                                                           // 124
            currentIndex = $result.index( $result.filter('.' + activeClass) ),                                         // 125
            resultSize   = $result.size(),                                                                             // 126
            newIndex                                                                                                   // 127
          ;                                                                                                            // 128
          // search shortcuts                                                                                          // 129
          if(keyCode == keys.escape) {                                                                                 // 130
            module.verbose('Escape key pressed, blurring search field');                                               // 131
            $prompt                                                                                                    // 132
              .trigger('blur')                                                                                         // 133
            ;                                                                                                          // 134
          }                                                                                                            // 135
          // result shortcuts                                                                                          // 136
          if($results.filter(':visible').size() > 0) {                                                                 // 137
            if(keyCode == keys.enter) {                                                                                // 138
              module.verbose('Enter key pressed, selecting active result');                                            // 139
              if( $result.filter('.' + activeClass).exists() ) {                                                       // 140
                $.proxy(module.results.select, $result.filter('.' + activeClass) )();                                  // 141
                event.preventDefault();                                                                                // 142
                return false;                                                                                          // 143
              }                                                                                                        // 144
            }                                                                                                          // 145
            else if(keyCode == keys.upArrow) {                                                                         // 146
              module.verbose('Up key pressed, changing active result');                                                // 147
              newIndex = (currentIndex - 1 < 0)                                                                        // 148
                ? currentIndex                                                                                         // 149
                : currentIndex - 1                                                                                     // 150
              ;                                                                                                        // 151
              $category                                                                                                // 152
                .removeClass(activeClass)                                                                              // 153
              ;                                                                                                        // 154
              $result                                                                                                  // 155
                .removeClass(activeClass)                                                                              // 156
                .eq(newIndex)                                                                                          // 157
                  .addClass(activeClass)                                                                               // 158
                  .closest($category)                                                                                  // 159
                    .addClass(activeClass)                                                                             // 160
              ;                                                                                                        // 161
              event.preventDefault();                                                                                  // 162
            }                                                                                                          // 163
            else if(keyCode == keys.downArrow) {                                                                       // 164
              module.verbose('Down key pressed, changing active result');                                              // 165
              newIndex = (currentIndex + 1 >= resultSize)                                                              // 166
                ? currentIndex                                                                                         // 167
                : currentIndex + 1                                                                                     // 168
              ;                                                                                                        // 169
              $category                                                                                                // 170
                .removeClass(activeClass)                                                                              // 171
              ;                                                                                                        // 172
              $result                                                                                                  // 173
                .removeClass(activeClass)                                                                              // 174
                .eq(newIndex)                                                                                          // 175
                  .addClass(activeClass)                                                                               // 176
                  .closest($category)                                                                                  // 177
                    .addClass(activeClass)                                                                             // 178
              ;                                                                                                        // 179
              event.preventDefault();                                                                                  // 180
            }                                                                                                          // 181
          }                                                                                                            // 182
          else {                                                                                                       // 183
            // query shortcuts                                                                                         // 184
            if(keyCode == keys.enter) {                                                                                // 185
              module.verbose('Enter key pressed, executing query');                                                    // 186
              module.search.query();                                                                                   // 187
              $searchButton                                                                                            // 188
                .addClass(className.down)                                                                              // 189
              ;                                                                                                        // 190
              $prompt                                                                                                  // 191
                .one('keyup', function(){                                                                              // 192
                  $searchButton                                                                                        // 193
                    .removeClass(className.down)                                                                       // 194
                  ;                                                                                                    // 195
                })                                                                                                     // 196
              ;                                                                                                        // 197
            }                                                                                                          // 198
          }                                                                                                            // 199
        },                                                                                                             // 200
        search: {                                                                                                      // 201
          cancel: function() {                                                                                         // 202
            var                                                                                                        // 203
              xhr = $module.data('xhr') || false                                                                       // 204
            ;                                                                                                          // 205
            if( xhr && xhr.state() != 'resolved') {                                                                    // 206
              module.debug('Cancelling last search');                                                                  // 207
              xhr.abort();                                                                                             // 208
            }                                                                                                          // 209
          },                                                                                                           // 210
          throttle: function() {                                                                                       // 211
            var                                                                                                        // 212
              searchTerm    = $prompt.val(),                                                                           // 213
              numCharacters = searchTerm.length                                                                        // 214
            ;                                                                                                          // 215
            clearTimeout(module.timer);                                                                                // 216
            if(numCharacters >= settings.minCharacters)  {                                                             // 217
              module.timer = setTimeout(module.search.query, settings.searchThrottle);                                 // 218
            }                                                                                                          // 219
            else {                                                                                                     // 220
              module.results.hide();                                                                                   // 221
            }                                                                                                          // 222
          },                                                                                                           // 223
          query: function() {                                                                                          // 224
            var                                                                                                        // 225
              searchTerm = $prompt.val(),                                                                              // 226
              cachedHTML = module.search.cache.read(searchTerm)                                                        // 227
            ;                                                                                                          // 228
            if(cachedHTML) {                                                                                           // 229
              module.debug("Reading result for '" + searchTerm + "' from cache");                                      // 230
              module.results.add(cachedHTML);                                                                          // 231
            }                                                                                                          // 232
            else {                                                                                                     // 233
              module.debug("Querying for '" + searchTerm + "'");                                                       // 234
              if(typeof source == 'object') {                                                                          // 235
                module.search.local(searchTerm);                                                                       // 236
              }                                                                                                        // 237
              else {                                                                                                   // 238
                module.search.remote(searchTerm);                                                                      // 239
              }                                                                                                        // 240
              $.proxy(settings.onSearchQuery, $module)(searchTerm);                                                    // 241
            }                                                                                                          // 242
          },                                                                                                           // 243
          local: function(searchTerm) {                                                                                // 244
            var                                                                                                        // 245
              results   = [],                                                                                          // 246
              fullTextResults = [],                                                                                    // 247
              searchFields    = $.isArray(settings.searchFields)                                                       // 248
                ? settings.searchFields                                                                                // 249
                : [settings.searchFields],                                                                             // 250
                                                                                                                       // 251
              searchRegExp   = new RegExp('(?:\s|^)' + searchTerm, 'i'),                                               // 252
              fullTextRegExp = new RegExp(searchTerm, 'i'),                                                            // 253
              searchHTML                                                                                               // 254
            ;                                                                                                          // 255
            $module                                                                                                    // 256
              .addClass(className.loading)                                                                             // 257
            ;                                                                                                          // 258
            // iterate through search fields in array order                                                            // 259
            $.each(searchFields, function(index, field) {                                                              // 260
              $.each(source, function(label, thing) {                                                                  // 261
                if(typeof thing[field] == 'string' && ($.inArray(thing, results) == -1) && ($.inArray(thing, fullTextResults) == -1) ) {
                  if( searchRegExp.test( thing[field] ) ) {                                                            // 263
                    results.push(thing);                                                                               // 264
                  }                                                                                                    // 265
                  else if( fullTextRegExp.test( thing[field] ) ) {                                                     // 266
                    fullTextResults.push(thing);                                                                       // 267
                  }                                                                                                    // 268
                }                                                                                                      // 269
              });                                                                                                      // 270
            });                                                                                                        // 271
            searchHTML = module.results.generate({                                                                     // 272
              results: $.merge(results, fullTextResults)                                                               // 273
            });                                                                                                        // 274
            $module                                                                                                    // 275
              .removeClass(className.loading)                                                                          // 276
            ;                                                                                                          // 277
            module.search.cache.write(searchTerm, searchHTML);                                                         // 278
            module.results.add(searchHTML);                                                                            // 279
          },                                                                                                           // 280
          remote: function(searchTerm) {                                                                               // 281
            var                                                                                                        // 282
              apiSettings = {                                                                                          // 283
                stateContext  : $module,                                                                               // 284
                url           : source,                                                                                // 285
                urlData: { query: searchTerm },                                                                        // 286
                success       : function(response) {                                                                   // 287
                  searchHTML = module.results.generate(response);                                                      // 288
                  module.search.cache.write(searchTerm, searchHTML);                                                   // 289
                  module.results.add(searchHTML);                                                                      // 290
                },                                                                                                     // 291
                failure      : module.error                                                                            // 292
              },                                                                                                       // 293
              searchHTML                                                                                               // 294
            ;                                                                                                          // 295
            module.search.cancel();                                                                                    // 296
            module.debug('Executing search');                                                                          // 297
            $.extend(true, apiSettings, settings.apiSettings);                                                         // 298
            $.api(apiSettings);                                                                                        // 299
          },                                                                                                           // 300
                                                                                                                       // 301
          cache: {                                                                                                     // 302
            read: function(name) {                                                                                     // 303
              var                                                                                                      // 304
                cache = $module.data('cache')                                                                          // 305
              ;                                                                                                        // 306
              return (settings.cache && (typeof cache == 'object') && (cache[name] !== undefined) )                    // 307
                ? cache[name]                                                                                          // 308
                : false                                                                                                // 309
              ;                                                                                                        // 310
            },                                                                                                         // 311
            write: function(name, value) {                                                                             // 312
              var                                                                                                      // 313
                cache = ($module.data('cache') !== undefined)                                                          // 314
                  ? $module.data('cache')                                                                              // 315
                  : {}                                                                                                 // 316
              ;                                                                                                        // 317
              cache[name] = value;                                                                                     // 318
              $module                                                                                                  // 319
                .data('cache', cache)                                                                                  // 320
              ;                                                                                                        // 321
            }                                                                                                          // 322
          }                                                                                                            // 323
        },                                                                                                             // 324
                                                                                                                       // 325
        results: {                                                                                                     // 326
          generate: function(response) {                                                                               // 327
            module.debug('Generating html from response', response);                                                   // 328
            var                                                                                                        // 329
              template = settings.templates[settings.type],                                                            // 330
              html     = ''                                                                                            // 331
            ;                                                                                                          // 332
            if(($.isPlainObject(response.results) && !$.isEmptyObject(response.results)) || ($.isArray(response.results) && response.results.length > 0) ) {
              if(settings.maxResults > 0) {                                                                            // 334
                response.results = $.makeArray(response.results).slice(0, settings.maxResults);                        // 335
              }                                                                                                        // 336
              if(response.results.length > 0) {                                                                        // 337
                if($.isFunction(template)) {                                                                           // 338
                  html = template(response);                                                                           // 339
                }                                                                                                      // 340
                else {                                                                                                 // 341
                  module.error(error.noTemplate, false);                                                               // 342
                }                                                                                                      // 343
              }                                                                                                        // 344
            }                                                                                                          // 345
            else {                                                                                                     // 346
              html = module.message(error.noResults, 'empty');                                                         // 347
            }                                                                                                          // 348
            $.proxy(settings.onResults, $module)(response);                                                            // 349
            return html;                                                                                               // 350
          },                                                                                                           // 351
          add: function(html) {                                                                                        // 352
            if(settings.onResultsAdd == 'default' || $.proxy(settings.onResultsAdd, $results)(html) == 'default') {    // 353
              $results                                                                                                 // 354
                .html(html)                                                                                            // 355
              ;                                                                                                        // 356
            }                                                                                                          // 357
            module.results.show();                                                                                     // 358
          },                                                                                                           // 359
          show: function() {                                                                                           // 360
            if( ($results.filter(':visible').size() === 0) && ($prompt.filter(':focus').size() > 0) && $results.html() !== '') {
              $results                                                                                                 // 362
                .stop()                                                                                                // 363
                .fadeIn(200)                                                                                           // 364
              ;                                                                                                        // 365
              $.proxy(settings.onResultsOpen, $results)();                                                             // 366
            }                                                                                                          // 367
          },                                                                                                           // 368
          hide: function() {                                                                                           // 369
            if($results.filter(':visible').size() > 0) {                                                               // 370
              $results                                                                                                 // 371
                .stop()                                                                                                // 372
                .fadeOut(200)                                                                                          // 373
              ;                                                                                                        // 374
              $.proxy(settings.onResultsClose, $results)();                                                            // 375
            }                                                                                                          // 376
          },                                                                                                           // 377
          select: function(event) {                                                                                    // 378
            module.debug('Search result selected');                                                                    // 379
            var                                                                                                        // 380
              $result = $(this),                                                                                       // 381
              $title  = $result.find('.title'),                                                                        // 382
              title   = $title.html()                                                                                  // 383
            ;                                                                                                          // 384
            if(settings.onSelect == 'default' || $.proxy(settings.onSelect, this)(event) == 'default') {               // 385
              var                                                                                                      // 386
                $link  = $result.find('a[href]').eq(0),                                                                // 387
                href   = $link.attr('href') || false,                                                                  // 388
                target = $link.attr('target') || false                                                                 // 389
              ;                                                                                                        // 390
              module.results.hide();                                                                                   // 391
              $prompt                                                                                                  // 392
                .val(title)                                                                                            // 393
              ;                                                                                                        // 394
              if(href) {                                                                                               // 395
                if(target == '_blank' || event.ctrlKey) {                                                              // 396
                  window.open(href);                                                                                   // 397
                }                                                                                                      // 398
                else {                                                                                                 // 399
                  window.location.href = (href);                                                                       // 400
                }                                                                                                      // 401
              }                                                                                                        // 402
            }                                                                                                          // 403
          }                                                                                                            // 404
        },                                                                                                             // 405
                                                                                                                       // 406
        setting: function(name, value) {                                                                               // 407
          if( $.isPlainObject(name) ) {                                                                                // 408
            $.extend(true, settings, name);                                                                            // 409
          }                                                                                                            // 410
          else if(value !== undefined) {                                                                               // 411
            settings[name] = value;                                                                                    // 412
          }                                                                                                            // 413
          else {                                                                                                       // 414
            return settings[name];                                                                                     // 415
          }                                                                                                            // 416
        },                                                                                                             // 417
        internal: function(name, value) {                                                                              // 418
          if( $.isPlainObject(name) ) {                                                                                // 419
            $.extend(true, module, name);                                                                              // 420
          }                                                                                                            // 421
          else if(value !== undefined) {                                                                               // 422
            module[name] = value;                                                                                      // 423
          }                                                                                                            // 424
          else {                                                                                                       // 425
            return module[name];                                                                                       // 426
          }                                                                                                            // 427
        },                                                                                                             // 428
        debug: function() {                                                                                            // 429
          if(settings.debug) {                                                                                         // 430
            if(settings.performance) {                                                                                 // 431
              module.performance.log(arguments);                                                                       // 432
            }                                                                                                          // 433
            else {                                                                                                     // 434
              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');                 // 435
              module.debug.apply(console, arguments);                                                                  // 436
            }                                                                                                          // 437
          }                                                                                                            // 438
        },                                                                                                             // 439
        verbose: function() {                                                                                          // 440
          if(settings.verbose && settings.debug) {                                                                     // 441
            if(settings.performance) {                                                                                 // 442
              module.performance.log(arguments);                                                                       // 443
            }                                                                                                          // 444
            else {                                                                                                     // 445
              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');               // 446
              module.verbose.apply(console, arguments);                                                                // 447
            }                                                                                                          // 448
          }                                                                                                            // 449
        },                                                                                                             // 450
        error: function() {                                                                                            // 451
          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');                    // 452
          module.error.apply(console, arguments);                                                                      // 453
        },                                                                                                             // 454
        performance: {                                                                                                 // 455
          log: function(message) {                                                                                     // 456
            var                                                                                                        // 457
              currentTime,                                                                                             // 458
              executionTime,                                                                                           // 459
              previousTime                                                                                             // 460
            ;                                                                                                          // 461
            if(settings.performance) {                                                                                 // 462
              currentTime   = new Date().getTime();                                                                    // 463
              previousTime  = time || currentTime;                                                                     // 464
              executionTime = currentTime - previousTime;                                                              // 465
              time          = currentTime;                                                                             // 466
              performance.push({                                                                                       // 467
                'Element'        : element,                                                                            // 468
                'Name'           : message[0],                                                                         // 469
                'Arguments'      : [].slice.call(message, 1) || '',                                                    // 470
                'Execution Time' : executionTime                                                                       // 471
              });                                                                                                      // 472
            }                                                                                                          // 473
            clearTimeout(module.performance.timer);                                                                    // 474
            module.performance.timer = setTimeout(module.performance.display, 100);                                    // 475
          },                                                                                                           // 476
          display: function() {                                                                                        // 477
            var                                                                                                        // 478
              title = settings.name + ':',                                                                             // 479
              totalTime = 0                                                                                            // 480
            ;                                                                                                          // 481
            time = false;                                                                                              // 482
            clearTimeout(module.performance.timer);                                                                    // 483
            $.each(performance, function(index, data) {                                                                // 484
              totalTime += data['Execution Time'];                                                                     // 485
            });                                                                                                        // 486
            title += ' ' + totalTime + 'ms';                                                                           // 487
            if(moduleSelector) {                                                                                       // 488
              title += ' \'' + moduleSelector + '\'';                                                                  // 489
            }                                                                                                          // 490
            if($allModules.size() > 1) {                                                                               // 491
              title += ' ' + '(' + $allModules.size() + ')';                                                           // 492
            }                                                                                                          // 493
            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {              // 494
              console.groupCollapsed(title);                                                                           // 495
              if(console.table) {                                                                                      // 496
                console.table(performance);                                                                            // 497
              }                                                                                                        // 498
              else {                                                                                                   // 499
                $.each(performance, function(index, data) {                                                            // 500
                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');                                      // 501
                });                                                                                                    // 502
              }                                                                                                        // 503
              console.groupEnd();                                                                                      // 504
            }                                                                                                          // 505
            performance = [];                                                                                          // 506
          }                                                                                                            // 507
        },                                                                                                             // 508
        invoke: function(query, passedArguments, context) {                                                            // 509
          var                                                                                                          // 510
            maxDepth,                                                                                                  // 511
            found,                                                                                                     // 512
            response                                                                                                   // 513
          ;                                                                                                            // 514
          passedArguments = passedArguments || queryArguments;                                                         // 515
          context         = element         || context;                                                                // 516
          if(typeof query == 'string' && instance !== undefined) {                                                     // 517
            query    = query.split(/[\. ]/);                                                                           // 518
            maxDepth = query.length - 1;                                                                               // 519
            $.each(query, function(depth, value) {                                                                     // 520
              var camelCaseValue = (depth != maxDepth)                                                                 // 521
                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)                         // 522
                : query                                                                                                // 523
              ;                                                                                                        // 524
              if( $.isPlainObject( instance[camelCaseValue] ) && (depth != maxDepth) ) {                               // 525
                instance = instance[camelCaseValue];                                                                   // 526
              }                                                                                                        // 527
              else if( instance[camelCaseValue] !== undefined ) {                                                      // 528
                found = instance[camelCaseValue];                                                                      // 529
                return false;                                                                                          // 530
              }                                                                                                        // 531
              else if( $.isPlainObject( instance[value] ) && (depth != maxDepth) ) {                                   // 532
                instance = instance[value];                                                                            // 533
              }                                                                                                        // 534
              else if( instance[value] !== undefined ) {                                                               // 535
                found = instance[value];                                                                               // 536
                return false;                                                                                          // 537
              }                                                                                                        // 538
              else {                                                                                                   // 539
                module.error(error.method, query);                                                                     // 540
                return false;                                                                                          // 541
              }                                                                                                        // 542
            });                                                                                                        // 543
          }                                                                                                            // 544
          if ( $.isFunction( found ) ) {                                                                               // 545
            response = found.apply(context, passedArguments);                                                          // 546
          }                                                                                                            // 547
          else if(found !== undefined) {                                                                               // 548
            response = found;                                                                                          // 549
          }                                                                                                            // 550
          if($.isArray(returnedValue)) {                                                                               // 551
            returnedValue.push(response);                                                                              // 552
          }                                                                                                            // 553
          else if(returnedValue !== undefined) {                                                                       // 554
            returnedValue = [returnedValue, response];                                                                 // 555
          }                                                                                                            // 556
          else if(response !== undefined) {                                                                            // 557
            returnedValue = response;                                                                                  // 558
          }                                                                                                            // 559
          return found;                                                                                                // 560
        }                                                                                                              // 561
      };                                                                                                               // 562
      if(methodInvoked) {                                                                                              // 563
        if(instance === undefined) {                                                                                   // 564
          module.initialize();                                                                                         // 565
        }                                                                                                              // 566
        module.invoke(query);                                                                                          // 567
      }                                                                                                                // 568
      else {                                                                                                           // 569
        if(instance !== undefined) {                                                                                   // 570
          module.destroy();                                                                                            // 571
        }                                                                                                              // 572
        module.initialize();                                                                                           // 573
      }                                                                                                                // 574
                                                                                                                       // 575
    })                                                                                                                 // 576
  ;                                                                                                                    // 577
                                                                                                                       // 578
  return (returnedValue !== undefined)                                                                                 // 579
    ? returnedValue                                                                                                    // 580
    : this                                                                                                             // 581
  ;                                                                                                                    // 582
};                                                                                                                     // 583
                                                                                                                       // 584
$.fn.search.settings = {                                                                                               // 585
                                                                                                                       // 586
  name           : 'Search Module',                                                                                    // 587
  namespace      : 'search',                                                                                           // 588
                                                                                                                       // 589
  debug          : true,                                                                                               // 590
  verbose        : true,                                                                                               // 591
  performance    : true,                                                                                               // 592
                                                                                                                       // 593
  // onSelect default action is defined in module                                                                      // 594
  onSelect       : 'default',                                                                                          // 595
  onResultsAdd   : 'default',                                                                                          // 596
                                                                                                                       // 597
  onSearchQuery  : function(){},                                                                                       // 598
  onResults      : function(response){},                                                                               // 599
                                                                                                                       // 600
  onResultsOpen  : function(){},                                                                                       // 601
  onResultsClose : function(){},                                                                                       // 602
                                                                                                                       // 603
  automatic      : 'true',                                                                                             // 604
  type           : 'simple',                                                                                           // 605
  minCharacters  : 3,                                                                                                  // 606
  searchThrottle : 300,                                                                                                // 607
  maxResults     : 7,                                                                                                  // 608
  cache          : true,                                                                                               // 609
                                                                                                                       // 610
  searchFields    : [                                                                                                  // 611
    'title',                                                                                                           // 612
    'description'                                                                                                      // 613
  ],                                                                                                                   // 614
                                                                                                                       // 615
  // api config                                                                                                        // 616
  apiSettings: {                                                                                                       // 617
                                                                                                                       // 618
  },                                                                                                                   // 619
                                                                                                                       // 620
  className: {                                                                                                         // 621
    active  : 'active',                                                                                                // 622
    down    : 'down',                                                                                                  // 623
    focus   : 'focus',                                                                                                 // 624
    empty   : 'empty',                                                                                                 // 625
    loading : 'loading'                                                                                                // 626
  },                                                                                                                   // 627
                                                                                                                       // 628
  error : {                                                                                                            // 629
    noResults   : 'Your search returned no results',                                                                   // 630
    logging     : 'Error in debug logging, exiting.',                                                                  // 631
    noTemplate  : 'A valid template name was not specified.',                                                          // 632
    serverError : 'There was an issue with querying the server.',                                                      // 633
    method      : 'The method you called is not defined.'                                                              // 634
  },                                                                                                                   // 635
                                                                                                                       // 636
  selector : {                                                                                                         // 637
    prompt       : '.prompt',                                                                                          // 638
    searchButton : '.search.button',                                                                                   // 639
    results      : '.results',                                                                                         // 640
    category     : '.category',                                                                                        // 641
    result       : '.result'                                                                                           // 642
  },                                                                                                                   // 643
                                                                                                                       // 644
  templates: {                                                                                                         // 645
    message: function(message, type) {                                                                                 // 646
      var                                                                                                              // 647
        html = ''                                                                                                      // 648
      ;                                                                                                                // 649
      if(message !== undefined && type !== undefined) {                                                                // 650
        html +=  ''                                                                                                    // 651
          + '<div class="message ' + type +'">'                                                                        // 652
        ;                                                                                                              // 653
        // message type                                                                                                // 654
        if(type == 'empty') {                                                                                          // 655
          html += ''                                                                                                   // 656
            + '<div class="header">No Results</div class="header">'                                                    // 657
            + '<div class="description">' + message + '</div class="description">'                                     // 658
          ;                                                                                                            // 659
        }                                                                                                              // 660
        else {                                                                                                         // 661
          html += ' <div class="description">' + message + '</div>';                                                   // 662
        }                                                                                                              // 663
        html += '</div>';                                                                                              // 664
      }                                                                                                                // 665
      return html;                                                                                                     // 666
    },                                                                                                                 // 667
    categories: function(response) {                                                                                   // 668
      var                                                                                                              // 669
        html = ''                                                                                                      // 670
      ;                                                                                                                // 671
      if(response.results !== undefined) {                                                                             // 672
        // each category                                                                                               // 673
        $.each(response.results, function(index, category) {                                                           // 674
          if(category.results !== undefined && category.results.length > 0) {                                          // 675
            html  += ''                                                                                                // 676
              + '<div class="category">'                                                                               // 677
              + '<div class="name">' + category.name + '</div>'                                                        // 678
            ;                                                                                                          // 679
            // each item inside category                                                                               // 680
            $.each(category.results, function(index, result) {                                                         // 681
              html  += '<div class="result">';                                                                         // 682
              html  += '<a href="' + result.url + '"></a>';                                                            // 683
              if(result.image !== undefined) {                                                                         // 684
                html+= ''                                                                                              // 685
                  + '<div class="image">'                                                                              // 686
                  + ' <img src="' + result.image + '">'                                                                // 687
                  + '</div>'                                                                                           // 688
                ;                                                                                                      // 689
              }                                                                                                        // 690
              html += '<div class="info">';                                                                            // 691
              if(result.price !== undefined) {                                                                         // 692
                html+= '<div class="price">' + result.price + '</div>';                                                // 693
              }                                                                                                        // 694
              if(result.title !== undefined) {                                                                         // 695
                html+= '<div class="title">' + result.title + '</div>';                                                // 696
              }                                                                                                        // 697
              if(result.description !== undefined) {                                                                   // 698
                html+= '<div class="description">' + result.description + '</div>';                                    // 699
              }                                                                                                        // 700
              html  += ''                                                                                              // 701
                + '</div>'                                                                                             // 702
                + '</div>'                                                                                             // 703
              ;                                                                                                        // 704
            });                                                                                                        // 705
            html  += ''                                                                                                // 706
              + '</div>'                                                                                               // 707
            ;                                                                                                          // 708
          }                                                                                                            // 709
        });                                                                                                            // 710
        if(response.resultPage) {                                                                                      // 711
          html += ''                                                                                                   // 712
          + '<a href="' + response.resultPage.url + '" class="all">'                                                   // 713
          +   response.resultPage.text                                                                                 // 714
          + '</a>';                                                                                                    // 715
        }                                                                                                              // 716
        return html;                                                                                                   // 717
      }                                                                                                                // 718
      return false;                                                                                                    // 719
    },                                                                                                                 // 720
    simple: function(response) {                                                                                       // 721
      var                                                                                                              // 722
        html = ''                                                                                                      // 723
      ;                                                                                                                // 724
      if(response.results !== undefined) {                                                                             // 725
                                                                                                                       // 726
        // each result                                                                                                 // 727
        $.each(response.results, function(index, result) {                                                             // 728
          html  += '<a class="result" href="' + result.url + '">';                                                     // 729
          if(result.image !== undefined) {                                                                             // 730
            html+= ''                                                                                                  // 731
              + '<div class="image">'                                                                                  // 732
              + ' <img src="' + result.image + '">'                                                                    // 733
              + '</div>'                                                                                               // 734
            ;                                                                                                          // 735
          }                                                                                                            // 736
          html += '<div class="info">';                                                                                // 737
          if(result.price !== undefined) {                                                                             // 738
            html+= '<div class="price">' + result.price + '</div>';                                                    // 739
          }                                                                                                            // 740
          if(result.title !== undefined) {                                                                             // 741
            html+= '<div class="title">' + result.title + '</div>';                                                    // 742
          }                                                                                                            // 743
          if(result.description !== undefined) {                                                                       // 744
            html+= '<div class="description">' + result.description + '</div>';                                        // 745
          }                                                                                                            // 746
          html  += ''                                                                                                  // 747
            + '</div>'                                                                                                 // 748
            + '</a>'                                                                                                   // 749
          ;                                                                                                            // 750
        });                                                                                                            // 751
                                                                                                                       // 752
        if(response.resultPage) {                                                                                      // 753
          html += ''                                                                                                   // 754
          + '<a href="' + response.resultPage.url + '" class="all">'                                                   // 755
          +   response.resultPage.text                                                                                 // 756
          + '</a>';                                                                                                    // 757
        }                                                                                                              // 758
        return html;                                                                                                   // 759
      }                                                                                                                // 760
      return false;                                                                                                    // 761
    }                                                                                                                  // 762
  }                                                                                                                    // 763
};                                                                                                                     // 764
                                                                                                                       // 765
})( jQuery, window , document );                                                                                       // 766
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}).call(this);






(function () {

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// packages/semantic-ui/lib/semantic-ui/build/uncompressed/modules/shape.js                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/*                                                                                                                     // 1
 * # Semantic - Shape                                                                                                  // 2
 * http://github.com/jlukic/semantic-ui/                                                                               // 3
 *                                                                                                                     // 4
 *                                                                                                                     // 5
 * Copyright 2013 Contributors                                                                                         // 6
 * Released under the MIT license                                                                                      // 7
 * http://opensource.org/licenses/MIT                                                                                  // 8
 *                                                                                                                     // 9
 */                                                                                                                    // 10
                                                                                                                       // 11
;(function ( $, window, document, undefined ) {                                                                        // 12
                                                                                                                       // 13
$.fn.shape = function(parameters) {                                                                                    // 14
  var                                                                                                                  // 15
    $allModules     = $(this),                                                                                         // 16
    $body           = $('body'),                                                                                       // 17
                                                                                                                       // 18
    time            = new Date().getTime(),                                                                            // 19
    performance     = [],                                                                                              // 20
                                                                                                                       // 21
    query           = arguments[0],                                                                                    // 22
    methodInvoked   = (typeof query == 'string'),                                                                      // 23
    queryArguments  = [].slice.call(arguments, 1),                                                                     // 24
    returnedValue                                                                                                      // 25
  ;                                                                                                                    // 26
                                                                                                                       // 27
  $allModules                                                                                                          // 28
    .each(function() {                                                                                                 // 29
      var                                                                                                              // 30
        moduleSelector  = $allModules.selector || '',                                                                  // 31
        settings        = $.extend(true, {}, $.fn.shape.settings, parameters),                                         // 32
                                                                                                                       // 33
        // internal aliases                                                                                            // 34
        namespace     = settings.namespace,                                                                            // 35
        selector      = settings.selector,                                                                             // 36
        error         = settings.error,                                                                                // 37
        className     = settings.className,                                                                            // 38
                                                                                                                       // 39
        // define namespaces for modules                                                                               // 40
        eventNamespace  = '.' + namespace,                                                                             // 41
        moduleNamespace = 'module-' + namespace,                                                                       // 42
                                                                                                                       // 43
        // selector cache                                                                                              // 44
        $module       = $(this),                                                                                       // 45
        $sides        = $module.find(selector.sides),                                                                  // 46
        $side         = $module.find(selector.side),                                                                   // 47
                                                                                                                       // 48
        // private variables                                                                                           // 49
        nextSelector = false,                                                                                          // 50
        $activeSide,                                                                                                   // 51
        $nextSide,                                                                                                     // 52
                                                                                                                       // 53
        // standard module                                                                                             // 54
        element       = this,                                                                                          // 55
        instance      = $module.data(moduleNamespace),                                                                 // 56
        module                                                                                                         // 57
      ;                                                                                                                // 58
                                                                                                                       // 59
      module = {                                                                                                       // 60
                                                                                                                       // 61
        initialize: function() {                                                                                       // 62
          module.verbose('Initializing module for', element);                                                          // 63
          module.set.defaultSide();                                                                                    // 64
          module.instantiate();                                                                                        // 65
        },                                                                                                             // 66
                                                                                                                       // 67
        instantiate: function() {                                                                                      // 68
          module.verbose('Storing instance of module', module);                                                        // 69
          instance = module;                                                                                           // 70
          $module                                                                                                      // 71
            .data(moduleNamespace, instance)                                                                           // 72
          ;                                                                                                            // 73
        },                                                                                                             // 74
                                                                                                                       // 75
        destroy: function() {                                                                                          // 76
          module.verbose('Destroying previous module for', element);                                                   // 77
          $module                                                                                                      // 78
            .removeData(moduleNamespace)                                                                               // 79
            .off(eventNamespace)                                                                                       // 80
          ;                                                                                                            // 81
        },                                                                                                             // 82
                                                                                                                       // 83
        refresh: function() {                                                                                          // 84
          module.verbose('Refreshing selector cache for', element);                                                    // 85
          $module = $(element);                                                                                        // 86
          $sides  = $(this).find(selector.shape);                                                                      // 87
          $side   = $(this).find(selector.side);                                                                       // 88
        },                                                                                                             // 89
                                                                                                                       // 90
        repaint: function() {                                                                                          // 91
          module.verbose('Forcing repaint event');                                                                     // 92
          var                                                                                                          // 93
            shape          = $sides.get(0) || document.createElement('div'),                                           // 94
            fakeAssignment = shape.offsetWidth                                                                         // 95
          ;                                                                                                            // 96
        },                                                                                                             // 97
                                                                                                                       // 98
        animate: function(propertyObject, callback) {                                                                  // 99
          module.verbose('Animating box with properties', propertyObject);                                             // 100
          callback = callback || function(event) {                                                                     // 101
            module.verbose('Executing animation callback');                                                            // 102
            if(event !== undefined) {                                                                                  // 103
              event.stopPropagation();                                                                                 // 104
            }                                                                                                          // 105
            module.reset();                                                                                            // 106
            module.set.active();                                                                                       // 107
          };                                                                                                           // 108
          $.proxy(settings.beforeChange, $nextSide[0])();                                                              // 109
          if(module.get.transitionEvent()) {                                                                           // 110
            module.verbose('Starting CSS animation');                                                                  // 111
            $module                                                                                                    // 112
              .addClass(className.animating)                                                                           // 113
            ;                                                                                                          // 114
            module.repaint();                                                                                          // 115
            $module                                                                                                    // 116
              .addClass(className.animating)                                                                           // 117
            ;                                                                                                          // 118
            $activeSide                                                                                                // 119
              .addClass(className.hidden)                                                                              // 120
            ;                                                                                                          // 121
            $sides                                                                                                     // 122
              .css(propertyObject)                                                                                     // 123
              .one(module.get.transitionEvent(), callback)                                                             // 124
            ;                                                                                                          // 125
            module.set.duration(settings.duration);                                                                    // 126
          }                                                                                                            // 127
          else {                                                                                                       // 128
            callback();                                                                                                // 129
          }                                                                                                            // 130
        },                                                                                                             // 131
                                                                                                                       // 132
        queue: function(method) {                                                                                      // 133
          module.debug('Queueing animation of', method);                                                               // 134
          $sides                                                                                                       // 135
            .one(module.get.transitionEvent(), function() {                                                            // 136
              module.debug('Executing queued animation');                                                              // 137
              setTimeout(function(){                                                                                   // 138
                $module.shape(method);                                                                                 // 139
              }, 0);                                                                                                   // 140
            })                                                                                                         // 141
          ;                                                                                                            // 142
        },                                                                                                             // 143
                                                                                                                       // 144
        reset: function() {                                                                                            // 145
          module.verbose('Animating states reset');                                                                    // 146
          $module                                                                                                      // 147
            .removeClass(className.animating)                                                                          // 148
            .attr('style', '')                                                                                         // 149
            .removeAttr('style')                                                                                       // 150
          ;                                                                                                            // 151
          // removeAttr style does not consistently work in safari                                                     // 152
          $sides                                                                                                       // 153
            .attr('style', '')                                                                                         // 154
            .removeAttr('style')                                                                                       // 155
          ;                                                                                                            // 156
          $side                                                                                                        // 157
            .attr('style', '')                                                                                         // 158
            .removeAttr('style')                                                                                       // 159
            .removeClass(className.hidden)                                                                             // 160
          ;                                                                                                            // 161
          $nextSide                                                                                                    // 162
            .removeClass(className.animating)                                                                          // 163
            .attr('style', '')                                                                                         // 164
            .removeAttr('style')                                                                                       // 165
          ;                                                                                                            // 166
        },                                                                                                             // 167
                                                                                                                       // 168
        is: {                                                                                                          // 169
          animating: function() {                                                                                      // 170
            return $module.hasClass(className.animating);                                                              // 171
          }                                                                                                            // 172
        },                                                                                                             // 173
                                                                                                                       // 174
        set: {                                                                                                         // 175
                                                                                                                       // 176
          defaultSide: function() {                                                                                    // 177
            $activeSide = $module.find('.' + settings.className.active);                                               // 178
            $nextSide   = ( $activeSide.next(selector.side).size() > 0 )                                               // 179
              ? $activeSide.next(selector.side)                                                                        // 180
              : $module.find(selector.side).first()                                                                    // 181
            ;                                                                                                          // 182
            nextSelector = false;                                                                                      // 183
            module.verbose('Active side set to', $activeSide);                                                         // 184
            module.verbose('Next side set to', $nextSide);                                                             // 185
          },                                                                                                           // 186
                                                                                                                       // 187
          duration: function(duration) {                                                                               // 188
            duration = duration || settings.duration;                                                                  // 189
            duration = (typeof duration == 'number')                                                                   // 190
              ? duration + 'ms'                                                                                        // 191
              : duration                                                                                               // 192
            ;                                                                                                          // 193
            module.verbose('Setting animation duration', duration);                                                    // 194
            $sides.add($side)                                                                                          // 195
              .css({                                                                                                   // 196
                '-webkit-transition-duration': duration,                                                               // 197
                '-moz-transition-duration': duration,                                                                  // 198
                '-ms-transition-duration': duration,                                                                   // 199
                '-o-transition-duration': duration,                                                                    // 200
                'transition-duration': duration                                                                        // 201
              })                                                                                                       // 202
            ;                                                                                                          // 203
          },                                                                                                           // 204
                                                                                                                       // 205
          stageSize: function() {                                                                                      // 206
            var                                                                                                        // 207
              $clone      = $module.clone().addClass(className.loading),                                               // 208
              $activeSide = $clone.find('.' + settings.className.active),                                              // 209
              $nextSide   = (nextSelector)                                                                             // 210
                ? $clone.find(nextSelector)                                                                            // 211
                : ( $activeSide.next(selector.side).size() > 0 )                                                       // 212
                  ? $activeSide.next(selector.side)                                                                    // 213
                  : $clone.find(selector.side).first(),                                                                // 214
              newSize = {}                                                                                             // 215
            ;                                                                                                          // 216
            $activeSide.removeClass(className.active);                                                                 // 217
            $nextSide.addClass(className.active);                                                                      // 218
            $clone.prependTo($body);                                                                                   // 219
            newSize = {                                                                                                // 220
              width  : $nextSide.outerWidth(),                                                                         // 221
              height : $nextSide.outerHeight()                                                                         // 222
            };                                                                                                         // 223
            $clone.remove();                                                                                           // 224
            $module                                                                                                    // 225
              .css(newSize)                                                                                            // 226
            ;                                                                                                          // 227
            module.verbose('Resizing stage to fit new content', newSize);                                              // 228
          },                                                                                                           // 229
                                                                                                                       // 230
          nextSide: function(selector) {                                                                               // 231
            nextSelector = selector;                                                                                   // 232
            $nextSide = $module.find(selector);                                                                        // 233
            if($nextSide.size() === 0) {                                                                               // 234
              module.error(error.side);                                                                                // 235
            }                                                                                                          // 236
            module.verbose('Next side manually set to', $nextSide);                                                    // 237
          },                                                                                                           // 238
                                                                                                                       // 239
          active: function() {                                                                                         // 240
            module.verbose('Setting new side to active', $nextSide);                                                   // 241
            $side                                                                                                      // 242
              .removeClass(className.active)                                                                           // 243
            ;                                                                                                          // 244
            $nextSide                                                                                                  // 245
              .addClass(className.active)                                                                              // 246
            ;                                                                                                          // 247
            $.proxy(settings.onChange, $nextSide[0])();                                                                // 248
            module.set.defaultSide();                                                                                  // 249
          }                                                                                                            // 250
        },                                                                                                             // 251
                                                                                                                       // 252
        flip: {                                                                                                        // 253
                                                                                                                       // 254
          up: function() {                                                                                             // 255
            module.debug('Flipping up', $nextSide);                                                                    // 256
            if( !module.is.animating() ) {                                                                             // 257
              module.set.stageSize();                                                                                  // 258
              module.stage.above();                                                                                    // 259
              module.animate( module.get.transform.up() );                                                             // 260
            }                                                                                                          // 261
            else {                                                                                                     // 262
              module.queue('flip up');                                                                                 // 263
            }                                                                                                          // 264
          },                                                                                                           // 265
                                                                                                                       // 266
          down: function() {                                                                                           // 267
            module.debug('Flipping down', $nextSide);                                                                  // 268
            if( !module.is.animating() ) {                                                                             // 269
              module.set.stageSize();                                                                                  // 270
              module.stage.below();                                                                                    // 271
              module.animate( module.get.transform.down() );                                                           // 272
            }                                                                                                          // 273
            else {                                                                                                     // 274
              module.queue('flip down');                                                                               // 275
            }                                                                                                          // 276
          },                                                                                                           // 277
                                                                                                                       // 278
          left: function() {                                                                                           // 279
            module.debug('Flipping left', $nextSide);                                                                  // 280
            if( !module.is.animating() ) {                                                                             // 281
              module.set.stageSize();                                                                                  // 282
              module.stage.left();                                                                                     // 283
              module.animate(module.get.transform.left() );                                                            // 284
            }                                                                                                          // 285
            else {                                                                                                     // 286
              module.queue('flip left');                                                                               // 287
            }                                                                                                          // 288
          },                                                                                                           // 289
                                                                                                                       // 290
          right: function() {                                                                                          // 291
            module.debug('Flipping right', $nextSide);                                                                 // 292
            if( !module.is.animating() ) {                                                                             // 293
              module.set.stageSize();                                                                                  // 294
              module.stage.right();                                                                                    // 295
              module.animate(module.get.transform.right() );                                                           // 296
            }                                                                                                          // 297
            else {                                                                                                     // 298
              module.queue('flip right');                                                                              // 299
            }                                                                                                          // 300
          },                                                                                                           // 301
                                                                                                                       // 302
          over: function() {                                                                                           // 303
            module.debug('Flipping over', $nextSide);                                                                  // 304
            if( !module.is.animating() ) {                                                                             // 305
              module.set.stageSize();                                                                                  // 306
              module.stage.behind();                                                                                   // 307
              module.animate(module.get.transform.over() );                                                            // 308
            }                                                                                                          // 309
            else {                                                                                                     // 310
              module.queue('flip over');                                                                               // 311
            }                                                                                                          // 312
          },                                                                                                           // 313
                                                                                                                       // 314
          back: function() {                                                                                           // 315
            module.debug('Flipping back', $nextSide);                                                                  // 316
            if( !module.is.animating() ) {                                                                             // 317
              module.set.stageSize();                                                                                  // 318
              module.stage.behind();                                                                                   // 319
              module.animate(module.get.transform.back() );                                                            // 320
            }                                                                                                          // 321
            else {                                                                                                     // 322
              module.queue('flip back');                                                                               // 323
            }                                                                                                          // 324
          }                                                                                                            // 325
                                                                                                                       // 326
        },                                                                                                             // 327
                                                                                                                       // 328
        get: {                                                                                                         // 329
                                                                                                                       // 330
          transform: {                                                                                                 // 331
            up: function() {                                                                                           // 332
              var                                                                                                      // 333
                translate = {                                                                                          // 334
                  y: -(($activeSide.outerHeight() - $nextSide.outerHeight()) / 2),                                     // 335
                  z: -($activeSide.outerHeight() / 2)                                                                  // 336
                }                                                                                                      // 337
              ;                                                                                                        // 338
              return {                                                                                                 // 339
                transform: 'translateY(' + translate.y + 'px) translateZ('+ translate.z + 'px) rotateX(-90deg)'        // 340
              };                                                                                                       // 341
            },                                                                                                         // 342
                                                                                                                       // 343
            down: function() {                                                                                         // 344
              var                                                                                                      // 345
                translate = {                                                                                          // 346
                  y: -(($activeSide.outerHeight() - $nextSide.outerHeight()) / 2),                                     // 347
                  z: -($activeSide.outerHeight() / 2)                                                                  // 348
                }                                                                                                      // 349
              ;                                                                                                        // 350
              return {                                                                                                 // 351
                transform: 'translateY(' + translate.y + 'px) translateZ('+ translate.z + 'px) rotateX(90deg)'         // 352
              };                                                                                                       // 353
            },                                                                                                         // 354
                                                                                                                       // 355
            left: function() {                                                                                         // 356
              var                                                                                                      // 357
                translate = {                                                                                          // 358
                  x : -(($activeSide.outerWidth() - $nextSide.outerWidth()) / 2),                                      // 359
                  z : -($activeSide.outerWidth() / 2)                                                                  // 360
                }                                                                                                      // 361
              ;                                                                                                        // 362
              return {                                                                                                 // 363
                transform: 'translateX(' + translate.x + 'px) translateZ(' + translate.z + 'px) rotateY(90deg)'        // 364
              };                                                                                                       // 365
            },                                                                                                         // 366
                                                                                                                       // 367
            right: function() {                                                                                        // 368
              var                                                                                                      // 369
                translate = {                                                                                          // 370
                  x : -(($activeSide.outerWidth() - $nextSide.outerWidth()) / 2),                                      // 371
                  z : -($activeSide.outerWidth() / 2)                                                                  // 372
                }                                                                                                      // 373
              ;                                                                                                        // 374
              return {                                                                                                 // 375
                transform: 'translateX(' + translate.x + 'px) translateZ(' + translate.z + 'px) rotateY(-90deg)'       // 376
              };                                                                                                       // 377
            },                                                                                                         // 378
                                                                                                                       // 379
            over: function() {                                                                                         // 380
              var                                                                                                      // 381
                translate = {                                                                                          // 382
                  x : -(($activeSide.outerWidth() - $nextSide.outerWidth()) / 2)                                       // 383
                }                                                                                                      // 384
              ;                                                                                                        // 385
              return {                                                                                                 // 386
                transform: 'translateX(' + translate.x + 'px) rotateY(180deg)'                                         // 387
              };                                                                                                       // 388
            },                                                                                                         // 389
                                                                                                                       // 390
            back: function() {                                                                                         // 391
              var                                                                                                      // 392
                translate = {                                                                                          // 393
                  x : -(($activeSide.outerWidth() - $nextSide.outerWidth()) / 2)                                       // 394
                }                                                                                                      // 395
              ;                                                                                                        // 396
              return {                                                                                                 // 397
                transform: 'translateX(' + translate.x + 'px) rotateY(-180deg)'                                        // 398
              };                                                                                                       // 399
            }                                                                                                          // 400
          },                                                                                                           // 401
                                                                                                                       // 402
          transitionEvent: function() {                                                                                // 403
            var                                                                                                        // 404
              element     = document.createElement('element'),                                                         // 405
              transitions = {                                                                                          // 406
                'transition'       :'transitionend',                                                                   // 407
                'OTransition'      :'oTransitionEnd',                                                                  // 408
                'MozTransition'    :'transitionend',                                                                   // 409
                'WebkitTransition' :'webkitTransitionEnd'                                                              // 410
              },                                                                                                       // 411
              transition                                                                                               // 412
            ;                                                                                                          // 413
            for(transition in transitions){                                                                            // 414
              if( element.style[transition] !== undefined ){                                                           // 415
                return transitions[transition];                                                                        // 416
              }                                                                                                        // 417
            }                                                                                                          // 418
          },                                                                                                           // 419
                                                                                                                       // 420
          nextSide: function() {                                                                                       // 421
            return ( $activeSide.next(selector.side).size() > 0 )                                                      // 422
              ? $activeSide.next(selector.side)                                                                        // 423
              : $module.find(selector.side).first()                                                                    // 424
            ;                                                                                                          // 425
          }                                                                                                            // 426
                                                                                                                       // 427
        },                                                                                                             // 428
                                                                                                                       // 429
        stage: {                                                                                                       // 430
                                                                                                                       // 431
          above: function() {                                                                                          // 432
            var                                                                                                        // 433
              box = {                                                                                                  // 434
                origin : (($activeSide.outerHeight() - $nextSide.outerHeight()) / 2),                                  // 435
                depth  : {                                                                                             // 436
                  active : ($nextSide.outerHeight() / 2),                                                              // 437
                  next   : ($activeSide.outerHeight() / 2)                                                             // 438
                }                                                                                                      // 439
              }                                                                                                        // 440
            ;                                                                                                          // 441
            module.verbose('Setting the initial animation position as above', $nextSide, box);                         // 442
            $activeSide                                                                                                // 443
              .css({                                                                                                   // 444
                'transform' : 'rotateY(0deg) translateZ(' + box.depth.active + 'px)'                                   // 445
              })                                                                                                       // 446
            ;                                                                                                          // 447
            $nextSide                                                                                                  // 448
              .addClass(className.animating)                                                                           // 449
              .css({                                                                                                   // 450
                'display'   : 'block',                                                                                 // 451
                'top'       : box.origin + 'px',                                                                       // 452
                'transform' : 'rotateX(90deg) translateZ(' + box.depth.next + 'px)'                                    // 453
              })                                                                                                       // 454
            ;                                                                                                          // 455
          },                                                                                                           // 456
                                                                                                                       // 457
          below: function() {                                                                                          // 458
            var                                                                                                        // 459
              box = {                                                                                                  // 460
                origin : (($activeSide.outerHeight() - $nextSide.outerHeight()) / 2),                                  // 461
                depth  : {                                                                                             // 462
                  active : ($nextSide.outerHeight() / 2),                                                              // 463
                  next   : ($activeSide.outerHeight() / 2)                                                             // 464
                }                                                                                                      // 465
              }                                                                                                        // 466
            ;                                                                                                          // 467
            module.verbose('Setting the initial animation position as below', $nextSide, box);                         // 468
            $activeSide                                                                                                // 469
              .css({                                                                                                   // 470
                'transform' : 'rotateY(0deg) translateZ(' + box.depth.active + 'px)'                                   // 471
              })                                                                                                       // 472
            ;                                                                                                          // 473
            $nextSide                                                                                                  // 474
              .addClass(className.animating)                                                                           // 475
              .css({                                                                                                   // 476
                'display'   : 'block',                                                                                 // 477
                'top'       : box.origin + 'px',                                                                       // 478
                'transform' : 'rotateX(-90deg) translateZ(' + box.depth.next + 'px)'                                   // 479
              })                                                                                                       // 480
            ;                                                                                                          // 481
          },                                                                                                           // 482
                                                                                                                       // 483
          left: function() {                                                                                           // 484
            var                                                                                                        // 485
              box = {                                                                                                  // 486
                origin : ( ( $activeSide.outerWidth() - $nextSide.outerWidth() ) / 2),                                 // 487
                depth  : {                                                                                             // 488
                  active : ($nextSide.outerWidth() / 2),                                                               // 489
                  next   : ($activeSide.outerWidth() / 2)                                                              // 490
                }                                                                                                      // 491
              }                                                                                                        // 492
            ;                                                                                                          // 493
            module.verbose('Setting the initial animation position as left', $nextSide, box);                          // 494
            $activeSide                                                                                                // 495
              .css({                                                                                                   // 496
                'transform' : 'rotateY(0deg) translateZ(' + box.depth.active + 'px)'                                   // 497
              })                                                                                                       // 498
            ;                                                                                                          // 499
            $nextSide                                                                                                  // 500
              .addClass(className.animating)                                                                           // 501
              .css({                                                                                                   // 502
                'display'   : 'block',                                                                                 // 503
                'left'      : box.origin + 'px',                                                                       // 504
                'transform' : 'rotateY(-90deg) translateZ(' + box.depth.next + 'px)'                                   // 505
              })                                                                                                       // 506
            ;                                                                                                          // 507
          },                                                                                                           // 508
                                                                                                                       // 509
          right: function() {                                                                                          // 510
            var                                                                                                        // 511
              box = {                                                                                                  // 512
                origin : ( ( $activeSide.outerWidth() - $nextSide.outerWidth() ) / 2),                                 // 513
                depth  : {                                                                                             // 514
                  active : ($nextSide.outerWidth() / 2),                                                               // 515
                  next   : ($activeSide.outerWidth() / 2)                                                              // 516
                }                                                                                                      // 517
              }                                                                                                        // 518
            ;                                                                                                          // 519
            module.verbose('Setting the initial animation position as left', $nextSide, box);                          // 520
            $activeSide                                                                                                // 521
              .css({                                                                                                   // 522
                'transform' : 'rotateY(0deg) translateZ(' + box.depth.active + 'px)'                                   // 523
              })                                                                                                       // 524
            ;                                                                                                          // 525
            $nextSide                                                                                                  // 526
              .addClass(className.animating)                                                                           // 527
              .css({                                                                                                   // 528
                'display'   : 'block',                                                                                 // 529
                'left'      : box.origin + 'px',                                                                       // 530
                'transform' : 'rotateY(90deg) translateZ(' + box.depth.next + 'px)'                                    // 531
              })                                                                                                       // 532
            ;                                                                                                          // 533
          },                                                                                                           // 534
                                                                                                                       // 535
          behind: function() {                                                                                         // 536
            var                                                                                                        // 537
              box = {                                                                                                  // 538
                origin : ( ( $activeSide.outerWidth() - $nextSide.outerWidth() ) / 2),                                 // 539
                depth  : {                                                                                             // 540
                  active : ($nextSide.outerWidth() / 2),                                                               // 541
                  next   : ($activeSide.outerWidth() / 2)                                                              // 542
                }                                                                                                      // 543
              }                                                                                                        // 544
            ;                                                                                                          // 545
            module.verbose('Setting the initial animation position as behind', $nextSide, box);                        // 546
            $activeSide                                                                                                // 547
              .css({                                                                                                   // 548
                'transform' : 'rotateY(0deg)'                                                                          // 549
              })                                                                                                       // 550
            ;                                                                                                          // 551
            $nextSide                                                                                                  // 552
              .addClass(className.animating)                                                                           // 553
              .css({                                                                                                   // 554
                'display'   : 'block',                                                                                 // 555
                'left'      : box.origin + 'px',                                                                       // 556
                'transform' : 'rotateY(-180deg)'                                                                       // 557
              })                                                                                                       // 558
            ;                                                                                                          // 559
          }                                                                                                            // 560
        },                                                                                                             // 561
        setting: function(name, value) {                                                                               // 562
          if( $.isPlainObject(name) ) {                                                                                // 563
            $.extend(true, settings, name);                                                                            // 564
          }                                                                                                            // 565
          else if(value !== undefined) {                                                                               // 566
            settings[name] = value;                                                                                    // 567
          }                                                                                                            // 568
          else {                                                                                                       // 569
            return settings[name];                                                                                     // 570
          }                                                                                                            // 571
        },                                                                                                             // 572
        internal: function(name, value) {                                                                              // 573
          if( $.isPlainObject(name) ) {                                                                                // 574
            $.extend(true, module, name);                                                                              // 575
          }                                                                                                            // 576
          else if(value !== undefined) {                                                                               // 577
            module[name] = value;                                                                                      // 578
          }                                                                                                            // 579
          else {                                                                                                       // 580
            return module[name];                                                                                       // 581
          }                                                                                                            // 582
        },                                                                                                             // 583
        debug: function() {                                                                                            // 584
          if(settings.debug) {                                                                                         // 585
            if(settings.performance) {                                                                                 // 586
              module.performance.log(arguments);                                                                       // 587
            }                                                                                                          // 588
            else {                                                                                                     // 589
              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');                 // 590
              module.debug.apply(console, arguments);                                                                  // 591
            }                                                                                                          // 592
          }                                                                                                            // 593
        },                                                                                                             // 594
        verbose: function() {                                                                                          // 595
          if(settings.verbose && settings.debug) {                                                                     // 596
            if(settings.performance) {                                                                                 // 597
              module.performance.log(arguments);                                                                       // 598
            }                                                                                                          // 599
            else {                                                                                                     // 600
              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');               // 601
              module.verbose.apply(console, arguments);                                                                // 602
            }                                                                                                          // 603
          }                                                                                                            // 604
        },                                                                                                             // 605
        error: function() {                                                                                            // 606
          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');                    // 607
          module.error.apply(console, arguments);                                                                      // 608
        },                                                                                                             // 609
        performance: {                                                                                                 // 610
          log: function(message) {                                                                                     // 611
            var                                                                                                        // 612
              currentTime,                                                                                             // 613
              executionTime,                                                                                           // 614
              previousTime                                                                                             // 615
            ;                                                                                                          // 616
            if(settings.performance) {                                                                                 // 617
              currentTime   = new Date().getTime();                                                                    // 618
              previousTime  = time || currentTime;                                                                     // 619
              executionTime = currentTime - previousTime;                                                              // 620
              time          = currentTime;                                                                             // 621
              performance.push({                                                                                       // 622
                'Element'        : element,                                                                            // 623
                'Name'           : message[0],                                                                         // 624
                'Arguments'      : [].slice.call(message, 1) || '',                                                    // 625
                'Execution Time' : executionTime                                                                       // 626
              });                                                                                                      // 627
            }                                                                                                          // 628
            clearTimeout(module.performance.timer);                                                                    // 629
            module.performance.timer = setTimeout(module.performance.display, 100);                                    // 630
          },                                                                                                           // 631
          display: function() {                                                                                        // 632
            var                                                                                                        // 633
              title = settings.name + ':',                                                                             // 634
              totalTime = 0                                                                                            // 635
            ;                                                                                                          // 636
            time = false;                                                                                              // 637
            clearTimeout(module.performance.timer);                                                                    // 638
            $.each(performance, function(index, data) {                                                                // 639
              totalTime += data['Execution Time'];                                                                     // 640
            });                                                                                                        // 641
            title += ' ' + totalTime + 'ms';                                                                           // 642
            if(moduleSelector) {                                                                                       // 643
              title += ' \'' + moduleSelector + '\'';                                                                  // 644
            }                                                                                                          // 645
            if($allModules.size() > 1) {                                                                               // 646
              title += ' ' + '(' + $allModules.size() + ')';                                                           // 647
            }                                                                                                          // 648
            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {              // 649
              console.groupCollapsed(title);                                                                           // 650
              if(console.table) {                                                                                      // 651
                console.table(performance);                                                                            // 652
              }                                                                                                        // 653
              else {                                                                                                   // 654
                $.each(performance, function(index, data) {                                                            // 655
                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');                                      // 656
                });                                                                                                    // 657
              }                                                                                                        // 658
              console.groupEnd();                                                                                      // 659
            }                                                                                                          // 660
            performance = [];                                                                                          // 661
          }                                                                                                            // 662
        },                                                                                                             // 663
        invoke: function(query, passedArguments, context) {                                                            // 664
          var                                                                                                          // 665
            maxDepth,                                                                                                  // 666
            found,                                                                                                     // 667
            response                                                                                                   // 668
          ;                                                                                                            // 669
          passedArguments = passedArguments || queryArguments;                                                         // 670
          context         = element         || context;                                                                // 671
          if(typeof query == 'string' && instance !== undefined) {                                                     // 672
            query    = query.split(/[\. ]/);                                                                           // 673
            maxDepth = query.length - 1;                                                                               // 674
            $.each(query, function(depth, value) {                                                                     // 675
              var camelCaseValue = (depth != maxDepth)                                                                 // 676
                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)                         // 677
                : query                                                                                                // 678
              ;                                                                                                        // 679
              if( $.isPlainObject( instance[camelCaseValue] ) && (depth != maxDepth) ) {                               // 680
                instance = instance[camelCaseValue];                                                                   // 681
              }                                                                                                        // 682
              else if( instance[camelCaseValue] !== undefined ) {                                                      // 683
                found = instance[camelCaseValue];                                                                      // 684
                return false;                                                                                          // 685
              }                                                                                                        // 686
              else if( $.isPlainObject( instance[value] ) && (depth != maxDepth) ) {                                   // 687
                instance = instance[value];                                                                            // 688
              }                                                                                                        // 689
              else if( instance[value] !== undefined ) {                                                               // 690
                found = instance[value];                                                                               // 691
                return false;                                                                                          // 692
              }                                                                                                        // 693
              else {                                                                                                   // 694
                module.error(error.method, query);                                                                     // 695
                return false;                                                                                          // 696
              }                                                                                                        // 697
            });                                                                                                        // 698
          }                                                                                                            // 699
          if ( $.isFunction( found ) ) {                                                                               // 700
            response = found.apply(context, passedArguments);                                                          // 701
          }                                                                                                            // 702
          else if(found !== undefined) {                                                                               // 703
            response = found;                                                                                          // 704
          }                                                                                                            // 705
          if($.isArray(returnedValue)) {                                                                               // 706
            returnedValue.push(response);                                                                              // 707
          }                                                                                                            // 708
          else if(returnedValue !== undefined) {                                                                       // 709
            returnedValue = [returnedValue, response];                                                                 // 710
          }                                                                                                            // 711
          else if(response !== undefined) {                                                                            // 712
            returnedValue = response;                                                                                  // 713
          }                                                                                                            // 714
          return found;                                                                                                // 715
        }                                                                                                              // 716
      };                                                                                                               // 717
                                                                                                                       // 718
      if(methodInvoked) {                                                                                              // 719
        if(instance === undefined) {                                                                                   // 720
          module.initialize();                                                                                         // 721
        }                                                                                                              // 722
        module.invoke(query);                                                                                          // 723
      }                                                                                                                // 724
      else {                                                                                                           // 725
        if(instance !== undefined) {                                                                                   // 726
          module.destroy();                                                                                            // 727
        }                                                                                                              // 728
        module.initialize();                                                                                           // 729
      }                                                                                                                // 730
    })                                                                                                                 // 731
  ;                                                                                                                    // 732
                                                                                                                       // 733
  return (returnedValue !== undefined)                                                                                 // 734
    ? returnedValue                                                                                                    // 735
    : this                                                                                                             // 736
  ;                                                                                                                    // 737
};                                                                                                                     // 738
                                                                                                                       // 739
$.fn.shape.settings = {                                                                                                // 740
                                                                                                                       // 741
  // module info                                                                                                       // 742
  name : 'Shape',                                                                                                      // 743
                                                                                                                       // 744
  // debug content outputted to console                                                                                // 745
  debug      : true,                                                                                                   // 746
                                                                                                                       // 747
  // verbose debug output                                                                                              // 748
  verbose    : true,                                                                                                   // 749
                                                                                                                       // 750
  // performance data output                                                                                           // 751
  performance: true,                                                                                                   // 752
                                                                                                                       // 753
  // event namespace                                                                                                   // 754
  namespace  : 'shape',                                                                                                // 755
                                                                                                                       // 756
  // callback occurs on side change                                                                                    // 757
  beforeChange : function() {},                                                                                        // 758
  onChange     : function() {},                                                                                        // 759
                                                                                                                       // 760
  // animation duration                                                                                                // 761
  duration   : 700,                                                                                                    // 762
                                                                                                                       // 763
  // possible errors                                                                                                   // 764
  error: {                                                                                                             // 765
    side   : 'You tried to switch to a side that does not exist.',                                                     // 766
    method : 'The method you called is not defined'                                                                    // 767
  },                                                                                                                   // 768
                                                                                                                       // 769
  // classnames used                                                                                                   // 770
  className   : {                                                                                                      // 771
    animating : 'animating',                                                                                           // 772
    hidden    : 'hidden',                                                                                              // 773
    loading   : 'loading',                                                                                             // 774
    active    : 'active'                                                                                               // 775
  },                                                                                                                   // 776
                                                                                                                       // 777
  // selectors used                                                                                                    // 778
  selector    : {                                                                                                      // 779
    sides : '.sides',                                                                                                  // 780
    side  : '.side'                                                                                                    // 781
  }                                                                                                                    // 782
                                                                                                                       // 783
};                                                                                                                     // 784
                                                                                                                       // 785
                                                                                                                       // 786
})( jQuery, window , document );                                                                                       // 787
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}).call(this);






(function () {

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// packages/semantic-ui/lib/semantic-ui/build/uncompressed/modules/sidebar.js                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/*                                                                                                                     // 1
 * # Semantic - Sidebar                                                                                                // 2
 * http://github.com/jlukic/semantic-ui/                                                                               // 3
 *                                                                                                                     // 4
 *                                                                                                                     // 5
 * Copyright 2013 Contributors                                                                                         // 6
 * Released under the MIT license                                                                                      // 7
 * http://opensource.org/licenses/MIT                                                                                  // 8
 *                                                                                                                     // 9
 */                                                                                                                    // 10
                                                                                                                       // 11
;(function ( $, window, document, undefined ) {                                                                        // 12
                                                                                                                       // 13
$.fn.sidebar = function(parameters) {                                                                                  // 14
  var                                                                                                                  // 15
    $allModules    = $(this),                                                                                          // 16
    $body          = $('body'),                                                                                        // 17
    $head          = $('head'),                                                                                        // 18
                                                                                                                       // 19
    moduleSelector = $allModules.selector || '',                                                                       // 20
                                                                                                                       // 21
    time           = new Date().getTime(),                                                                             // 22
    performance    = [],                                                                                               // 23
                                                                                                                       // 24
    query          = arguments[0],                                                                                     // 25
    methodInvoked  = (typeof query == 'string'),                                                                       // 26
    queryArguments = [].slice.call(arguments, 1),                                                                      // 27
    returnedValue                                                                                                      // 28
  ;                                                                                                                    // 29
                                                                                                                       // 30
  $allModules                                                                                                          // 31
    .each(function() {                                                                                                 // 32
      var                                                                                                              // 33
        settings        = ( $.isPlainObject(parameters) )                                                              // 34
          ? $.extend(true, {}, $.fn.sidebar.settings, parameters)                                                      // 35
          : $.extend({}, $.fn.sidebar.settings),                                                                       // 36
                                                                                                                       // 37
        selector        = settings.selector,                                                                           // 38
        className       = settings.className,                                                                          // 39
        namespace       = settings.namespace,                                                                          // 40
        error           = settings.error,                                                                              // 41
                                                                                                                       // 42
        eventNamespace  = '.' + namespace,                                                                             // 43
        moduleNamespace = 'module-' + namespace,                                                                       // 44
                                                                                                                       // 45
        $module         = $(this),                                                                                     // 46
        $style          = $('style[title=' + namespace + ']'),                                                         // 47
                                                                                                                       // 48
        element         = this,                                                                                        // 49
        instance        = $module.data(moduleNamespace),                                                               // 50
        module                                                                                                         // 51
      ;                                                                                                                // 52
                                                                                                                       // 53
      module      = {                                                                                                  // 54
                                                                                                                       // 55
        initialize: function() {                                                                                       // 56
          module.debug('Initializing sidebar', $module);                                                               // 57
          module.instantiate();                                                                                        // 58
        },                                                                                                             // 59
                                                                                                                       // 60
        instantiate: function() {                                                                                      // 61
          module.verbose('Storing instance of module', module);                                                        // 62
          instance = module;                                                                                           // 63
          $module                                                                                                      // 64
            .data(moduleNamespace, module)                                                                             // 65
          ;                                                                                                            // 66
        },                                                                                                             // 67
                                                                                                                       // 68
        destroy: function() {                                                                                          // 69
          module.verbose('Destroying previous module for', $module);                                                   // 70
          $module                                                                                                      // 71
            .off(eventNamespace)                                                                                       // 72
            .removeData(moduleNamespace)                                                                               // 73
          ;                                                                                                            // 74
        },                                                                                                             // 75
                                                                                                                       // 76
        refresh: function() {                                                                                          // 77
          module.verbose('Refreshing selector cache');                                                                 // 78
          $style  = $('style[title=' + namespace + ']');                                                               // 79
        },                                                                                                             // 80
                                                                                                                       // 81
        attachEvents: function(selector, event) {                                                                      // 82
          var                                                                                                          // 83
            $toggle = $(selector)                                                                                      // 84
          ;                                                                                                            // 85
          event = $.isFunction(module[event])                                                                          // 86
            ? module[event]                                                                                            // 87
            : module.toggle                                                                                            // 88
          ;                                                                                                            // 89
          if($toggle.size() > 0) {                                                                                     // 90
            module.debug('Attaching sidebar events to element', selector, event);                                      // 91
            $toggle                                                                                                    // 92
              .off(eventNamespace)                                                                                     // 93
              .on('click' + eventNamespace, event)                                                                     // 94
            ;                                                                                                          // 95
          }                                                                                                            // 96
          else {                                                                                                       // 97
            module.error(error.notFound);                                                                              // 98
          }                                                                                                            // 99
        },                                                                                                             // 100
                                                                                                                       // 101
        show: function(callback) {                                                                                     // 102
          callback = $.isFunction(callback)                                                                            // 103
            ? callback                                                                                                 // 104
            : function(){}                                                                                             // 105
          ;                                                                                                            // 106
          module.debug('Showing sidebar', callback);                                                                   // 107
          if(module.is.closed()) {                                                                                     // 108
            if(!settings.overlay) {                                                                                    // 109
              if(settings.exclusive) {                                                                                 // 110
                module.hideAll();                                                                                      // 111
              }                                                                                                        // 112
              module.pushPage();                                                                                       // 113
            }                                                                                                          // 114
            module.set.active();                                                                                       // 115
            callback();                                                                                                // 116
            $.proxy(settings.onChange, element)();                                                                     // 117
            $.proxy(settings.onShow, element)();                                                                       // 118
          }                                                                                                            // 119
          else {                                                                                                       // 120
            module.debug('Sidebar is already visible');                                                                // 121
          }                                                                                                            // 122
        },                                                                                                             // 123
                                                                                                                       // 124
        hide: function(callback) {                                                                                     // 125
          callback = $.isFunction(callback)                                                                            // 126
            ? callback                                                                                                 // 127
            : function(){}                                                                                             // 128
          ;                                                                                                            // 129
          module.debug('Hiding sidebar', callback);                                                                    // 130
          if(module.is.open()) {                                                                                       // 131
            if(!settings.overlay) {                                                                                    // 132
              module.pullPage();                                                                                       // 133
              module.remove.pushed();                                                                                  // 134
            }                                                                                                          // 135
            module.remove.active();                                                                                    // 136
            callback();                                                                                                // 137
            $.proxy(settings.onChange, element)();                                                                     // 138
            $.proxy(settings.onHide, element)();                                                                       // 139
          }                                                                                                            // 140
        },                                                                                                             // 141
                                                                                                                       // 142
        hideAll: function() {                                                                                          // 143
          $(selector.sidebar)                                                                                          // 144
            .filter(':visible')                                                                                        // 145
              .sidebar('hide')                                                                                         // 146
          ;                                                                                                            // 147
        },                                                                                                             // 148
                                                                                                                       // 149
        toggle: function() {                                                                                           // 150
          if(module.is.closed()) {                                                                                     // 151
            module.show();                                                                                             // 152
          }                                                                                                            // 153
          else {                                                                                                       // 154
            module.hide();                                                                                             // 155
          }                                                                                                            // 156
        },                                                                                                             // 157
                                                                                                                       // 158
        pushPage: function() {                                                                                         // 159
          var                                                                                                          // 160
            direction = module.get.direction(),                                                                        // 161
            distance  = (module.is.vertical())                                                                         // 162
              ? $module.outerHeight()                                                                                  // 163
              : $module.outerWidth()                                                                                   // 164
          ;                                                                                                            // 165
          if(settings.useCSS) {                                                                                        // 166
            module.debug('Using CSS to animate body');                                                                 // 167
            module.add.bodyCSS(direction, distance);                                                                   // 168
            module.set.pushed();                                                                                       // 169
          }                                                                                                            // 170
          else {                                                                                                       // 171
            module.animatePage(direction, distance, module.set.pushed);                                                // 172
          }                                                                                                            // 173
        },                                                                                                             // 174
                                                                                                                       // 175
        pullPage: function() {                                                                                         // 176
          var                                                                                                          // 177
            direction = module.get.direction()                                                                         // 178
          ;                                                                                                            // 179
          if(settings.useCSS) {                                                                                        // 180
            module.debug('Resetting body position css');                                                               // 181
            module.remove.bodyCSS();                                                                                   // 182
          }                                                                                                            // 183
          else {                                                                                                       // 184
            module.debug('Resetting body position using javascript');                                                  // 185
            module.animatePage(direction, 0);                                                                          // 186
          }                                                                                                            // 187
          module.remove.pushed();                                                                                      // 188
        },                                                                                                             // 189
                                                                                                                       // 190
        animatePage: function(direction, distance) {                                                                   // 191
          var                                                                                                          // 192
            animateSettings = {}                                                                                       // 193
          ;                                                                                                            // 194
          animateSettings['padding-' + direction] = distance;                                                          // 195
          module.debug('Using javascript to animate body', animateSettings);                                           // 196
          $body                                                                                                        // 197
            .animate(animateSettings, settings.duration, module.set.pushed)                                            // 198
          ;                                                                                                            // 199
        },                                                                                                             // 200
                                                                                                                       // 201
        add: {                                                                                                         // 202
          bodyCSS: function(direction, distance) {                                                                     // 203
            var                                                                                                        // 204
              style                                                                                                    // 205
            ;                                                                                                          // 206
            if(direction !== className.bottom) {                                                                       // 207
              style = ''                                                                                               // 208
                + '<style title="' + namespace + '">'                                                                  // 209
                + 'body.pushed {'                                                                                      // 210
                + '  margin-' + direction + ': ' + distance + 'px !important;'                                         // 211
                + '}'                                                                                                  // 212
                + '</style>'                                                                                           // 213
              ;                                                                                                        // 214
            }                                                                                                          // 215
            $head.append(style);                                                                                       // 216
            module.debug('Adding body css to head', $style);                                                           // 217
          }                                                                                                            // 218
        },                                                                                                             // 219
                                                                                                                       // 220
        remove: {                                                                                                      // 221
          bodyCSS: function() {                                                                                        // 222
            module.debug('Removing body css styles', $style);                                                          // 223
            module.refresh();                                                                                          // 224
            $style.remove();                                                                                           // 225
          },                                                                                                           // 226
          active: function() {                                                                                         // 227
            $module.removeClass(className.active);                                                                     // 228
          },                                                                                                           // 229
          pushed: function() {                                                                                         // 230
            module.verbose('Removing body push state', module.get.direction());                                        // 231
            $body                                                                                                      // 232
              .removeClass(className[ module.get.direction() ])                                                        // 233
              .removeClass(className.pushed)                                                                           // 234
            ;                                                                                                          // 235
          }                                                                                                            // 236
        },                                                                                                             // 237
                                                                                                                       // 238
        set: {                                                                                                         // 239
          active: function() {                                                                                         // 240
            $module.addClass(className.active);                                                                        // 241
          },                                                                                                           // 242
          pushed: function() {                                                                                         // 243
            module.verbose('Adding body push state', module.get.direction());                                          // 244
            $body                                                                                                      // 245
              .addClass(className[ module.get.direction() ])                                                           // 246
              .addClass(className.pushed)                                                                              // 247
            ;                                                                                                          // 248
          }                                                                                                            // 249
        },                                                                                                             // 250
                                                                                                                       // 251
        get: {                                                                                                         // 252
          direction: function() {                                                                                      // 253
            if($module.hasClass(className.top)) {                                                                      // 254
              return className.top;                                                                                    // 255
            }                                                                                                          // 256
            else if($module.hasClass(className.right)) {                                                               // 257
              return className.right;                                                                                  // 258
            }                                                                                                          // 259
            else if($module.hasClass(className.bottom)) {                                                              // 260
              return className.bottom;                                                                                 // 261
            }                                                                                                          // 262
            else {                                                                                                     // 263
              return className.left;                                                                                   // 264
            }                                                                                                          // 265
          },                                                                                                           // 266
          transitionEvent: function() {                                                                                // 267
            var                                                                                                        // 268
              element     = document.createElement('element'),                                                         // 269
              transitions = {                                                                                          // 270
                'transition'       :'transitionend',                                                                   // 271
                'OTransition'      :'oTransitionEnd',                                                                  // 272
                'MozTransition'    :'transitionend',                                                                   // 273
                'WebkitTransition' :'webkitTransitionEnd'                                                              // 274
              },                                                                                                       // 275
              transition                                                                                               // 276
            ;                                                                                                          // 277
            for(transition in transitions){                                                                            // 278
              if( element.style[transition] !== undefined ){                                                           // 279
                return transitions[transition];                                                                        // 280
              }                                                                                                        // 281
            }                                                                                                          // 282
          }                                                                                                            // 283
        },                                                                                                             // 284
                                                                                                                       // 285
        is: {                                                                                                          // 286
          open: function() {                                                                                           // 287
            return $module.is(':animated') || $module.hasClass(className.active);                                      // 288
          },                                                                                                           // 289
          closed: function() {                                                                                         // 290
            return !module.is.open();                                                                                  // 291
          },                                                                                                           // 292
          vertical: function() {                                                                                       // 293
            return $module.hasClass(className.top);                                                                    // 294
          }                                                                                                            // 295
        },                                                                                                             // 296
                                                                                                                       // 297
        setting: function(name, value) {                                                                               // 298
          if( $.isPlainObject(name) ) {                                                                                // 299
            $.extend(true, settings, name);                                                                            // 300
          }                                                                                                            // 301
          else if(value !== undefined) {                                                                               // 302
            settings[name] = value;                                                                                    // 303
          }                                                                                                            // 304
          else {                                                                                                       // 305
            return settings[name];                                                                                     // 306
          }                                                                                                            // 307
        },                                                                                                             // 308
        internal: function(name, value) {                                                                              // 309
          if( $.isPlainObject(name) ) {                                                                                // 310
            $.extend(true, module, name);                                                                              // 311
          }                                                                                                            // 312
          else if(value !== undefined) {                                                                               // 313
            module[name] = value;                                                                                      // 314
          }                                                                                                            // 315
          else {                                                                                                       // 316
            return module[name];                                                                                       // 317
          }                                                                                                            // 318
        },                                                                                                             // 319
        debug: function() {                                                                                            // 320
          if(settings.debug) {                                                                                         // 321
            if(settings.performance) {                                                                                 // 322
              module.performance.log(arguments);                                                                       // 323
            }                                                                                                          // 324
            else {                                                                                                     // 325
              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');                 // 326
              module.debug.apply(console, arguments);                                                                  // 327
            }                                                                                                          // 328
          }                                                                                                            // 329
        },                                                                                                             // 330
        verbose: function() {                                                                                          // 331
          if(settings.verbose && settings.debug) {                                                                     // 332
            if(settings.performance) {                                                                                 // 333
              module.performance.log(arguments);                                                                       // 334
            }                                                                                                          // 335
            else {                                                                                                     // 336
              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');               // 337
              module.verbose.apply(console, arguments);                                                                // 338
            }                                                                                                          // 339
          }                                                                                                            // 340
        },                                                                                                             // 341
        error: function() {                                                                                            // 342
          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');                    // 343
          module.error.apply(console, arguments);                                                                      // 344
        },                                                                                                             // 345
        performance: {                                                                                                 // 346
          log: function(message) {                                                                                     // 347
            var                                                                                                        // 348
              currentTime,                                                                                             // 349
              executionTime,                                                                                           // 350
              previousTime                                                                                             // 351
            ;                                                                                                          // 352
            if(settings.performance) {                                                                                 // 353
              currentTime   = new Date().getTime();                                                                    // 354
              previousTime  = time || currentTime;                                                                     // 355
              executionTime = currentTime - previousTime;                                                              // 356
              time          = currentTime;                                                                             // 357
              performance.push({                                                                                       // 358
                'Element'        : element,                                                                            // 359
                'Name'           : message[0],                                                                         // 360
                'Arguments'      : [].slice.call(message, 1) || '',                                                    // 361
                'Execution Time' : executionTime                                                                       // 362
              });                                                                                                      // 363
            }                                                                                                          // 364
            clearTimeout(module.performance.timer);                                                                    // 365
            module.performance.timer = setTimeout(module.performance.display, 100);                                    // 366
          },                                                                                                           // 367
          display: function() {                                                                                        // 368
            var                                                                                                        // 369
              title = settings.name + ':',                                                                             // 370
              totalTime = 0                                                                                            // 371
            ;                                                                                                          // 372
            time = false;                                                                                              // 373
            clearTimeout(module.performance.timer);                                                                    // 374
            $.each(performance, function(index, data) {                                                                // 375
              totalTime += data['Execution Time'];                                                                     // 376
            });                                                                                                        // 377
            title += ' ' + totalTime + 'ms';                                                                           // 378
            if(moduleSelector) {                                                                                       // 379
              title += ' \'' + moduleSelector + '\'';                                                                  // 380
            }                                                                                                          // 381
            if($allModules.size() > 1) {                                                                               // 382
              title += ' ' + '(' + $allModules.size() + ')';                                                           // 383
            }                                                                                                          // 384
            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {              // 385
              console.groupCollapsed(title);                                                                           // 386
              if(console.table) {                                                                                      // 387
                console.table(performance);                                                                            // 388
              }                                                                                                        // 389
              else {                                                                                                   // 390
                $.each(performance, function(index, data) {                                                            // 391
                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');                                      // 392
                });                                                                                                    // 393
              }                                                                                                        // 394
              console.groupEnd();                                                                                      // 395
            }                                                                                                          // 396
            performance = [];                                                                                          // 397
          }                                                                                                            // 398
        },                                                                                                             // 399
        invoke: function(query, passedArguments, context) {                                                            // 400
          var                                                                                                          // 401
            maxDepth,                                                                                                  // 402
            found,                                                                                                     // 403
            response                                                                                                   // 404
          ;                                                                                                            // 405
          passedArguments = passedArguments || queryArguments;                                                         // 406
          context         = element         || context;                                                                // 407
          if(typeof query == 'string' && instance !== undefined) {                                                     // 408
            query    = query.split(/[\. ]/);                                                                           // 409
            maxDepth = query.length - 1;                                                                               // 410
            $.each(query, function(depth, value) {                                                                     // 411
              var camelCaseValue = (depth != maxDepth)                                                                 // 412
                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)                         // 413
                : query                                                                                                // 414
              ;                                                                                                        // 415
              if( $.isPlainObject( instance[camelCaseValue] ) && (depth != maxDepth) ) {                               // 416
                instance = instance[camelCaseValue];                                                                   // 417
              }                                                                                                        // 418
              else if( instance[camelCaseValue] !== undefined ) {                                                      // 419
                found = instance[camelCaseValue];                                                                      // 420
                return false;                                                                                          // 421
              }                                                                                                        // 422
              else if( $.isPlainObject( instance[value] ) && (depth != maxDepth) ) {                                   // 423
                instance = instance[value];                                                                            // 424
              }                                                                                                        // 425
              else if( instance[value] !== undefined ) {                                                               // 426
                found = instance[value];                                                                               // 427
                return false;                                                                                          // 428
              }                                                                                                        // 429
              else {                                                                                                   // 430
                module.error(error.method, query);                                                                     // 431
                return false;                                                                                          // 432
              }                                                                                                        // 433
            });                                                                                                        // 434
          }                                                                                                            // 435
          if ( $.isFunction( found ) ) {                                                                               // 436
            response = found.apply(context, passedArguments);                                                          // 437
          }                                                                                                            // 438
          else if(found !== undefined) {                                                                               // 439
            response = found;                                                                                          // 440
          }                                                                                                            // 441
          if($.isArray(returnedValue)) {                                                                               // 442
            returnedValue.push(response);                                                                              // 443
          }                                                                                                            // 444
          else if(returnedValue !== undefined) {                                                                       // 445
            returnedValue = [returnedValue, response];                                                                 // 446
          }                                                                                                            // 447
          else if(response !== undefined) {                                                                            // 448
            returnedValue = response;                                                                                  // 449
          }                                                                                                            // 450
          return found;                                                                                                // 451
        }                                                                                                              // 452
      };                                                                                                               // 453
      if(methodInvoked) {                                                                                              // 454
        if(instance === undefined) {                                                                                   // 455
          module.initialize();                                                                                         // 456
        }                                                                                                              // 457
        module.invoke(query);                                                                                          // 458
      }                                                                                                                // 459
      else {                                                                                                           // 460
        if(instance !== undefined) {                                                                                   // 461
          module.destroy();                                                                                            // 462
        }                                                                                                              // 463
        module.initialize();                                                                                           // 464
      }                                                                                                                // 465
    })                                                                                                                 // 466
  ;                                                                                                                    // 467
                                                                                                                       // 468
  return (returnedValue !== undefined)                                                                                 // 469
    ? returnedValue                                                                                                    // 470
    : this                                                                                                             // 471
  ;                                                                                                                    // 472
};                                                                                                                     // 473
                                                                                                                       // 474
$.fn.sidebar.settings = {                                                                                              // 475
                                                                                                                       // 476
  name        : 'Sidebar',                                                                                             // 477
  namespace   : 'sidebar',                                                                                             // 478
                                                                                                                       // 479
  verbose     : true,                                                                                                  // 480
  debug       : true,                                                                                                  // 481
  performance : true,                                                                                                  // 482
                                                                                                                       // 483
  useCSS      : true,                                                                                                  // 484
  exclusive   : true,                                                                                                  // 485
  overlay     : false,                                                                                                 // 486
  duration    : 300,                                                                                                   // 487
                                                                                                                       // 488
  onChange     : function(){},                                                                                         // 489
  onShow       : function(){},                                                                                         // 490
  onHide       : function(){},                                                                                         // 491
                                                                                                                       // 492
  className: {                                                                                                         // 493
    active : 'active',                                                                                                 // 494
    pushed : 'pushed',                                                                                                 // 495
    top    : 'top',                                                                                                    // 496
    left   : 'left',                                                                                                   // 497
    right  : 'right',                                                                                                  // 498
    bottom : 'bottom'                                                                                                  // 499
  },                                                                                                                   // 500
                                                                                                                       // 501
  selector: {                                                                                                          // 502
    sidebar: '.ui.sidebar'                                                                                             // 503
  },                                                                                                                   // 504
                                                                                                                       // 505
  error   : {                                                                                                          // 506
    method   : 'The method you called is not defined.',                                                                // 507
    notFound : 'There were no elements that matched the specified selector'                                            // 508
  }                                                                                                                    // 509
                                                                                                                       // 510
};                                                                                                                     // 511
                                                                                                                       // 512
})( jQuery, window , document );                                                                                       // 513
                                                                                                                       // 514
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}).call(this);






(function () {

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// packages/semantic-ui/lib/semantic-ui/build/uncompressed/modules/tab.js                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/*                                                                                                                     // 1
 * # Semantic - Tab                                                                                                    // 2
 * http://github.com/jlukic/semantic-ui/                                                                               // 3
 *                                                                                                                     // 4
 * Copyright 2013 Contributors                                                                                         // 5
 * Released under the MIT license                                                                                      // 6
 * http://opensource.org/licenses/MIT                                                                                  // 7
 *                                                                                                                     // 8
 */                                                                                                                    // 9
                                                                                                                       // 10
                                                                                                                       // 11
;(function ($, window, document, undefined) {                                                                          // 12
                                                                                                                       // 13
  $.fn.tab = function(parameters) {                                                                                    // 14
                                                                                                                       // 15
    var                                                                                                                // 16
      settings        = $.extend(true, {}, $.fn.tab.settings, parameters),                                             // 17
                                                                                                                       // 18
      $module         = $(this),                                                                                       // 19
      $tabs           = $(settings.context).find(settings.selector.tabs),                                              // 20
                                                                                                                       // 21
      moduleSelector  = $module.selector || '',                                                                        // 22
                                                                                                                       // 23
      cache           = {},                                                                                            // 24
      firstLoad       = true,                                                                                          // 25
      recursionDepth  = 0,                                                                                             // 26
                                                                                                                       // 27
      activeTabPath,                                                                                                   // 28
      parameterArray,                                                                                                  // 29
      historyEvent,                                                                                                    // 30
                                                                                                                       // 31
      element         = this,                                                                                          // 32
      time            = new Date().getTime(),                                                                          // 33
      performance     = [],                                                                                            // 34
                                                                                                                       // 35
      className       = settings.className,                                                                            // 36
      metadata        = settings.metadata,                                                                             // 37
      error           = settings.error,                                                                                // 38
                                                                                                                       // 39
      eventNamespace  = '.' + settings.namespace,                                                                      // 40
      moduleNamespace = 'module-' + settings.namespace,                                                                // 41
                                                                                                                       // 42
      instance        = $module.data(moduleNamespace),                                                                 // 43
                                                                                                                       // 44
      query           = arguments[0],                                                                                  // 45
      methodInvoked   = (instance !== undefined && typeof query == 'string'),                                          // 46
      queryArguments  = [].slice.call(arguments, 1),                                                                   // 47
                                                                                                                       // 48
      module,                                                                                                          // 49
      returnedValue                                                                                                    // 50
    ;                                                                                                                  // 51
                                                                                                                       // 52
    module = {                                                                                                         // 53
                                                                                                                       // 54
      initialize: function() {                                                                                         // 55
        module.debug('Initializing Tabs', $module);                                                                    // 56
                                                                                                                       // 57
        // set up automatic routing                                                                                    // 58
        if(settings.auto) {                                                                                            // 59
          module.verbose('Setting up automatic tab retrieval from server');                                            // 60
          settings.apiSettings = {                                                                                     // 61
            url: settings.path + '/{$tab}'                                                                             // 62
          };                                                                                                           // 63
        }                                                                                                              // 64
                                                                                                                       // 65
        // attach history events                                                                                       // 66
        if(settings.history) {                                                                                         // 67
          module.debug('Initializing page state');                                                                     // 68
          if( $.address === undefined ) {                                                                              // 69
            module.error(error.state);                                                                                 // 70
            return false;                                                                                              // 71
          }                                                                                                            // 72
          else {                                                                                                       // 73
            if(settings.historyType == 'html5') {                                                                      // 74
              module.debug('Using HTML5 to manage state');                                                             // 75
              if(settings.path !== false) {                                                                            // 76
                $.address                                                                                              // 77
                  .history(true)                                                                                       // 78
                  .state(settings.path)                                                                                // 79
                ;                                                                                                      // 80
              }                                                                                                        // 81
              else {                                                                                                   // 82
                module.error(error.path);                                                                              // 83
                return false;                                                                                          // 84
              }                                                                                                        // 85
            }                                                                                                          // 86
            $.address                                                                                                  // 87
              .unbind('change')                                                                                        // 88
              .bind('change', module.event.history.change)                                                             // 89
            ;                                                                                                          // 90
          }                                                                                                            // 91
        }                                                                                                              // 92
                                                                                                                       // 93
        // attach events if navigation wasn't set to window                                                            // 94
        if( !$.isWindow( element ) ) {                                                                                 // 95
          module.debug('Attaching tab activation events to element', $module);                                         // 96
          $module                                                                                                      // 97
            .on('click' + eventNamespace, module.event.click)                                                          // 98
          ;                                                                                                            // 99
        }                                                                                                              // 100
        module.instantiate();                                                                                          // 101
      },                                                                                                               // 102
                                                                                                                       // 103
      instantiate: function () {                                                                                       // 104
        module.verbose('Storing instance of module', module);                                                          // 105
        $module                                                                                                        // 106
          .data(moduleNamespace, module)                                                                               // 107
        ;                                                                                                              // 108
      },                                                                                                               // 109
                                                                                                                       // 110
      destroy: function() {                                                                                            // 111
        module.debug('Destroying tabs', $module);                                                                      // 112
        $module                                                                                                        // 113
          .removeData(moduleNamespace)                                                                                 // 114
          .off(eventNamespace)                                                                                         // 115
        ;                                                                                                              // 116
      },                                                                                                               // 117
                                                                                                                       // 118
      event: {                                                                                                         // 119
        click: function(event) {                                                                                       // 120
          var                                                                                                          // 121
            tabPath = $(this).data(metadata.tab)                                                                       // 122
          ;                                                                                                            // 123
          if(tabPath !== undefined) {                                                                                  // 124
            if(settings.history) {                                                                                     // 125
              module.verbose('Updating page state', event);                                                            // 126
              $.address.value(tabPath);                                                                                // 127
            }                                                                                                          // 128
            else {                                                                                                     // 129
              module.verbose('Changing tab without state management', event);                                          // 130
              module.changeTab(tabPath);                                                                               // 131
            }                                                                                                          // 132
            event.preventDefault();                                                                                    // 133
          }                                                                                                            // 134
          else {                                                                                                       // 135
            module.debug('No tab specified');                                                                          // 136
          }                                                                                                            // 137
        },                                                                                                             // 138
        history: {                                                                                                     // 139
          change: function(event) {                                                                                    // 140
            var                                                                                                        // 141
              tabPath   = event.pathNames.join('/') || module.get.initialPath(),                                       // 142
              pageTitle = settings.templates.determineTitle(tabPath) || false                                          // 143
            ;                                                                                                          // 144
            module.debug('History change event', tabPath, event);                                                      // 145
            historyEvent = event;                                                                                      // 146
            if(tabPath !== undefined) {                                                                                // 147
              module.changeTab(tabPath);                                                                               // 148
            }                                                                                                          // 149
            if(pageTitle) {                                                                                            // 150
              $.address.title(pageTitle);                                                                              // 151
            }                                                                                                          // 152
          }                                                                                                            // 153
        }                                                                                                              // 154
      },                                                                                                               // 155
                                                                                                                       // 156
      refresh: function() {                                                                                            // 157
        if(activeTabPath) {                                                                                            // 158
          module.debug('Refreshing tab', activeTabPath);                                                               // 159
          module.changeTab(activeTabPath);                                                                             // 160
        }                                                                                                              // 161
      },                                                                                                               // 162
                                                                                                                       // 163
      cache: {                                                                                                         // 164
                                                                                                                       // 165
        read: function(cacheKey) {                                                                                     // 166
          return (cacheKey !== undefined)                                                                              // 167
            ? cache[cacheKey]                                                                                          // 168
            : false                                                                                                    // 169
          ;                                                                                                            // 170
        },                                                                                                             // 171
        add: function(cacheKey, content) {                                                                             // 172
          cacheKey = cacheKey || activeTabPath;                                                                        // 173
          module.debug('Adding cached content for', cacheKey);                                                         // 174
          cache[cacheKey] = content;                                                                                   // 175
        },                                                                                                             // 176
        remove: function(cacheKey) {                                                                                   // 177
          cacheKey = cacheKey || activeTabPath;                                                                        // 178
          module.debug('Removing cached content for', cacheKey);                                                       // 179
          delete cache[cacheKey];                                                                                      // 180
        }                                                                                                              // 181
      },                                                                                                               // 182
                                                                                                                       // 183
      set: {                                                                                                           // 184
        state: function(url) {                                                                                         // 185
          $.address.value(url);                                                                                        // 186
        }                                                                                                              // 187
      },                                                                                                               // 188
                                                                                                                       // 189
      changeTab: function(tabPath) {                                                                                   // 190
        var                                                                                                            // 191
          pushStateAvailable = (window.history && window.history.pushState),                                           // 192
          shouldIgnoreLoad   = (pushStateAvailable && settings.ignoreFirstLoad && firstLoad),                          // 193
          remoteContent      = (settings.auto || $.isPlainObject(settings.apiSettings) ),                              // 194
          // only get default path if not remote content                                                               // 195
          pathArray = (remoteContent && !shouldIgnoreLoad)                                                             // 196
            ? module.utilities.pathToArray(tabPath)                                                                    // 197
            : module.get.defaultPathArray(tabPath)                                                                     // 198
        ;                                                                                                              // 199
        tabPath = module.utilities.arrayToPath(pathArray);                                                             // 200
        module.deactivate.all();                                                                                       // 201
        $.each(pathArray, function(index, tab) {                                                                       // 202
          var                                                                                                          // 203
            currentPathArray   = pathArray.slice(0, index + 1),                                                        // 204
            currentPath        = module.utilities.arrayToPath(currentPathArray),                                       // 205
                                                                                                                       // 206
            isTab              = module.is.tab(currentPath),                                                           // 207
            isLastIndex        = (index + 1 == pathArray.length),                                                      // 208
                                                                                                                       // 209
            $tab               = module.get.tabElement(currentPath),                                                   // 210
            nextPathArray,                                                                                             // 211
            nextPath,                                                                                                  // 212
            isLastTab                                                                                                  // 213
          ;                                                                                                            // 214
          module.verbose('Looking for tab', tab);                                                                      // 215
          if(isTab) {                                                                                                  // 216
            module.verbose('Tab was found', tab);                                                                      // 217
                                                                                                                       // 218
            // scope up                                                                                                // 219
            activeTabPath = currentPath;                                                                               // 220
            parameterArray = module.utilities.filterArray(pathArray, currentPathArray);                                // 221
                                                                                                                       // 222
            if(isLastIndex) {                                                                                          // 223
              isLastTab = true;                                                                                        // 224
            }                                                                                                          // 225
            else {                                                                                                     // 226
              nextPathArray = pathArray.slice(0, index + 2);                                                           // 227
              nextPath      = module.utilities.arrayToPath(nextPathArray);                                             // 228
              isLastTab     = ( !module.is.tab(nextPath) );                                                            // 229
              if(isLastTab) {                                                                                          // 230
                module.verbose('Tab parameters found', nextPathArray);                                                 // 231
              }                                                                                                        // 232
            }                                                                                                          // 233
            if(isLastTab && remoteContent) {                                                                           // 234
              if(!shouldIgnoreLoad) {                                                                                  // 235
                module.activate.navigation(currentPath);                                                               // 236
                module.content.fetch(currentPath, tabPath);                                                            // 237
              }                                                                                                        // 238
              else {                                                                                                   // 239
                module.debug('Ignoring remote content on first tab load', currentPath);                                // 240
                firstLoad = false;                                                                                     // 241
                module.cache.add(tabPath, $tab.html());                                                                // 242
                module.activate.all(currentPath);                                                                      // 243
                $.proxy(settings.onTabInit, $tab)(currentPath, parameterArray, historyEvent);                          // 244
                $.proxy(settings.onTabLoad, $tab)(currentPath, parameterArray, historyEvent);                          // 245
              }                                                                                                        // 246
              return false;                                                                                            // 247
            }                                                                                                          // 248
            else {                                                                                                     // 249
              module.debug('Opened local tab', currentPath);                                                           // 250
              module.activate.all(currentPath);                                                                        // 251
              if( !module.cache.read(currentPath) ) {                                                                  // 252
                module.cache.add(currentPath, true);                                                                   // 253
                module.debug('First time tab loaded calling tab init');                                                // 254
                $.proxy(settings.onTabInit, $tab)(currentPath, parameterArray, historyEvent);                          // 255
              }                                                                                                        // 256
              $.proxy(settings.onTabLoad, $tab)(currentPath, parameterArray, historyEvent);                            // 257
            }                                                                                                          // 258
          }                                                                                                            // 259
          else {                                                                                                       // 260
            module.error(error.missingTab, tab);                                                                       // 261
            return false;                                                                                              // 262
          }                                                                                                            // 263
        });                                                                                                            // 264
      },                                                                                                               // 265
                                                                                                                       // 266
      content: {                                                                                                       // 267
                                                                                                                       // 268
        fetch: function(tabPath, fullTabPath) {                                                                        // 269
          var                                                                                                          // 270
            $tab             = module.get.tabElement(tabPath),                                                         // 271
            apiSettings      = {                                                                                       // 272
              dataType     : 'html',                                                                                   // 273
              stateContext : $tab,                                                                                     // 274
              success      : function(response) {                                                                      // 275
                module.cache.add(fullTabPath, response);                                                               // 276
                module.content.update(tabPath, response);                                                              // 277
                if(tabPath == activeTabPath) {                                                                         // 278
                  module.debug('Content loaded', tabPath);                                                             // 279
                  module.activate.tab(tabPath);                                                                        // 280
                }                                                                                                      // 281
                else {                                                                                                 // 282
                  module.debug('Content loaded in background', tabPath);                                               // 283
                }                                                                                                      // 284
                $.proxy(settings.onTabInit, $tab)(tabPath, parameterArray, historyEvent);                              // 285
                $.proxy(settings.onTabLoad, $tab)(tabPath, parameterArray, historyEvent);                              // 286
              },                                                                                                       // 287
              urlData: { tab: fullTabPath }                                                                            // 288
            },                                                                                                         // 289
            request         = $tab.data(metadata.promise) || false,                                                    // 290
            existingRequest = ( request && request.state() === 'pending' ),                                            // 291
            requestSettings,                                                                                           // 292
            cachedContent                                                                                              // 293
          ;                                                                                                            // 294
                                                                                                                       // 295
          fullTabPath   = fullTabPath || tabPath;                                                                      // 296
          cachedContent = module.cache.read(fullTabPath);                                                              // 297
                                                                                                                       // 298
          if(settings.cache && cachedContent) {                                                                        // 299
            module.debug('Showing existing content', fullTabPath);                                                     // 300
            module.content.update(tabPath, cachedContent);                                                             // 301
            module.activate.tab(tabPath);                                                                              // 302
            $.proxy(settings.onTabLoad, $tab)(tabPath, parameterArray, historyEvent);                                  // 303
          }                                                                                                            // 304
          else if(existingRequest) {                                                                                   // 305
            module.debug('Content is already loading', fullTabPath);                                                   // 306
            $tab                                                                                                       // 307
              .addClass(className.loading)                                                                             // 308
            ;                                                                                                          // 309
          }                                                                                                            // 310
          else if($.api !== undefined) {                                                                               // 311
            console.log(settings.apiSettings);                                                                         // 312
            requestSettings = $.extend(true, { headers: { 'X-Remote': true } }, settings.apiSettings, apiSettings);    // 313
            module.debug('Retrieving remote content', fullTabPath, requestSettings);                                   // 314
            $.api( requestSettings );                                                                                  // 315
          }                                                                                                            // 316
          else {                                                                                                       // 317
            module.error(error.api);                                                                                   // 318
          }                                                                                                            // 319
        },                                                                                                             // 320
                                                                                                                       // 321
        update: function(tabPath, html) {                                                                              // 322
          module.debug('Updating html for', tabPath);                                                                  // 323
          var                                                                                                          // 324
            $tab = module.get.tabElement(tabPath)                                                                      // 325
          ;                                                                                                            // 326
          $tab                                                                                                         // 327
            .html(html)                                                                                                // 328
          ;                                                                                                            // 329
        }                                                                                                              // 330
      },                                                                                                               // 331
                                                                                                                       // 332
      activate: {                                                                                                      // 333
        all: function(tabPath) {                                                                                       // 334
          module.activate.tab(tabPath);                                                                                // 335
          module.activate.navigation(tabPath);                                                                         // 336
        },                                                                                                             // 337
        tab: function(tabPath) {                                                                                       // 338
          var                                                                                                          // 339
            $tab = module.get.tabElement(tabPath)                                                                      // 340
          ;                                                                                                            // 341
          module.verbose('Showing tab content for', $tab);                                                             // 342
          $tab.addClass(className.active);                                                                             // 343
        },                                                                                                             // 344
        navigation: function(tabPath) {                                                                                // 345
          var                                                                                                          // 346
            $navigation = module.get.navElement(tabPath)                                                               // 347
          ;                                                                                                            // 348
          module.verbose('Activating tab navigation for', $navigation, tabPath);                                       // 349
          $navigation.addClass(className.active);                                                                      // 350
        }                                                                                                              // 351
      },                                                                                                               // 352
                                                                                                                       // 353
      deactivate: {                                                                                                    // 354
        all: function() {                                                                                              // 355
          module.deactivate.navigation();                                                                              // 356
          module.deactivate.tabs();                                                                                    // 357
        },                                                                                                             // 358
        navigation: function() {                                                                                       // 359
          $module                                                                                                      // 360
            .removeClass(className.active)                                                                             // 361
          ;                                                                                                            // 362
        },                                                                                                             // 363
        tabs: function() {                                                                                             // 364
          $tabs                                                                                                        // 365
            .removeClass(className.active + ' ' + className.loading)                                                   // 366
          ;                                                                                                            // 367
        }                                                                                                              // 368
      },                                                                                                               // 369
                                                                                                                       // 370
      is: {                                                                                                            // 371
        tab: function(tabName) {                                                                                       // 372
          return (tabName !== undefined)                                                                               // 373
            ? ( module.get.tabElement(tabName).size() > 0 )                                                            // 374
            : false                                                                                                    // 375
          ;                                                                                                            // 376
        }                                                                                                              // 377
      },                                                                                                               // 378
                                                                                                                       // 379
      get: {                                                                                                           // 380
        initialPath: function() {                                                                                      // 381
          return $module.eq(0).data(metadata.tab) || $tabs.eq(0).data(metadata.tab);                                   // 382
        },                                                                                                             // 383
        path: function() {                                                                                             // 384
          return $.address.value();                                                                                    // 385
        },                                                                                                             // 386
        // adds default tabs to tab path                                                                               // 387
        defaultPathArray: function(tabPath) {                                                                          // 388
          return module.utilities.pathToArray( module.get.defaultPath(tabPath) );                                      // 389
        },                                                                                                             // 390
        defaultPath: function(tabPath) {                                                                               // 391
          var                                                                                                          // 392
            $defaultNav = $module.filter('[data-' + metadata.tab + '^="' + tabPath + '/"]').eq(0),                     // 393
            defaultTab  = $defaultNav.data(metadata.tab) || false                                                      // 394
          ;                                                                                                            // 395
          if( defaultTab ) {                                                                                           // 396
            module.debug('Found default tab', defaultTab);                                                             // 397
            if(recursionDepth < settings.maxDepth) {                                                                   // 398
              recursionDepth++;                                                                                        // 399
              return module.get.defaultPath(defaultTab);                                                               // 400
            }                                                                                                          // 401
            module.error(error.recursion);                                                                             // 402
          }                                                                                                            // 403
          else {                                                                                                       // 404
            module.debug('No default tabs found for', tabPath, $tabs);                                                 // 405
          }                                                                                                            // 406
          recursionDepth = 0;                                                                                          // 407
          return tabPath;                                                                                              // 408
        },                                                                                                             // 409
        navElement: function(tabPath) {                                                                                // 410
          tabPath = tabPath || activeTabPath;                                                                          // 411
          return $module.filter('[data-' + metadata.tab + '="' + tabPath + '"]');                                      // 412
        },                                                                                                             // 413
        tabElement: function(tabPath) {                                                                                // 414
          var                                                                                                          // 415
            $fullPathTab,                                                                                              // 416
            $simplePathTab,                                                                                            // 417
            tabPathArray,                                                                                              // 418
            lastTab                                                                                                    // 419
          ;                                                                                                            // 420
          tabPath        = tabPath || activeTabPath;                                                                   // 421
          tabPathArray   = module.utilities.pathToArray(tabPath);                                                      // 422
          lastTab        = module.utilities.last(tabPathArray);                                                        // 423
          $fullPathTab   = $tabs.filter('[data-' + metadata.tab + '="' + lastTab + '"]');                              // 424
          $simplePathTab = $tabs.filter('[data-' + metadata.tab + '="' + tabPath + '"]');                              // 425
          return ($fullPathTab.size() > 0)                                                                             // 426
            ? $fullPathTab                                                                                             // 427
            : $simplePathTab                                                                                           // 428
          ;                                                                                                            // 429
        },                                                                                                             // 430
        tab: function() {                                                                                              // 431
          return activeTabPath;                                                                                        // 432
        }                                                                                                              // 433
      },                                                                                                               // 434
                                                                                                                       // 435
      utilities: {                                                                                                     // 436
        filterArray: function(keepArray, removeArray) {                                                                // 437
          return $.grep(keepArray, function(keepValue) {                                                               // 438
            return ( $.inArray(keepValue, removeArray) == -1);                                                         // 439
          });                                                                                                          // 440
        },                                                                                                             // 441
        last: function(array) {                                                                                        // 442
          return $.isArray(array)                                                                                      // 443
            ? array[ array.length - 1]                                                                                 // 444
            : false                                                                                                    // 445
          ;                                                                                                            // 446
        },                                                                                                             // 447
        pathToArray: function(pathName) {                                                                              // 448
          if(pathName === undefined) {                                                                                 // 449
            pathName = activeTabPath;                                                                                  // 450
          }                                                                                                            // 451
          return typeof pathName == 'string'                                                                           // 452
            ? pathName.split('/')                                                                                      // 453
            : [pathName]                                                                                               // 454
          ;                                                                                                            // 455
        },                                                                                                             // 456
        arrayToPath: function(pathArray) {                                                                             // 457
          return $.isArray(pathArray)                                                                                  // 458
            ? pathArray.join('/')                                                                                      // 459
            : false                                                                                                    // 460
          ;                                                                                                            // 461
        }                                                                                                              // 462
      },                                                                                                               // 463
                                                                                                                       // 464
      setting: function(name, value) {                                                                                 // 465
        if( $.isPlainObject(name) ) {                                                                                  // 466
          $.extend(true, settings, name);                                                                              // 467
        }                                                                                                              // 468
        else if(value !== undefined) {                                                                                 // 469
          settings[name] = value;                                                                                      // 470
        }                                                                                                              // 471
        else {                                                                                                         // 472
          return settings[name];                                                                                       // 473
        }                                                                                                              // 474
      },                                                                                                               // 475
      internal: function(name, value) {                                                                                // 476
        if( $.isPlainObject(name) ) {                                                                                  // 477
          $.extend(true, module, name);                                                                                // 478
        }                                                                                                              // 479
        else if(value !== undefined) {                                                                                 // 480
          module[name] = value;                                                                                        // 481
        }                                                                                                              // 482
        else {                                                                                                         // 483
          return module[name];                                                                                         // 484
        }                                                                                                              // 485
      },                                                                                                               // 486
      debug: function() {                                                                                              // 487
        if(settings.debug) {                                                                                           // 488
          if(settings.performance) {                                                                                   // 489
            module.performance.log(arguments);                                                                         // 490
          }                                                                                                            // 491
          else {                                                                                                       // 492
            module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');                   // 493
            module.debug.apply(console, arguments);                                                                    // 494
          }                                                                                                            // 495
        }                                                                                                              // 496
      },                                                                                                               // 497
      verbose: function() {                                                                                            // 498
        if(settings.verbose && settings.debug) {                                                                       // 499
          if(settings.performance) {                                                                                   // 500
            module.performance.log(arguments);                                                                         // 501
          }                                                                                                            // 502
          else {                                                                                                       // 503
            module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');                 // 504
            module.verbose.apply(console, arguments);                                                                  // 505
          }                                                                                                            // 506
        }                                                                                                              // 507
      },                                                                                                               // 508
      error: function() {                                                                                              // 509
        module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');                      // 510
        module.error.apply(console, arguments);                                                                        // 511
      },                                                                                                               // 512
      performance: {                                                                                                   // 513
        log: function(message) {                                                                                       // 514
          var                                                                                                          // 515
            currentTime,                                                                                               // 516
            executionTime,                                                                                             // 517
            previousTime                                                                                               // 518
          ;                                                                                                            // 519
          if(settings.performance) {                                                                                   // 520
            currentTime   = new Date().getTime();                                                                      // 521
            previousTime  = time || currentTime;                                                                       // 522
            executionTime = currentTime - previousTime;                                                                // 523
            time          = currentTime;                                                                               // 524
            performance.push({                                                                                         // 525
              'Element'        : element,                                                                              // 526
              'Name'           : message[0],                                                                           // 527
              'Arguments'      : [].slice.call(message, 1) || '',                                                      // 528
              'Execution Time' : executionTime                                                                         // 529
            });                                                                                                        // 530
          }                                                                                                            // 531
          clearTimeout(module.performance.timer);                                                                      // 532
          module.performance.timer = setTimeout(module.performance.display, 100);                                      // 533
        },                                                                                                             // 534
        display: function() {                                                                                          // 535
          var                                                                                                          // 536
            title = settings.name + ':',                                                                               // 537
            totalTime = 0                                                                                              // 538
          ;                                                                                                            // 539
          time = false;                                                                                                // 540
          clearTimeout(module.performance.timer);                                                                      // 541
          $.each(performance, function(index, data) {                                                                  // 542
            totalTime += data['Execution Time'];                                                                       // 543
          });                                                                                                          // 544
          title += ' ' + totalTime + 'ms';                                                                             // 545
          if(moduleSelector) {                                                                                         // 546
            title += ' \'' + moduleSelector + '\'';                                                                    // 547
          }                                                                                                            // 548
          if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {                // 549
            console.groupCollapsed(title);                                                                             // 550
            if(console.table) {                                                                                        // 551
              console.table(performance);                                                                              // 552
            }                                                                                                          // 553
            else {                                                                                                     // 554
              $.each(performance, function(index, data) {                                                              // 555
                console.log(data['Name'] + ': ' + data['Execution Time']+'ms');                                        // 556
              });                                                                                                      // 557
            }                                                                                                          // 558
            console.groupEnd();                                                                                        // 559
          }                                                                                                            // 560
          performance = [];                                                                                            // 561
        }                                                                                                              // 562
      },                                                                                                               // 563
      invoke: function(query, passedArguments, context) {                                                              // 564
        var                                                                                                            // 565
          maxDepth,                                                                                                    // 566
          found,                                                                                                       // 567
          response                                                                                                     // 568
        ;                                                                                                              // 569
        passedArguments = passedArguments || queryArguments;                                                           // 570
        context         = element         || context;                                                                  // 571
        if(typeof query == 'string' && instance !== undefined) {                                                       // 572
          query    = query.split(/[\. ]/);                                                                             // 573
          maxDepth = query.length - 1;                                                                                 // 574
          $.each(query, function(depth, value) {                                                                       // 575
            var camelCaseValue = (depth != maxDepth)                                                                   // 576
              ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)                           // 577
              : query                                                                                                  // 578
            ;                                                                                                          // 579
            if( $.isPlainObject( instance[value] ) && (depth != maxDepth) ) {                                          // 580
              instance = instance[value];                                                                              // 581
            }                                                                                                          // 582
            else if( $.isPlainObject( instance[camelCaseValue] ) && (depth != maxDepth) ) {                            // 583
              instance = instance[camelCaseValue];                                                                     // 584
            }                                                                                                          // 585
            else if( instance[value] !== undefined ) {                                                                 // 586
              found = instance[value];                                                                                 // 587
              return false;                                                                                            // 588
            }                                                                                                          // 589
            else if( instance[camelCaseValue] !== undefined ) {                                                        // 590
              found = instance[camelCaseValue];                                                                        // 591
              return false;                                                                                            // 592
            }                                                                                                          // 593
            else {                                                                                                     // 594
              module.error(error.method, query);                                                                       // 595
              return false;                                                                                            // 596
            }                                                                                                          // 597
          });                                                                                                          // 598
        }                                                                                                              // 599
        if ( $.isFunction( found ) ) {                                                                                 // 600
          response = found.apply(context, passedArguments);                                                            // 601
        }                                                                                                              // 602
        else if(found !== undefined) {                                                                                 // 603
          response = found;                                                                                            // 604
        }                                                                                                              // 605
        if($.isArray(returnedValue)) {                                                                                 // 606
          returnedValue.push(response);                                                                                // 607
        }                                                                                                              // 608
        else if(returnedValue !== undefined) {                                                                         // 609
          returnedValue = [returnedValue, response];                                                                   // 610
        }                                                                                                              // 611
        else if(response !== undefined) {                                                                              // 612
          returnedValue = response;                                                                                    // 613
        }                                                                                                              // 614
        return found;                                                                                                  // 615
      }                                                                                                                // 616
    };                                                                                                                 // 617
                                                                                                                       // 618
    if(methodInvoked) {                                                                                                // 619
      if(instance === undefined) {                                                                                     // 620
        module.initialize();                                                                                           // 621
      }                                                                                                                // 622
      module.invoke(query);                                                                                            // 623
    }                                                                                                                  // 624
    else {                                                                                                             // 625
      if(instance !== undefined) {                                                                                     // 626
        module.destroy();                                                                                              // 627
      }                                                                                                                // 628
      module.initialize();                                                                                             // 629
    }                                                                                                                  // 630
                                                                                                                       // 631
    return (returnedValue !== undefined)                                                                               // 632
      ? returnedValue                                                                                                  // 633
      : this                                                                                                           // 634
    ;                                                                                                                  // 635
                                                                                                                       // 636
  };                                                                                                                   // 637
                                                                                                                       // 638
  // shortcut for tabbed content with no defined navigation                                                            // 639
  $.tab = function(settings) {                                                                                         // 640
    $(window).tab(settings);                                                                                           // 641
  };                                                                                                                   // 642
                                                                                                                       // 643
  $.fn.tab.settings = {                                                                                                // 644
                                                                                                                       // 645
    name        : 'Tab',                                                                                               // 646
    verbose     : true,                                                                                                // 647
    debug       : true,                                                                                                // 648
    performance : true,                                                                                                // 649
    namespace   : 'tab',                                                                                               // 650
                                                                                                                       // 651
    // only called first time a tab's content is loaded (when remote source)                                           // 652
    onTabInit   : function(tabPath, parameterArray, historyEvent) {},                                                  // 653
    // called on every load                                                                                            // 654
    onTabLoad   : function(tabPath, parameterArray, historyEvent) {},                                                  // 655
                                                                                                                       // 656
    templates   : {                                                                                                    // 657
      determineTitle: function(tabArray) {}                                                                            // 658
    },                                                                                                                 // 659
                                                                                                                       // 660
    // uses pjax style endpoints fetching content from same url with remote-content headers                            // 661
    auto            : false,                                                                                           // 662
    history         : true,                                                                                            // 663
    historyType     : 'hash',                                                                                          // 664
    path            : false,                                                                                           // 665
                                                                                                                       // 666
    context         : 'body',                                                                                          // 667
                                                                                                                       // 668
    // max depth a tab can be nested                                                                                   // 669
    maxDepth        : 25,                                                                                              // 670
    // dont load content on first load                                                                                 // 671
    ignoreFirstLoad : false,                                                                                           // 672
    // load tab content new every tab click                                                                            // 673
    alwaysRefresh   : false,                                                                                           // 674
    // cache the content requests to pull locally                                                                      // 675
    cache           : true,                                                                                            // 676
    // settings for api call                                                                                           // 677
    apiSettings     : false,                                                                                           // 678
                                                                                                                       // 679
    error: {                                                                                                           // 680
      api        : 'You attempted to load content without API module',                                                 // 681
      method     : 'The method you called is not defined',                                                             // 682
      missingTab : 'Tab cannot be found',                                                                              // 683
      noContent  : 'The tab you specified is missing a content url.',                                                  // 684
      path       : 'History enabled, but no path was specified',                                                       // 685
      recursion  : 'Max recursive depth reached',                                                                      // 686
      state      : 'The state library has not been initialized'                                                        // 687
    },                                                                                                                 // 688
                                                                                                                       // 689
    metadata : {                                                                                                       // 690
      tab    : 'tab',                                                                                                  // 691
      loaded : 'loaded',                                                                                               // 692
      promise: 'promise'                                                                                               // 693
    },                                                                                                                 // 694
                                                                                                                       // 695
    className   : {                                                                                                    // 696
      loading : 'loading',                                                                                             // 697
      active  : 'active'                                                                                               // 698
    },                                                                                                                 // 699
                                                                                                                       // 700
    selector    : {                                                                                                    // 701
      tabs : '.ui.tab'                                                                                                 // 702
    }                                                                                                                  // 703
                                                                                                                       // 704
  };                                                                                                                   // 705
                                                                                                                       // 706
})( jQuery, window , document );                                                                                       // 707
                                                                                                                       // 708
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}).call(this);






(function () {

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// packages/semantic-ui/lib/semantic-ui/build/uncompressed/modules/video.js                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/*  ******************************                                                                                     // 1
  Module - Video                                                                                                       // 2
  Author: Jack Lukic                                                                                                   // 3
                                                                                                                       // 4
  This is a video playlist and video embed plugin which helps                                                          // 5
  provide helpers for adding embed code for vimeo and youtube and                                                      // 6
  abstracting event handlers for each library                                                                          // 7
                                                                                                                       // 8
******************************  */                                                                                     // 9
                                                                                                                       // 10
;(function ($, window, document, undefined) {                                                                          // 11
                                                                                                                       // 12
$.fn.video = function(parameters) {                                                                                    // 13
                                                                                                                       // 14
  var                                                                                                                  // 15
    $allModules     = $(this),                                                                                         // 16
                                                                                                                       // 17
    moduleSelector  = $allModules.selector || '',                                                                      // 18
                                                                                                                       // 19
    time            = new Date().getTime(),                                                                            // 20
    performance     = [],                                                                                              // 21
                                                                                                                       // 22
    query           = arguments[0],                                                                                    // 23
    methodInvoked   = (typeof query == 'string'),                                                                      // 24
    queryArguments  = [].slice.call(arguments, 1),                                                                     // 25
                                                                                                                       // 26
    returnedValue                                                                                                      // 27
  ;                                                                                                                    // 28
                                                                                                                       // 29
  $allModules                                                                                                          // 30
    .each(function() {                                                                                                 // 31
      var                                                                                                              // 32
        settings        = ( $.isPlainObject(parameters) )                                                              // 33
          ? $.extend(true, {}, $.fn.video.settings, parameters)                                                        // 34
          : $.extend({}, $.fn.video.settings),                                                                         // 35
                                                                                                                       // 36
        selector        = settings.selector,                                                                           // 37
        className       = settings.className,                                                                          // 38
        error           = settings.error,                                                                              // 39
        metadata        = settings.metadata,                                                                           // 40
        namespace       = settings.namespace,                                                                          // 41
                                                                                                                       // 42
        eventNamespace  = '.' + namespace,                                                                             // 43
        moduleNamespace = 'module-' + namespace,                                                                       // 44
                                                                                                                       // 45
        $module         = $(this),                                                                                     // 46
        $placeholder    = $module.find(selector.placeholder),                                                          // 47
        $playButton     = $module.find(selector.playButton),                                                           // 48
        $embed          = $module.find(selector.embed),                                                                // 49
                                                                                                                       // 50
        element         = this,                                                                                        // 51
        instance        = $module.data(moduleNamespace),                                                               // 52
        module                                                                                                         // 53
      ;                                                                                                                // 54
                                                                                                                       // 55
      module = {                                                                                                       // 56
                                                                                                                       // 57
        initialize: function() {                                                                                       // 58
          module.debug('Initializing video');                                                                          // 59
          $placeholder                                                                                                 // 60
            .on('click' + eventNamespace, module.play)                                                                 // 61
          ;                                                                                                            // 62
          $playButton                                                                                                  // 63
            .on('click' + eventNamespace, module.play)                                                                 // 64
          ;                                                                                                            // 65
          module.instantiate();                                                                                        // 66
        },                                                                                                             // 67
                                                                                                                       // 68
        instantiate: function() {                                                                                      // 69
          module.verbose('Storing instance of module', module);                                                        // 70
          instance = module;                                                                                           // 71
          $module                                                                                                      // 72
            .data(moduleNamespace, module)                                                                             // 73
          ;                                                                                                            // 74
        },                                                                                                             // 75
                                                                                                                       // 76
        destroy: function() {                                                                                          // 77
          module.verbose('Destroying previous instance of video');                                                     // 78
          $module                                                                                                      // 79
            .removeData(moduleNamespace)                                                                               // 80
            .off(eventNamespace)                                                                                       // 81
          ;                                                                                                            // 82
          $placeholder                                                                                                 // 83
            .off(eventNamespace)                                                                                       // 84
          ;                                                                                                            // 85
          $playButton                                                                                                  // 86
            .off(eventNamespace)                                                                                       // 87
          ;                                                                                                            // 88
        },                                                                                                             // 89
                                                                                                                       // 90
        // sets new video                                                                                              // 91
        change: function(source, id, url) {                                                                            // 92
          module.debug('Changing video to ', source, id, url);                                                         // 93
          $module                                                                                                      // 94
            .data(metadata.source, source)                                                                             // 95
            .data(metadata.id, id)                                                                                     // 96
            .data(metadata.url, url)                                                                                   // 97
          ;                                                                                                            // 98
          settings.onChange();                                                                                         // 99
        },                                                                                                             // 100
                                                                                                                       // 101
        // clears video embed                                                                                          // 102
        reset: function() {                                                                                            // 103
          module.debug('Clearing video embed and showing placeholder');                                                // 104
          $module                                                                                                      // 105
            .removeClass(className.active)                                                                             // 106
          ;                                                                                                            // 107
          $embed                                                                                                       // 108
            .html(' ')                                                                                                 // 109
          ;                                                                                                            // 110
          $placeholder                                                                                                 // 111
            .show()                                                                                                    // 112
          ;                                                                                                            // 113
          settings.onReset();                                                                                          // 114
        },                                                                                                             // 115
                                                                                                                       // 116
        // plays current video                                                                                         // 117
        play: function() {                                                                                             // 118
          module.debug('Playing video');                                                                               // 119
          var                                                                                                          // 120
            source = $module.data(metadata.source) || false,                                                           // 121
            url    = $module.data(metadata.url)    || false,                                                           // 122
            id     = $module.data(metadata.id)     || false                                                            // 123
          ;                                                                                                            // 124
          $embed                                                                                                       // 125
            .html( module.generate.html(source, id, url) )                                                             // 126
          ;                                                                                                            // 127
          $module                                                                                                      // 128
            .addClass(className.active)                                                                                // 129
          ;                                                                                                            // 130
          settings.onPlay();                                                                                           // 131
        },                                                                                                             // 132
                                                                                                                       // 133
        generate: {                                                                                                    // 134
          // generates iframe html                                                                                     // 135
          html: function(source, id, url) {                                                                            // 136
            module.debug('Generating embed html');                                                                     // 137
            var                                                                                                        // 138
              width = (settings.width == 'auto')                                                                       // 139
                ? $module.width()                                                                                      // 140
                : settings.width,                                                                                      // 141
              height = (settings.height == 'auto')                                                                     // 142
                ? $module.height()                                                                                     // 143
                : settings.height,                                                                                     // 144
              html                                                                                                     // 145
            ;                                                                                                          // 146
            if(source && id) {                                                                                         // 147
              if(source == 'vimeo') {                                                                                  // 148
                html = ''                                                                                              // 149
                  + '<iframe src="http://player.vimeo.com/video/' + id + '?=' + module.generate.url(source) + '"'      // 150
                  + ' width="' + width + '" height="' + height + '"'                                                   // 151
                  + ' frameborder="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>'              // 152
                ;                                                                                                      // 153
              }                                                                                                        // 154
              else if(source == 'youtube') {                                                                           // 155
                html = ''                                                                                              // 156
                  + '<iframe src="http://www.youtube.com/embed/' + id + '?=' + module.generate.url(source) + '"'       // 157
                  + ' width="' + width + '" height="' + height + '"'                                                   // 158
                  + ' frameborder="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>'              // 159
                ;                                                                                                      // 160
              }                                                                                                        // 161
            }                                                                                                          // 162
            else if(url) {                                                                                             // 163
              html = ''                                                                                                // 164
                + '<iframe src="' + url + '"'                                                                          // 165
                + ' width="' + width + '" height="' + height + '"'                                                     // 166
                + ' frameborder="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>'                // 167
              ;                                                                                                        // 168
            }                                                                                                          // 169
            else {                                                                                                     // 170
              module.error(error.noVideo);                                                                             // 171
            }                                                                                                          // 172
            return html;                                                                                               // 173
          },                                                                                                           // 174
                                                                                                                       // 175
          // generate url parameters                                                                                   // 176
          url: function(source) {                                                                                      // 177
            var                                                                                                        // 178
              api      = (settings.api)                                                                                // 179
                ? 1                                                                                                    // 180
                : 0,                                                                                                   // 181
              autoplay = (settings.autoplay)                                                                           // 182
                ? 1                                                                                                    // 183
                : 0,                                                                                                   // 184
              hd       = (settings.hd)                                                                                 // 185
                ? 1                                                                                                    // 186
                : 0,                                                                                                   // 187
              showUI   = (settings.showUI)                                                                             // 188
                ? 1                                                                                                    // 189
                : 0,                                                                                                   // 190
              // opposite used for some params                                                                         // 191
              hideUI   = !(settings.showUI)                                                                            // 192
                ? 1                                                                                                    // 193
                : 0,                                                                                                   // 194
              url = ''                                                                                                 // 195
            ;                                                                                                          // 196
            if(source == 'vimeo') {                                                                                    // 197
              url = ''                                                                                                 // 198
                +      'api='      + api                                                                               // 199
                + '&amp;title='    + showUI                                                                            // 200
                + '&amp;byline='   + showUI                                                                            // 201
                + '&amp;portrait=' + showUI                                                                            // 202
                + '&amp;autoplay=' + autoplay                                                                          // 203
              ;                                                                                                        // 204
              if(settings.color) {                                                                                     // 205
                url += '&amp;color=' + settings.color;                                                                 // 206
              }                                                                                                        // 207
            }                                                                                                          // 208
            if(source == 'ustream') {                                                                                  // 209
              url = ''                                                                                                 // 210
                + 'autoplay=' + autoplay                                                                               // 211
              ;                                                                                                        // 212
              if(settings.color) {                                                                                     // 213
                url += '&amp;color=' + settings.color;                                                                 // 214
              }                                                                                                        // 215
            }                                                                                                          // 216
            else if(source == 'youtube') {                                                                             // 217
              url = ''                                                                                                 // 218
                +      'enablejsapi=' + api                                                                            // 219
                + '&amp;autoplay='    + autoplay                                                                       // 220
                + '&amp;autohide='    + hideUI                                                                         // 221
                + '&amp;hq='          + hd                                                                             // 222
                + '&amp;modestbranding=1'                                                                              // 223
              ;                                                                                                        // 224
              if(settings.color) {                                                                                     // 225
                url += '&amp;color=' + settings.color;                                                                 // 226
              }                                                                                                        // 227
            }                                                                                                          // 228
            return url;                                                                                                // 229
          }                                                                                                            // 230
        },                                                                                                             // 231
                                                                                                                       // 232
        setting: function(name, value) {                                                                               // 233
          if( $.isPlainObject(name) ) {                                                                                // 234
            $.extend(true, settings, name);                                                                            // 235
          }                                                                                                            // 236
          else if(value !== undefined) {                                                                               // 237
            settings[name] = value;                                                                                    // 238
          }                                                                                                            // 239
          else {                                                                                                       // 240
            return settings[name];                                                                                     // 241
          }                                                                                                            // 242
        },                                                                                                             // 243
        internal: function(name, value) {                                                                              // 244
          if( $.isPlainObject(name) ) {                                                                                // 245
            $.extend(true, module, name);                                                                              // 246
          }                                                                                                            // 247
          else if(value !== undefined) {                                                                               // 248
            module[name] = value;                                                                                      // 249
          }                                                                                                            // 250
          else {                                                                                                       // 251
            return module[name];                                                                                       // 252
          }                                                                                                            // 253
        },                                                                                                             // 254
        debug: function() {                                                                                            // 255
          if(settings.debug) {                                                                                         // 256
            if(settings.performance) {                                                                                 // 257
              module.performance.log(arguments);                                                                       // 258
            }                                                                                                          // 259
            else {                                                                                                     // 260
              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');                 // 261
              module.debug.apply(console, arguments);                                                                  // 262
            }                                                                                                          // 263
          }                                                                                                            // 264
        },                                                                                                             // 265
        verbose: function() {                                                                                          // 266
          if(settings.verbose && settings.debug) {                                                                     // 267
            if(settings.performance) {                                                                                 // 268
              module.performance.log(arguments);                                                                       // 269
            }                                                                                                          // 270
            else {                                                                                                     // 271
              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');               // 272
              module.verbose.apply(console, arguments);                                                                // 273
            }                                                                                                          // 274
          }                                                                                                            // 275
        },                                                                                                             // 276
        error: function() {                                                                                            // 277
          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');                    // 278
          module.error.apply(console, arguments);                                                                      // 279
        },                                                                                                             // 280
        performance: {                                                                                                 // 281
          log: function(message) {                                                                                     // 282
            var                                                                                                        // 283
              currentTime,                                                                                             // 284
              executionTime,                                                                                           // 285
              previousTime                                                                                             // 286
            ;                                                                                                          // 287
            if(settings.performance) {                                                                                 // 288
              currentTime   = new Date().getTime();                                                                    // 289
              previousTime  = time || currentTime;                                                                     // 290
              executionTime = currentTime - previousTime;                                                              // 291
              time          = currentTime;                                                                             // 292
              performance.push({                                                                                       // 293
                'Element'        : element,                                                                            // 294
                'Name'           : message[0],                                                                         // 295
                'Arguments'      : [].slice.call(message, 1) || '',                                                    // 296
                'Execution Time' : executionTime                                                                       // 297
              });                                                                                                      // 298
            }                                                                                                          // 299
            clearTimeout(module.performance.timer);                                                                    // 300
            module.performance.timer = setTimeout(module.performance.display, 100);                                    // 301
          },                                                                                                           // 302
          display: function() {                                                                                        // 303
            var                                                                                                        // 304
              title = settings.name + ':',                                                                             // 305
              totalTime = 0                                                                                            // 306
            ;                                                                                                          // 307
            time = false;                                                                                              // 308
            clearTimeout(module.performance.timer);                                                                    // 309
            $.each(performance, function(index, data) {                                                                // 310
              totalTime += data['Execution Time'];                                                                     // 311
            });                                                                                                        // 312
            title += ' ' + totalTime + 'ms';                                                                           // 313
            if(moduleSelector) {                                                                                       // 314
              title += ' \'' + moduleSelector + '\'';                                                                  // 315
            }                                                                                                          // 316
            if($allModules.size() > 1) {                                                                               // 317
              title += ' ' + '(' + $allModules.size() + ')';                                                           // 318
            }                                                                                                          // 319
            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {              // 320
              console.groupCollapsed(title);                                                                           // 321
              if(console.table) {                                                                                      // 322
                console.table(performance);                                                                            // 323
              }                                                                                                        // 324
              else {                                                                                                   // 325
                $.each(performance, function(index, data) {                                                            // 326
                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');                                      // 327
                });                                                                                                    // 328
              }                                                                                                        // 329
              console.groupEnd();                                                                                      // 330
            }                                                                                                          // 331
            performance = [];                                                                                          // 332
          }                                                                                                            // 333
        },                                                                                                             // 334
        invoke: function(query, passedArguments, context) {                                                            // 335
          var                                                                                                          // 336
            maxDepth,                                                                                                  // 337
            found,                                                                                                     // 338
            response                                                                                                   // 339
          ;                                                                                                            // 340
          passedArguments = passedArguments || queryArguments;                                                         // 341
          context         = element         || context;                                                                // 342
          if(typeof query == 'string' && instance !== undefined) {                                                     // 343
            query    = query.split(/[\. ]/);                                                                           // 344
            maxDepth = query.length - 1;                                                                               // 345
            $.each(query, function(depth, value) {                                                                     // 346
              var camelCaseValue = (depth != maxDepth)                                                                 // 347
                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)                         // 348
                : query                                                                                                // 349
              ;                                                                                                        // 350
              if( $.isPlainObject( instance[camelCaseValue] ) && (depth != maxDepth) ) {                               // 351
                instance = instance[camelCaseValue];                                                                   // 352
              }                                                                                                        // 353
              else if( instance[camelCaseValue] !== undefined ) {                                                      // 354
                found = instance[camelCaseValue];                                                                      // 355
                return false;                                                                                          // 356
              }                                                                                                        // 357
              else if( $.isPlainObject( instance[value] ) && (depth != maxDepth) ) {                                   // 358
                instance = instance[value];                                                                            // 359
              }                                                                                                        // 360
              else if( instance[value] !== undefined ) {                                                               // 361
                found = instance[value];                                                                               // 362
                return false;                                                                                          // 363
              }                                                                                                        // 364
              else {                                                                                                   // 365
                module.error(error.method, query);                                                                     // 366
                return false;                                                                                          // 367
              }                                                                                                        // 368
            });                                                                                                        // 369
          }                                                                                                            // 370
          if ( $.isFunction( found ) ) {                                                                               // 371
            response = found.apply(context, passedArguments);                                                          // 372
          }                                                                                                            // 373
          else if(found !== undefined) {                                                                               // 374
            response = found;                                                                                          // 375
          }                                                                                                            // 376
          if($.isArray(returnedValue)) {                                                                               // 377
            returnedValue.push(response);                                                                              // 378
          }                                                                                                            // 379
          else if(returnedValue !== undefined) {                                                                       // 380
            returnedValue = [returnedValue, response];                                                                 // 381
          }                                                                                                            // 382
          else if(response !== undefined) {                                                                            // 383
            returnedValue = response;                                                                                  // 384
          }                                                                                                            // 385
          return found;                                                                                                // 386
        }                                                                                                              // 387
      };                                                                                                               // 388
                                                                                                                       // 389
      if(methodInvoked) {                                                                                              // 390
        if(instance === undefined) {                                                                                   // 391
          module.initialize();                                                                                         // 392
        }                                                                                                              // 393
        module.invoke(query);                                                                                          // 394
      }                                                                                                                // 395
      else {                                                                                                           // 396
        if(instance !== undefined) {                                                                                   // 397
          module.destroy();                                                                                            // 398
        }                                                                                                              // 399
        module.initialize();                                                                                           // 400
      }                                                                                                                // 401
    })                                                                                                                 // 402
  ;                                                                                                                    // 403
  return (returnedValue !== undefined)                                                                                 // 404
    ? returnedValue                                                                                                    // 405
    : this                                                                                                             // 406
  ;                                                                                                                    // 407
};                                                                                                                     // 408
                                                                                                                       // 409
$.fn.video.settings = {                                                                                                // 410
                                                                                                                       // 411
  name        : 'Video',                                                                                               // 412
  namespace   : 'video',                                                                                               // 413
                                                                                                                       // 414
  debug       : true,                                                                                                  // 415
  verbose     : true,                                                                                                  // 416
  performance : true,                                                                                                  // 417
                                                                                                                       // 418
  metadata    : {                                                                                                      // 419
    source : 'source',                                                                                                 // 420
    id     : 'id',                                                                                                     // 421
    url    : 'url'                                                                                                     // 422
  },                                                                                                                   // 423
                                                                                                                       // 424
  onPlay   : function(){},                                                                                             // 425
  onReset  : function(){},                                                                                             // 426
  onChange : function(){},                                                                                             // 427
                                                                                                                       // 428
  // callbacks not coded yet (needs to use jsapi)                                                                      // 429
  onPause  : function() {},                                                                                            // 430
  onStop   : function() {},                                                                                            // 431
                                                                                                                       // 432
  width    : 'auto',                                                                                                   // 433
  height   : 'auto',                                                                                                   // 434
                                                                                                                       // 435
  autoplay : false,                                                                                                    // 436
  color    : '#442359',                                                                                                // 437
  hd       : true,                                                                                                     // 438
  showUI   : false,                                                                                                    // 439
  api      : true,                                                                                                     // 440
                                                                                                                       // 441
  error      : {                                                                                                       // 442
    noVideo     : 'No video specified',                                                                                // 443
    method      : 'The method you called is not defined'                                                               // 444
  },                                                                                                                   // 445
                                                                                                                       // 446
  className   : {                                                                                                      // 447
    active      : 'active'                                                                                             // 448
  },                                                                                                                   // 449
                                                                                                                       // 450
  selector    : {                                                                                                      // 451
    embed       : '.embed',                                                                                            // 452
    placeholder : '.placeholder',                                                                                      // 453
    playButton  : '.play'                                                                                              // 454
  }                                                                                                                    // 455
};                                                                                                                     // 456
                                                                                                                       // 457
                                                                                                                       // 458
})( jQuery, window , document );                                                                                       // 459
                                                                                                                       // 460
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}).call(this);


/* Exports */
if (typeof Package === 'undefined') Package = {};
Package['semantic-ui'] = {};

})();

//# sourceMappingURL=e8543b0e4700720f86a276161f8220f5d5347efd.map
