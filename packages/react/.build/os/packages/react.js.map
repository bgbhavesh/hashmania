{"version":3,"file":"/packages/react.js","sources":["react/lib/require-react.js","react/react.js"],"names":[],"mappings":";;;;;;;;AAAA,yC;;;;;;;;;;;;;;;;;;;ACAA,e;AACA,uC;AACA,2D;AACA,M;;AAEA,oC;AACA,uC;AACA,uC;AACA,M;;AAEA,oC;AACA,0F;AACA,mD;AACA,+C;AACA,M;;AAEA,2C;AACA,oD;AACA,kC;AACA,sC;AACA,4F;AACA,gB;AACA,iD;AACA,S;AACA,M;;AAEA,oD;AACA,kC;AACA,+B;AACA,uC;AACA,8B;AACA,M;;AAEA,sC;AACA,kC;AACA,K;;AAEA,E","sourcesContent":["React = Npm.require(\"react-tools\").React;\n","MeteorMixin = {\n    _handleMeteorChange: function(cb) {\n        this.setState({meteor: this.getMeteorState()}, cb);\n    },\n\n    _cancelComputation: function() {\n        this._meteorComputation.stop();\n        this._meteorComputation = null;\n    },\n\n    componentWillMount: function() {\n        this._meteorComputation = Deps.autorun(this._handleMeteorChange.bind(this, null));\n        this._realReplaceState = this.replaceState;\n        this.replaceState = this._replaceState;\n    },\n\n    _replaceState: function(newState, cb) {\n        if (this.state.meteor === newState.meteor) {\n            this.state = newState;\n            this._cancelComputation();\n            this._meteorComputation = Deps.autorun(this._handleMeteorChange.bind(this, cb));\n        } else {\n            this._realReplaceState(newState, cb);\n        }\n    },\n\n    componentWillReceiveProps: function(nextProps) {\n        var oldProps = this.props;\n        this.props = nextProps;\n        this._handleMeteorChange(null);\n        this.props = oldProps;\n    },\n\n    componentWillUnmount: function() {\n        this._cancelComputation();\n    }\n\n};\n"]}