)]}'
{"version":3,"file":"/packages/semantic-ui.js","sources":["semantic-ui/lib/semantic-ui/build/uncompressed/modules/accordion.js","semantic-ui/lib/semantic-ui/build/uncompressed/modules/behavior/api.js","semantic-ui/lib/semantic-ui/build/uncompressed/modules/behavior/colorize.js","semantic-ui/lib/semantic-ui/build/uncompressed/modules/behavior/form.js","semantic-ui/lib/semantic-ui/build/uncompressed/modules/behavior/state.js","semantic-ui/lib/semantic-ui/build/uncompressed/modules/chatroom.js","semantic-ui/lib/semantic-ui/build/uncompressed/modules/checkbox.js","semantic-ui/lib/semantic-ui/build/uncompressed/modules/dimmer.js","semantic-ui/lib/semantic-ui/build/uncompressed/modules/dropdown.js","semantic-ui/lib/semantic-ui/build/uncompressed/modules/modal.js","semantic-ui/lib/semantic-ui/build/uncompressed/modules/nag.js","semantic-ui/lib/semantic-ui/build/uncompressed/modules/popup.js","semantic-ui/lib/semantic-ui/build/uncompressed/modules/rating.js","semantic-ui/lib/semantic-ui/build/uncompressed/modules/search.js","semantic-ui/lib/semantic-ui/build/uncompressed/modules/shape.js","semantic-ui/lib/semantic-ui/build/uncompressed/modules/sidebar.js","semantic-ui/lib/semantic-ui/build/uncompressed/modules/tab.js","semantic-ui/lib/semantic-ui/build/uncompressed/modules/video.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,E;AACA,yB;AACA,wC;AACA,E;AACA,E;AACA,8B;AACA,iC;AACA,qC;AACA,E;AACA,G;;AAEA,6C;;AAEA,uC;AACA,K;AACA,8B;;AAEA,2C;AACA,yB;;AAEA,mC;AACA,iD;AACA,kD;AACA,iB;AACA,G;AACA,a;AACA,sB;AACA,S;AACA,yD;AACA,mE;AACA,kD;;AAEA,6C;AACA,6C;AACA,4C;AACA,yC;;AAEA,0C;AACA,gD;AACA,qD;;AAEA,2B;AACA,gD;AACA,kD;;AAEA,wB;AACA,iD;AACA,c;AACA,O;;AAEA,gB;;AAEA,gC;AACA,4E;AACA,yB;AACA,gB;AACA,6D;AACA,W;AACA,+B;AACA,U;;AAEA,iC;AACA,4B;AACA,iB;AACA,0C;AACA,W;AACA,U;;AAEA,6B;AACA,qE;AACA,iB;AACA,wC;AACA,W;AACA,gB;AACA,gC;AACA,W;AACA,U;;AAEA,gB;AACA,6B;AACA,kD;AACA,e;AACA,qC;AACA,uD;AACA,a;AACA,iC;AACA,Y;AACA,kC;AACA,gE;AACA,mB;AACA,gC;AACA,kC;AACA,yB;AACA,kC;AACA,oC;AACA,a;AACA,W;AACA,U;;AAEA,iC;AACA,mE;AACA,a;AACA,8C;AACA,yD;AACA,0D;AACA,W;AACA,6B;AACA,sC;AACA,kC;AACA,a;AACA,kB;AACA,oF;AACA,a;AACA,W;AACA,gB;AACA,+B;AACA,W;AACA,U;;AAEA,+B;AACA,a;AACA,gD;AACA,2D;AACA,oG;AACA,2D;AACA,2D;AACA,W;AACA,iD;AACA,oE;AACA,qD;AACA,4B;AACA,8C;AACA,e;AACA,8B;AACA,uB;AACA,2B;AACA,4B;AACA,8B;AACA,gE;AACA,wB;AACA,0E;AACA,kC;AACA,kD;AACA,sC;AACA,wC;AACA,+B;AACA,wC;AACA,0C;AACA,mB;AACA,kB;AACA,e;AACA,a;AACA,wB;AACA,yC;AACA,a;AACA,0B;AACA,qB;AACA,yB;AACA,kC;AACA,oC;AACA,sB;AACA,yE;AACA,8B;AACA,6C;AACA,oC;AACA,sC;AACA,iB;AACA,2D;AACA,6D;AACA,gB;AACA,a;AACA,W;AACA,U;;AAEA,gC;AACA,a;AACA,8C;AACA,wD;AACA,W;AACA,oE;AACA,sB;AACA,0C;AACA,W;AACA,wB;AACA,0C;AACA,mB;AACA,mB;AACA,uB;AACA,wB;AACA,0B;AACA,4D;AACA,oB;AACA,oE;AACA,4B;AACA,kC;AACA,oC;AACA,e;AACA,0D;AACA,2D;AACA,c;AACA,W;AACA,U;;AAEA,wC;AACA,uC;AACA,2C;AACA,W;AACA,wC;AACA,mC;AACA,W;AACA,gB;AACA,kC;AACA,W;AACA,U;AACA,yC;AACA,yD;AACA,mC;AACA,yC;AACA,2C;AACA,a;AACA,kB;AACA,mC;AACA,a;AACA,W;AACA,gB;AACA,gC;AACA,W;AACA,U;AACA,2B;AACA,8B;AACA,sC;AACA,gD;AACA,a;AACA,kB;AACA,sG;AACA,qD;AACA,a;AACA,W;AACA,U;AACA,6B;AACA,kD;AACA,sC;AACA,gD;AACA,a;AACA,kB;AACA,wG;AACA,uD;AACA,a;AACA,W;AACA,U;AACA,2B;AACA,mG;AACA,iD;AACA,U;AACA,sB;AACA,kC;AACA,e;AACA,0B;AACA,4B;AACA,0B;AACA,a;AACA,sC;AACA,mD;AACA,kD;AACA,yD;AACA,0C;AACA,gC;AACA,2C;AACA,8C;AACA,mE;AACA,gD;AACA,iB;AACA,a;AACA,mD;AACA,mF;AACA,Y;AACA,+B;AACA,e;AACA,0C;AACA,2B;AACA,a;AACA,yB;AACA,mD;AACA,uD;AACA,kD;AACA,e;AACA,4C;AACA,gC;AACA,qD;AACA,a;AACA,yG;AACA,4C;AACA,iC;AACA,2C;AACA,e;AACA,oB;AACA,2D;AACA,iF;AACA,mB;AACA,e;AACA,iC;AACA,a;AACA,6B;AACA,W;AACA,U;AACA,2D;AACA,a;AACA,qB;AACA,kB;AACA,oB;AACA,W;AACA,8D;AACA,uD;AACA,kE;AACA,4C;AACA,wC;AACA,kD;AACA,sD;AACA,8F;AACA,uB;AACA,e;AACA,wF;AACA,oD;AACA,e;AACA,iE;AACA,iD;AACA,6B;AACA,e;AACA,oF;AACA,2C;AACA,e;AACA,wD;AACA,wC;AACA,6B;AACA,e;AACA,oB;AACA,kD;AACA,6B;AACA,e;AACA,e;AACA,W;AACA,wC;AACA,6D;AACA,W;AACA,wC;AACA,6B;AACA,W;AACA,wC;AACA,yC;AACA,W;AACA,gD;AACA,sD;AACA,W;AACA,2C;AACA,qC;AACA,W;AACA,uB;AACA,S;AACA,Q;AACA,yB;AACA,oC;AACA,8B;AACA,S;AACA,6B;AACA,O;AACA,Y;AACA,oC;AACA,2B;AACA,S;AACA,4B;AACA,O;AACA,M;AACA,G;AACA,sC;AACA,mB;AACA,U;AACA,G;AACA,E;;AAEA,2B;AACA,4B;AACA,4B;;AAEA,qB;AACA,qB;AACA,qB;;AAEA,qB;AACA,qB;;AAEA,oB;AACA,iC;;AAEA,6B;AACA,6B;AACA,6B;;AAEA,U;AACA,sD;AACA,I;;AAEA,iB;AACA,qB;AACA,I;;AAEA,iB;AACA,uB;AACA,wB;AACA,G;;;AAGA,E;;AAEA,c;AACA,qB;AACA,4C;AACA,+C;AACA,wC;AACA,G;AACA,G;;AAEA,gC;;;;;;;;;;;;;;;;;;;;ACraA,E;AACA,mB;AACA,wC;AACA,E;AACA,E;AACA,8B;AACA,iC;AACA,qC;AACA,E;AACA,G;;AAEA,+C;;AAEA,2C;;AAEA,O;AACA,sE;;AAEA,0D;AACA,kD;AACA,c;AACA,sB;AACA,iE;AACA,8C;AACA,kC;AACA,qB;AACA,yF;AACA,uC;AACA,oB;AACA,mB;;AAEA,6B;AACA,6C;AACA,2B;;AAEA,+C;AACA,uD;;AAEA,2C;AACA,0C;AACA,uC;;AAEA,sD;;AAEA,qC;AACA,6E;AACA,oD;;AAEA,a;AACA,mB;AACA,K;;AAEA,c;AACA,8B;AACA,W;AACA,sB;;AAEA,gD;AACA,uB;;AAEA,kB;AACA,c;;AAEA,8B;AACA,e;;AAEA,8B;AACA,a;AACA,S;;AAEA,8C;AACA,sE;AACA,2C;AACA,oE;AACA,kD;AACA,S;;AAEA,gD;AACA,sE;;AAEA,oC;AACA,uD;AACA,yC;AACA,yB;AACA,iB;AACA,S;;AAEA,qC;AACA,yD;;AAEA,8D;AACA,oB;AACA,yC;AACA,yB;AACA,iB;AACA,S;;AAEA,6G;AACA,iB;AACA,sB;AACA,gC;AACA,yC;AACA,wB;AACA,iD;AACA,iB;AACA,e;AACA,oD;AACA,c;AACA,sC;AACA,qD;AACA,6D;AACA,+C;AACA,mD;AACA,yF;AACA,iB;AACA,sD;AACA,6F;AACA,iB;AACA,sB;AACA,mF;AACA,iB;AACA,e;AACA,0B;AACA,oB;AACA,iF;AACA,e;AACA,c;AACA,sD;AACA,iB;AACA,qE;AACA,0C;AACA,gC;AACA,wB;AACA,e;AACA,mD;AACA,qC;AACA,wE;AACA,yE;;AAEA,sF;AACA,6F;AACA,oE;AACA,mB;AACA,wB;AACA,0E;AACA,2B;AACA,iE;AACA,sE;AACA,wD;AACA,yB;AACA,uB;AACA,oC;AACA,sD;AACA,uB;AACA,qB;AACA,mB;AACA,0B;AACA,mD;AACA,8C;AACA,mB;AACA,6E;AACA,gD;AACA,0C;AACA,8B;AACA,qD;AACA,uB;AACA,6C;AACA,mB;AACA,mE;AACA,oF;AACA,iB;AACA,sB;AACA,sF;AACA,iB;AACA,e;AACA,c;AACA,S;;AAEA,kC;AACA,gD;AACA,oC;AACA,oC;AACA,oC;AACA,wD;AACA,4B;AACA,2B;AACA,yC;AACA,W;;AAEA,mC;AACA,kB;AACA,wC;AACA,W;AACA,S;;AAEA,+B;AACA,mD;AACA,wC;AACA,6B;AACA,iB;AACA,iD;AACA,e;AACA,uE;AACA,mB;AACA,iC;AACA,iB;AACA,6C;AACA,+F;AACA,+E;AACA,iB;AACA,wB;AACA,gE;AACA,mB;AACA,iC;AACA,iB;AACA,6C;AACA,+F;AACA,+E;AACA,iB;AACA,wB;AACA,yB;AACA,a;AACA,a;AACA,S;;AAEA,8E;AACA,a;AACA,8B;AACA,gC;AACA,sE;AACA,gG;AACA,sD;AACA,mB;AACA,8B;AACA,e;AACA,c;AACA,sC;AACA,iB;AACA,8B;AACA,e;AACA,oC;AACA,yD;AACA,wC;AACA,c;AACA,sD;AACA,iB;AACA,8B;AACA,e;AACA,mE;AACA,qC;AACA,sC;AACA,0E;AACA,0C;AACA,e;AACA,oB;AACA,wB;AACA,+C;AACA,iD;AACA,iB;AACA,e;AACA,c;AACA,S;AACA,mC;AACA,iB;AACA,4C;AACA,oC;AACA,W;AACA,S;AACA,Q;;AAEA,Y;AACA,8B;AACA,wB;AACA,4B;AACA,uB;AACA,W;AACA,U;AACA,iC;AACA,a;AACA,wF;AACA,e;AACA,W;AACA,sB;AACA,uD;AACA,oD;AACA,yC;AACA,a;AACA,kB;AACA,gD;AACA,a;AACA,W;AACA,2C;AACA,4B;AACA,+B;AACA,6C;AACA,W;AACA,qB;AACA,U;AACA,qC;AACA,a;AACA,wB;AACA,W;AACA,mB;AACA,8D;AACA,uD;;AAEA,8B;AACA,sE;AACA,kE;AACA,mB;AACA,iF;AACA,uF;AACA,mC;AACA,wD;AACA,0C;AACA,qC;AACA,iB;AACA,yG;AACA,wC;AACA,yC;AACA,2E;AACA,6D;AACA,iB;AACA,sC;AACA,gE;AACA,8D;AACA,8B;AACA,+B;AACA,iB;AACA,sB;AACA,8D;AACA,iB;AACA,iB;AACA,a;AACA,W;AACA,qB;AACA,S;AACA,Q;;AAEA,0B;AACA,yB;AACA,e;AACA,wC;AACA,oC;AACA,S;AACA,gB;AACA,uC;AACA,yC;AACA,S;AACA,Q;;AAEA,sC;AACA,qC;AACA,yC;AACA,S;AACA,sC;AACA,iC;AACA,S;AACA,c;AACA,gC;AACA,S;AACA,Q;AACA,uC;AACA,qC;AACA,uC;AACA,S;AACA,sC;AACA,+B;AACA,S;AACA,c;AACA,8B;AACA,S;AACA,Q;AACA,yB;AACA,4B;AACA,oC;AACA,8C;AACA,W;AACA,gB;AACA,oG;AACA,mD;AACA,W;AACA,S;AACA,Q;AACA,2B;AACA,gD;AACA,oC;AACA,8C;AACA,W;AACA,gB;AACA,sG;AACA,qD;AACA,W;AACA,S;AACA,Q;AACA,yB;AACA,iG;AACA,+C;AACA,Q;AACA,oB;AACA,gC;AACA,a;AACA,wB;AACA,0B;AACA,wB;AACA,W;AACA,oC;AACA,iD;AACA,gD;AACA,uD;AACA,wC;AACA,8B;AACA,yC;AACA,4C;AACA,iE;AACA,8C;AACA,e;AACA,W;AACA,iD;AACA,iF;AACA,U;AACA,6B;AACA,a;AACA,wC;AACA,yB;AACA,W;AACA,uB;AACA,iD;AACA,qD;AACA,gD;AACA,a;AACA,0C;AACA,8B;AACA,mD;AACA,W;AACA,uG;AACA,0C;AACA,+B;AACA,yC;AACA,a;AACA,kB;AACA,yD;AACA,+E;AACA,iB;AACA,a;AACA,+B;AACA,W;AACA,2B;AACA,S;AACA,Q;AACA,yD;AACA,W;AACA,mB;AACA,gB;AACA,kB;AACA,S;AACA,4D;AACA,qD;AACA,gE;AACA,0C;AACA,sC;AACA,gD;AACA,oD;AACA,4F;AACA,qB;AACA,a;AACA,6E;AACA,yC;AACA,a;AACA,2F;AACA,kD;AACA,a;AACA,sD;AACA,sC;AACA,2B;AACA,a;AACA,+D;AACA,+C;AACA,2B;AACA,a;AACA,kB;AACA,gD;AACA,2B;AACA,a;AACA,a;AACA,S;AACA,sC;AACA,2D;AACA,S;AACA,sC;AACA,2B;AACA,S;AACA,sC;AACA,uC;AACA,S;AACA,8C;AACA,oD;AACA,S;AACA,yC;AACA,mC;AACA,S;AACA,qB;AACA,O;AACA,M;;AAEA,uB;AACA,kC;AACA,4B;AACA,O;AACA,2B;AACA,K;AACA,U;AACA,kC;AACA,yB;AACA,O;AACA,0B;AACA,K;;AAEA,wC;AACA,qB;AACA,Y;AACA,K;AACA,I;;AAEA,+C;AACA,yC;AACA,W;AACA,uB;AACA,W;AACA,2D;AACA,6B;AACA,4C;;AAEA,iD;AACA,sH;AACA,6G;AACA,gB;AACA,S;AACA,kB;AACA,kC;AACA,qD;AACA,iC;AACA,0E;AACA,e;AACA,a;AACA,kB;AACA,qB;AACA,gE;AACA,e;AACA,a;AACA,Y;AACA,6B;AACA,kF;AACA,+C;AACA,a;AACA,W;AACA,U;AACA,4B;AACA,Q;AACA,K;AACA,gB;AACA,I;;AAEA,oB;;AAEA,wB;AACA,wB;;AAEA,uB;AACA,uB;AACA,uB;;AAEA,qB;;AAEA,sC;AACA,sB;AACA,M;AACA,mC;AACA,wC;AACA,wC;AACA,yC;AACA,wB;;AAEA,a;AACA,kE;AACA,gE;AACA,gE;;AAEA,kD;AACA,gE;AACA,mE;AACA,0E;AACA,kD;AACA,4E;AACA,mE;AACA,M;;AAEA,gB;AACA,0B;AACA,uB;AACA,M;;AAEA,e;AACA,yB;AACA,0B;AACA,qB;AACA,M;;AAEA,sC;;AAEA,0B;AACA,0B;AACA,0B;AACA,0B;;AAEA,0B;;AAEA,0B;AACA,uB;AACA,2B;AACA,yB;;AAEA,wB;AACA,wB;;AAEA,I;;AAEA,6B;AACA,yC;AACA,yB;AACA,wB;AACA,I;;AAEA,gC;;;;;;;;;;;;;;;;;;ACznBA,E;AACA,wB;AACA,wC;AACA,E;AACA,E;AACA,8B;AACA,iC;AACA,qC;AACA,E;AACA,G;;AAEA,+C;;AAEA,wC;AACA,O;AACA,+E;AACA,wB;AACA,0C;AACA,K;AACA,W;AACA,qC;;AAEA,W;AACA,oC;;AAEA,+C;AACA,+C;AACA,+C;;AAEA,wC;;AAEA,iB;AACA,sB;AACA,uB;AACA,yB;;AAEA,gB;AACA,oB;;AAEA,gB;AACA,iB;;AAEA,sB;AACA,sC;AACA,qC;AACA,yC;AACA,qC;;AAEA,wB;AACA,2D;AACA,gB;AACA,S;;AAEA,kB;;AAEA,0C;AACA,oD;;AAEA,uE;AACA,kD;AACA,2B;AACA,a;AACA,wB;AACA,Y;;AAEA,qC;AACA,gC;AACA,sC;AACA,a;AACA,kB;AACA,yB;AACA,a;AACA,Y;;AAEA,mC;AACA,8C;AACA,6E;AACA,iF;AACA,iE;AACA,kE;AACA,6C;AACA,gD;AACA,a;AACA,Y;;AAEA,kC;AACA,6D;AACA,+C;;AAEA,uC;AACA,qC;AACA,uC;;AAEA,8C;AACA,uC;AACA,wC;AACA,mB;AACA,uB;AACA,sD;AACA,iB;AACA,iB;AACA,a;AACA,Y;;AAEA,8B;AACA,4C;AACA,qC;AACA,oC;AACA,mC;AACA,oC;AACA,e;AACA,Y;;AAEA,mB;AACA,+C;AACA,wD;AACA,mD;AACA,iD;AACA,6B;AACA,e;AACA,wC;AACA,8B;AACA,a;AACA,Y;;AAEA,mB;AACA,gC;AACA,gD;;AAEA,2C;AACA,4C;AACA,2C;AACA,4C;AACA,2C;AACA,4C;;AAEA,2D;AACA,4D;AACA,8D;;AAEA,qB;AACA,qC;AACA,e;AACA,8E;AACA,c;AACA,sC;AACA,8C;AACA,mD;AACA,2D;AACA,c;AACA,+B;AACA,0D;AACA,kD;AACA,uB;AACA,e;AACA,8F;AACA,gE;AACA,a;AACA,Y;;AAEA,iB;;AAEA,uC;AACA,4C;AACA,kD;AACA,yB;AACA,+C;AACA,qD;AACA,gE;AACA,6B;AACA,kB;AACA,e;AACA,oB;AACA,4C;AACA,2B;AACA,e;AACA,c;;AAEA,gC;AACA,6D;AACA,yD;AACA,6E;AACA,iB;AACA,a;;AAEA,Y;;AAEA,kD;AACA,gC;AACA,8C;AACA,2E;AACA,e;AACA,oB;AACA,6D;AACA,e;AACA,a;AACA,Y;AACA,yC;AACA,8D;AACA,Y;AACA,kE;AACA,e;AACA,oB;AACA,a;AACA,4F;;AAEA,yE;AACA,iD;AACA,wD;AACA,yD;AACA,4C;AACA,8B;AACA,iB;AACA,2D;AACA,0C;AACA,8B;AACA,iB;AACA,oD;AACA,6B;AACA,iB;AACA,a;AACA,6C;AACA,sD;AACA,qB;AACA,a;AACA,W;;AAEA,U;AACA,uD;AACA,kG;AACA,8C;AACA,+E;AACA,W;AACA,4G;AACA,S;AACA,uB;AACA,4B;AACA,Q;AACA,K;AACA,gB;AACA,I;;AAEA,4B;AACA,kC;AACA,qB;AACA,2B;;AAEA,yE;;AAEA,uD;AACA,qB;AACA,kE;AACA,mB;;AAEA,e;AACA,sB;AACA,oB;AACA,M;;AAEA,Y;AACA,qD;AACA,uD;AACA,wE;AACA,8D;AACA,6H;AACA,K;;AAEA,I;;AAEA,gC;;;;;;;;;;;;;;;;;;;AC7QA,E;AACA,+B;AACA,wC;AACA,E;AACA,E;AACA,8B;AACA,iC;AACA,qC;AACA,E;AACA,G;;AAEA,+C;;AAEA,0C;AACA,K;AACA,8B;;AAEA,yE;AACA,wE;;AAEA,yC;AACA,wC;AACA,wC;AACA,yC;AACA,qC;;AAEA,sC;AACA,4C;;AAEA,iD;;AAEA,2C;AACA,yB;;AAEA,mC;AACA,iD;AACA,kD;AACA,iB;AACA,G;AACA,a;AACA,sB;AACA,S;AACA,6B;AACA,kD;AACA,kD;AACA,oD;AACA,mD;AACA,mD;;AAEA,wB;;AAEA,0B;AACA,mD;AACA,c;AACA,O;;AAEA,qB;;AAEA,gC;AACA,wF;AACA,0C;AACA,kB;AACA,yE;AACA,a;AACA,W;AACA,iB;AACA,gE;AACA,W;AACA,gB;AACA,iE;AACA,W;AACA,iB;AACA,wD;AACA,W;AACA,gB;AACA,qF;AACA,W;AACA,+B;AACA,U;;AAEA,iC;AACA,+D;AACA,4B;AACA,iB;AACA,0C;AACA,W;AACA,U;;AAEA,6B;AACA,iE;AACA,iB;AACA,gC;AACA,wC;AACA,W;AACA,U;;AAEA,6B;AACA,sD;AACA,gD;AACA,U;;AAEA,4B;AACA,qD;AACA,iB;AACA,qB;AACA,W;AACA,U;;AAEA,gB;AACA,kB;AACA,sC;AACA,iB;AACA,kC;AACA,sC;AACA,2B;AACA,8B;AACA,6B;AACA,iB;AACA,e;AACA,0C;AACA,oE;AACA,sB;AACA,yB;AACA,iB;AACA,e;AACA,wF;AACA,mE;AACA,uB;AACA,2C;AACA,iB;AACA,sB;AACA,0E;AACA,iB;AACA,uC;AACA,6B;AACA,e;AACA,c;AACA,+B;AACA,oE;AACA,kD;AACA,8B;AACA,c;AACA,8B;AACA,iB;AACA,sC;AACA,oD;AACA,e;AACA,2D;AACA,2F;AACA,uE;AACA,e;AACA,yE;AACA,uE;AACA,e;AACA,c;AACA,gC;AACA,iB;AACA,sC;AACA,oD;AACA,e;AACA,+G;AACA,2C;AACA,sD;AACA,6F;AACA,yE;AACA,mC;AACA,e;AACA,a;AACA,W;;AAEA,U;;AAEA,c;AACA,mC;AACA,0E;AACA,uB;AACA,gF;AACA,kC;AACA,yB;AACA,a;AACA,Y;AACA,uC;AACA,wE;AACA,8D;AACA,qD;AACA,a;AACA,+E;AACA,iE;AACA,a;AACA,wG;AACA,0F;AACA,a;AACA,iC;AACA,Y;AACA,wC;AACA,e;AACA,mB;AACA,a;AACA,2D;AACA,gF;AACA,8B;AACA,e;AACA,e;AACA,kC;AACA,W;AACA,U;;AAEA,c;;AAEA,uC;AACA,4F;AACA,8D;AACA,0B;AACA,a;AACA,+E;AACA,0B;AACA,a;AACA,wG;AACA,0B;AACA,a;AACA,yB;AACA,W;;AAEA,U;;AAEA,c;AACA,2C;AACA,e;AACA,gE;AACA,oD;AACA,+D;AACA,mD;AACA,a;AACA,yD;AACA,uB;AACA,wC;AACA,a;AACA,iC;AACA,iC;AACA,4D;AACA,uB;AACA,wC;AACA,iB;AACA,e;AACA,qB;AACA,gC;AACA,e;AACA,iC;AACA,gH;AACA,8F;AACA,qF;AACA,iB;AACA,sB;AACA,wF;AACA,yB;AACA,8C;AACA,mB;AACA,iB;AACA,e;AACA,a;AACA,Y;AACA,oC;AACA,+D;AACA,oB;AACA,uD;AACA,a;AACA,W;AACA,U;;AAEA,iB;AACA,mC;AACA,e;AACA,+D;AACA,mD;AACA,6D;AACA,a;AACA,uB;AACA,2C;AACA,a;AACA,2D;AACA,iE;AACA,8G;AACA,gG;AACA,mC;AACA,mB;AACA,e;AACA,oB;AACA,uB;AACA,yD;AACA,qC;AACA,oB;AACA,iB;AACA,e;AACA,a;AACA,W;AACA,U;;AAEA,mB;;AAEA,iC;AACA,e;AACA,6B;AACA,a;AACA,2B;AACA,4B;AACA,2D;AACA,uD;AACA,iC;AACA,e;AACA,e;AACA,0B;AACA,wE;AACA,qB;AACA,6C;AACA,4C;AACA,e;AACA,uD;AACA,a;AACA,kB;AACA,8C;AACA,gD;AACA,oC;AACA,8C;AACA,e;AACA,mE;AACA,a;AACA,Y;;AAEA,kF;AACA,kC;AACA,e;AACA,+D;AACA,iC;AACA,8B;AACA,a;AACA,2C;AACA,yD;AACA,oG;AACA,gF;AACA,gD;AACA,qC;AACA,iB;AACA,iB;AACA,a;AACA,4B;AACA,uD;AACA,kD;AACA,a;AACA,kB;AACA,0D;AACA,oD;AACA,+D;AACA,2B;AACA,a;AACA,wB;AACA,Y;;AAEA,wE;AACA,6C;AACA,e;AACA,iE;AACA,8C;AACA,gD;;AAEA,2C;AACA,uD;AACA,mC;AACA,wB;AACA,0B;AACA,a;AACA,oE;AACA,2D;AACA,6C;AACA,0D;AACA,8F;AACA,a;AACA,8B;AACA,kB;AACA,qE;AACA,a;AACA,2B;AACA,W;AACA,U;;AAEA,wC;AACA,uC;AACA,2C;AACA,W;AACA,wC;AACA,mC;AACA,W;AACA,gB;AACA,kC;AACA,W;AACA,U;AACA,yC;AACA,uC;AACA,yC;AACA,W;AACA,wC;AACA,iC;AACA,W;AACA,gB;AACA,gC;AACA,W;AACA,U;AACA,2B;AACA,8B;AACA,sC;AACA,gD;AACA,a;AACA,kB;AACA,sG;AACA,qD;AACA,a;AACA,W;AACA,U;AACA,6B;AACA,kD;AACA,sC;AACA,gD;AACA,a;AACA,kB;AACA,wG;AACA,uD;AACA,a;AACA,W;AACA,U;AACA,2B;AACA,mG;AACA,iD;AACA,U;AACA,sB;AACA,kC;AACA,e;AACA,0B;AACA,4B;AACA,0B;AACA,a;AACA,sC;AACA,mD;AACA,kD;AACA,yD;AACA,0C;AACA,gC;AACA,2C;AACA,8C;AACA,mE;AACA,gD;AACA,iB;AACA,a;AACA,mD;AACA,mF;AACA,Y;AACA,+B;AACA,e;AACA,0C;AACA,2B;AACA,a;AACA,yB;AACA,mD;AACA,uD;AACA,kD;AACA,e;AACA,4C;AACA,gC;AACA,qD;AACA,a;AACA,wC;AACA,4D;AACA,a;AACA,yG;AACA,4C;AACA,iC;AACA,2C;AACA,e;AACA,oB;AACA,2D;AACA,iF;AACA,mB;AACA,e;AACA,iC;AACA,a;AACA,6B;AACA,W;AACA,U;AACA,2D;AACA,a;AACA,qB;AACA,kB;AACA,oB;AACA,W;AACA,8D;AACA,uD;AACA,kE;AACA,4C;AACA,wC;AACA,kD;AACA,sD;AACA,8F;AACA,uB;AACA,e;AACA,wF;AACA,oD;AACA,e;AACA,iE;AACA,iD;AACA,6B;AACA,e;AACA,oF;AACA,2C;AACA,e;AACA,wD;AACA,wC;AACA,6B;AACA,e;AACA,oB;AACA,kD;AACA,6B;AACA,e;AACA,e;AACA,W;AACA,wC;AACA,6D;AACA,W;AACA,wC;AACA,6B;AACA,W;AACA,wC;AACA,yC;AACA,W;AACA,gD;AACA,sD;AACA,W;AACA,2C;AACA,qC;AACA,W;AACA,uB;AACA,S;AACA,Q;AACA,yB;AACA,oC;AACA,8B;AACA,S;AACA,6B;AACA,O;AACA,Y;AACA,oC;AACA,2B;AACA,S;AACA,4B;AACA,O;;AAEA,M;AACA,G;;AAEA,sC;AACA,mB;AACA,U;AACA,G;AACA,E;;AAEA,sB;;AAEA,6B;AACA,6B;;AAEA,2B;AACA,2B;AACA,2B;;;AAGA,2B;AACA,+B;AACA,4B;;AAEA,0B;AACA,2B;;AAEA,8B;AACA,0B;;;AAGA,oC;AACA,oC;AACA,kD;AACA,mD;;AAEA,c;AACA,wB;AACA,I;;AAEA,c;AACA,+B;AACA,wC;AACA,uB;AACA,sB;AACA,wB;AACA,uB;AACA,I;;AAEA,e;AACA,sB;AACA,wB;AACA,qB;AACA,+B;AACA,I;;AAEA,W;AACA,U;AACA,sD;AACA,I;;;AAGA,c;AACA,6B;AACA,S;AACA,kC;AACA,O;AACA,6C;AACA,yC;AACA,S;AACA,sB;AACA,qB;AACA,M;AACA,8B;AACA,wB;AACA,iD;AACA,wB;AACA,O;AACA,K;AACA,I;;AAEA,U;AACA,yB;AACA,qD;AACA,M;AACA,4B;AACA,oD;AACA,M;AACA,2B;AACA,S;AACA,gL;AACA,O;AACA,qC;AACA,M;AACA,6C;AACA,kC;AACA,0C;AACA,e;AACA,O;AACA,M;AACA,oC;AACA,iC;AACA,M;AACA,qC;AACA,yE;AACA,yC;AACA,M;AACA,+B;AACA,6B;AACA,M;AACA,2C;AACA,kC;AACA,qC;AACA,e;AACA,O;AACA,M;AACA,6C;AACA,uC;AACA,S;AACA,wB;AACA,qB;AACA,O;AACA,wD;AACA,gE;AACA,O;AACA,uE;AACA,2E;AACA,O;AACA,mF;AACA,oF;AACA,O;AACA,0C;AACA,0D;AACA,e;AACA,O;AACA,M;AACA,0B;AACA,S;AACA,uG;AACA,O;AACA,mC;AACA,K;AACA,G;;AAEA,E;;AAEA,gC;;;;;;;;;;;;;;;;;;;AC1rBA,E;AACA,qB;AACA,wC;AACA,E;AACA,E;AACA,8B;AACA,iC;AACA,qC;AACA,E;AACA,G;;AAEA,+C;;AAEA,mC;AACA,K;AACA,8B;AACA,0E;;AAEA,iD;;AAEA,2C;AACA,yB;;AAEA,mC;AACA,iD;AACA,kD;;AAEA,gB;AACA,mC;AACA,sC;AACA,uC;AACA,uC;AACA,oC;AACA,kC;;AAEA,sC;AACA,4C;;;AAGA,iB;AACA,G;AACA,a;AACA,sB;AACA,S;AACA,gC;;AAEA,6B;AACA,sD;;AAEA,c;AACA,O;AACA,gB;;AAEA,gC;AACA,gD;;AAEA,iE;AACA,kC;AACA,kC;AACA,W;;AAEA,8C;AACA,yD;AACA,0C;AACA,0C;AACA,uF;AACA,wF;AACA,e;AACA,a;AACA,yC;AACA,0C;AACA,qF;AACA,sF;AACA,e;AACA,a;AACA,0C;AACA,0C;AACA,kF;AACA,mF;AACA,e;AACA,a;AACA,+B;AACA,oF;AACA,mF;AACA,qF;AACA,a;AACA,W;AACA,gB;AACA,0C;AACA,qB;AACA,uE;AACA,wE;AACA,e;AACA,a;AACA,yC;AACA,qB;AACA,qE;AACA,sE;AACA,e;AACA,a;AACA,0C;AACA,qB;AACA,kE;AACA,mE;AACA,e;AACA,a;AACA,mB;AACA,oE;AACA,mE;AACA,qE;AACA,a;AACA,W;AACA,+B;AACA,U;;AAEA,iC;AACA,+D;AACA,4B;AACA,iB;AACA,0C;AACA,W;AACA,U;;AAEA,6B;AACA,iE;AACA,iB;AACA,gC;AACA,wC;AACA,W;AACA,U;;AAEA,6B;AACA,sD;AACA,+B;AACA,U;;AAEA,c;AACA,gC;AACA,e;AACA,2E;AACA,mC;AACA,oB;AACA,a;AACA,kE;AACA,wE;AACA,uE;AACA,kE;AACA,e;AACA,e;AACA,W;AACA,U;;AAEA,a;;AAEA,8B;AACA,sD;AACA,Y;AACA,+B;AACA,uD;AACA,Y;AACA,gC;AACA,2D;AACA,Y;;AAEA,+B;AACA,2D;AACA,Y;AACA,gC;AACA,0D;AACA,Y;AACA,mC;AACA,yD;AACA,Y;;AAEA,qD;AACA,8B;AACA,yD;AACA,Y;AACA,6B;AACA,uC;AACA,W;AACA,U;;AAEA,gC;AACA,oD;AACA,+B;AACA,U;AACA,mC;AACA,oD;AACA,gC;AACA,U;;AAEA,iC;AACA,wC;AACA,U;;AAEA,iB;AACA,kC;AACA,sC;AACA,mD;AACA,a;AACA,Y;AACA,wB;AACA,6B;AACA,8C;AACA,Y;AACA,6B;AACA,8C;AACA,Y;AACA,4B;AACA,6C;AACA,Y;AACA,U;;AAEA,kB;AACA,kC;AACA,sC;AACA,sD;AACA,a;AACA,Y;AACA,wB;AACA,6B;AACA,iD;AACA,Y;AACA,6B;AACA,iD;AACA,Y;AACA,4B;AACA,gD;AACA,Y;AACA,U;;AAEA,iB;AACA,6B;AACA,e;AACA,yD;AACA,a;AACA,kE;AACA,+B;AACA,4C;AACA,4C;AACA,e;AACA,oB;AACA,sC;AACA,e;AACA,a;AACA,W;AACA,U;;AAEA,wC;AACA,qF;AACA,0B;AACA,8B;AACA,+C;AACA,a;AACA,8B;AACA,gC;AACA,sD;AACA,wD;AACA,uE;AACA,uE;AACA,iB;AACA,sB;AACA,qD;AACA,wE;AACA,wE;AACA,iB;AACA,sC;AACA,gB;AACA,a;AACA,W;AACA,mE;AACA,gB;AACA,kE;AACA,kE;AACA,W;AACA,U;;AAEA,4D;AACA,iB;;AAEA,6B;AACA,+D;AACA,wC;AACA,wC;AACA,gC;AACA,a;AACA,kB;AACA,kC;AACA,a;AACA,+B;AACA,4B;AACA,a;AACA,kD;AACA,Y;;AAEA,4B;AACA,2C;AACA,wC;AACA,gC;AACA,4E;AACA,iD;AACA,iB;AACA,uC;AACA,gF;AACA,mD;AACA,iB;AACA,e;AACA,oB;AACA,gC;AACA,8E;AACA,iD;AACA,iB;AACA,qC;AACA,8E;AACA,kD;AACA,iB;AACA,e;AACA,a;AACA,W;;AAEA,U;;AAEA,8B;AACA,2D;AACA,oD;AACA,mB;AACA,yC;AACA,a;AACA,4C;AACA,W;AACA,kD;AACA,U;;AAEA,gC;AACA,4D;AACA,sD;AACA,mB;AACA,4C;AACA,a;AACA,8C;AACA,W;AACA,oD;AACA,U;;AAEA,0B;AACA,mE;AACA,oC;AACA,uB;AACA,2B;AACA,mC;AACA,W;AACA,gB;AACA,uB;AACA,2B;AACA,oC;AACA,a;AACA,W;AACA,U;;AAEA,c;AACA,4B;AACA,2C;AACA,2D;AACA,8B;AACA,a;AACA,Y;AACA,oC;AACA,wC;AACA,W;AACA,U;;AAEA,gB;AACA,0C;AACA,e;AACA,8C;AACA,a;AACA,kE;AACA,uD;AACA,0D;AACA,qC;AACA,kC;AACA,+C;AACA,yB;AACA,W;AACA,U;;AAEA,gB;AACA,oD;AACA,4B;AACA,e;AACA,gF;AACA,+E;AACA,a;AACA,2C;AACA,qD;AACA,oE;AACA,+C;AACA,e;AACA,qC;AACA,sE;AACA,iD;AACA,e;AACA,a;AACA,W;AACA,U;;AAEA,iB;AACA,gC;AACA,e;AACA,6C;AACA,a;AACA,8C;AACA,kD;AACA,0C;AACA,uB;AACA,kD;AACA,+C;AACA,+B;AACA,iB;AACA,e;AACA,oB;AACA,uB;AACA,kD;AACA,6B;AACA,iB;AACA,e;AACA,a;AACA,kB;AACA,0E;AACA,a;AACA,W;AACA,U;;AAEA,wC;AACA,wD;AACA,mC;AACA,yC;AACA,6C;AACA,a;AACA,kB;AACA,qC;AACA,a;AACA,W;AACA,gB;AACA,kC;AACA,W;AACA,U;AACA,yC;AACA,yD;AACA,mC;AACA,yC;AACA,2C;AACA,a;AACA,kB;AACA,mC;AACA,a;AACA,W;AACA,gB;AACA,gC;AACA,W;AACA,U;AACA,2B;AACA,8B;AACA,sC;AACA,gD;AACA,a;AACA,kB;AACA,sG;AACA,qD;AACA,a;AACA,W;AACA,U;AACA,6B;AACA,kD;AACA,sC;AACA,gD;AACA,a;AACA,kB;AACA,wG;AACA,uD;AACA,a;AACA,W;AACA,U;AACA,2B;AACA,mG;AACA,iD;AACA,U;AACA,sB;AACA,kC;AACA,e;AACA,0B;AACA,4B;AACA,0B;AACA,a;AACA,sC;AACA,mD;AACA,kD;AACA,yD;AACA,0C;AACA,gC;AACA,2C;AACA,8C;AACA,mE;AACA,gD;AACA,iB;AACA,a;AACA,mD;AACA,mF;AACA,Y;AACA,+B;AACA,e;AACA,0C;AACA,2B;AACA,a;AACA,yB;AACA,mD;AACA,uD;AACA,kD;AACA,e;AACA,4C;AACA,gC;AACA,qD;AACA,a;AACA,wC;AACA,4D;AACA,a;AACA,yG;AACA,4C;AACA,iC;AACA,2C;AACA,e;AACA,oB;AACA,2D;AACA,iF;AACA,mB;AACA,e;AACA,iC;AACA,a;AACA,6B;AACA,W;AACA,U;AACA,2D;AACA,a;AACA,qB;AACA,kB;AACA,oB;AACA,W;AACA,8D;AACA,uD;AACA,kE;AACA,4C;AACA,wC;AACA,kD;AACA,sD;AACA,8F;AACA,uB;AACA,e;AACA,wF;AACA,oD;AACA,e;AACA,iE;AACA,iD;AACA,6B;AACA,e;AACA,oF;AACA,2C;AACA,e;AACA,wD;AACA,wC;AACA,6B;AACA,e;AACA,oB;AACA,kD;AACA,6B;AACA,e;AACA,e;AACA,W;AACA,wC;AACA,6D;AACA,W;AACA,wC;AACA,6B;AACA,W;AACA,wC;AACA,yC;AACA,W;AACA,gD;AACA,sD;AACA,W;AACA,2C;AACA,qC;AACA,W;AACA,uB;AACA,S;AACA,Q;AACA,yB;AACA,oC;AACA,8B;AACA,S;AACA,6B;AACA,O;AACA,Y;AACA,oC;AACA,2B;AACA,S;AACA,4B;AACA,O;;AAEA,M;AACA,G;;AAEA,sC;AACA,mB;AACA,U;AACA,G;AACA,E;;AAEA,uB;;AAEA,gB;AACA,iB;;AAEA,iB;AACA,oB;;AAEA,yB;AACA,oB;;AAEA,yB;AACA,uB;;AAEA,oC;AACA,oB;;AAEA,oC;AACA,+B;AACA,+B;AACA,+B;;AAEA,yB;AACA,+C;AACA,+C;;AAEA,gD;AACA,uB;;AAEA,yE;AACA,wB;;AAEA,kF;AACA,uB;;AAEA,oB;AACA,gB;AACA,mC;AACA,wB;AACA,I;;AAEA,qB;;AAEA,U;AACA,U;AACA,oD;AACA,I;;AAEA,a;AACA,a;AACA,2B;AACA,8B;AACA,I;;AAEA,0B;AACA,c;AACA,sB;AACA,sB;AACA,qB;AACA,uB;AACA,uB;AACA,I;;AAEA,a;AACA,6B;AACA,e;AACA,I;;AAEA,c;AACA,Y;AACA,qB;AACA,qB;AACA,qB;AACA,sB;AACA,qB;AACA,M;AACA,a;AACA,qB;AACA,sB;AACA,qB;AACA,qB;AACA,oB;AACA,K;AACA,I;;AAEA,gB;AACA,mB;AACA,mB;AACA,mB;AACA,oB;AACA,mB;AACA,I;;AAEA,c;AACA,qB;AACA,qB;AACA,qB;AACA,qB;AACA,qB;AACA,oB;AACA,G;;AAEA,E;;;;AAIA,gC;;;;;;;;;;;;;;;;;;;ACptBA,E;AACA,wB;AACA,wC;AACA,E;AACA,E;AACA,8B;AACA,iC;AACA,qC;AACA,E;AACA,G;;AAEA,6C;;AAEA,sC;AACA,K;AACA,6B;AACA,gD;;AAEA,0C;AACA,wB;;AAEA,kC;AACA,gD;AACA,iD;AACA,iB;AACA,G;AACA,S;AACA,sB;AACA,S;AACA,2E;;AAEA,uC;AACA,uC;AACA,sC;AACA,mC;;AAEA,kC;;AAEA,8D;AACA,gE;;AAEA,0D;AACA,sD;AACA,2D;;AAEA,qD;AACA,yD;;AAEA,8D;AACA,+D;;AAEA,iD;AACA,+B;;AAEA,6B;AACA,6B;;AAEA,gB;AACA,qB;;AAEA,gB;AACA,c;;AAEA,e;;AAEA,e;AACA,c;AACA,O;;AAEA,gB;;AAEA,gB;AACA,kC;AACA,2C;AACA,U;;AAEA,gC;;AAEA,mC;AACA,oC;AACA,uC;AACA,W;AACA,gF;AACA,oC;AACA,yB;AACA,W;AACA,uF;AACA,yC;AACA,yB;AACA,W;;AAEA,0B;AACA,kE;AACA,0E;;AAEA,2D;;AAEA,iF;AACA,kE;AACA,kE;AACA,kE;AACA,kE;;AAEA,gE;AACA,uC;AACA,a;;AAEA,+B;AACA,yB;AACA,mE;AACA,W;AACA,uB;AACA,mE;AACA,W;AACA,uB;AACA,oE;AACA,kE;AACA,W;AACA,wB;AACA,+D;AACA,+D;AACA,2D;AACA,W;AACA,yC;AACA,c;AACA,sB;AACA,kD;AACA,mB;AACA,W;AACA,iB;AACA,mC;AACA,wC;AACA,W;;AAEA,U;;AAEA,yB;AACA,6B;AACA,qC;AACA,yB;AACA,0C;AACA,W;AACA,0B;AACA,oC;AACA,6C;AACA,Y;AACA,4D;AACA,oC;AACA,W;AACA,yC;AACA,U;;AAEA,e;;AAEA,mC;AACA,oC;AACA,4C;AACA,wB;AACA,wC;AACA,wB;AACA,iB;AACA,wB;AACA,4D;AACA,e;AACA,a;AACA,Y;;AAEA,kC;AACA,oC;AACA,0C;AACA,+E;AACA,+C;AACA,2E;AACA,wE;AACA,e;AACA,8D;AACA,uC;AACA,uB;AACA,uC;AACA,iB;AACA,e;AACA,oB;AACA,uB;AACA,sC;AACA,iB;AACA,e;AACA,4C;AACA,oB;AACA,mE;AACA,iB;AACA,6C;AACA,e;AACA,wC;AACA,a;AACA,Y;;AAEA,uC;AACA,kC;AACA,0C;AACA,mE;AACA,wC;AACA,qB;AACA,qC;AACA,e;AACA,uB;AACA,mD;AACA,2B;AACA,e;AACA,4C;AACA,oB;AACA,iE;AACA,iB;AACA,6C;AACA,e;AACA,wC;AACA,a;AACA,Y;;AAEA,iB;;AAEA,+D;AACA,uC;AACA,yB;AACA,6C;AACA,4E;AACA,+E;AACA,4E;AACA,mB;AACA,+C;AACA,8C;AACA,qE;AACA,qE;AACA,mB;AACA,mD;AACA,iB;AACA,iB;AACA,qB;AACA,qC;AACA,oD;AACA,+C;AACA,e;AACA,uB;AACA,2B;AACA,e;AACA,wC;AACA,+D;AACA,c;;AAEA,8B;AACA,8B;AACA,kB;AACA,0B;AACA,mE;AACA,oB;AACA,4C;AACA,6C;AACA,uD;AACA,kB;AACA,e;AACA,c;;AAEA,8B;AACA,8B;AACA,kB;AACA,uB;AACA,0B;AACA,2C;AACA,oB;AACA,4C;AACA,6C;AACA,uD;AACA,kB;AACA,e;AACA,a;;AAEA,W;;AAEA,U;;AAEA,kB;;AAEA,0C;AACA,mB;AACA,8B;AACA,iE;AACA,8E;AACA,6C;AACA,e;AACA,c;;AAEA,8B;AACA,iE;AACA,kB;AACA,kC;AACA,e;AACA,a;AACA,Y;;AAEA,+B;AACA,mC;AACA,sD;AACA,qB;AACA,mD;AACA,gC;AACA,0B;AACA,8B;AACA,wC;AACA,oD;AACA,mB;AACA,iB;AACA,iB;AACA,a;AACA,Y;;AAEA,iD;AACA,uC;AACA,yC;AACA,iD;AACA,gD;AACA,sD;AACA,mE;AACA,mF;AACA,uD;AACA,gD;AACA,e;AACA,a;AACA,Y;;AAEA,yC;AACA,sC;AACA,gB;AACA,4D;AACA,a;AACA,yC;AACA,mE;AACA,W;;AAEA,U;;AAEA,4B;AACA,iB;AACA,uC;AACA,W;AACA,iD;AACA,2B;AACA,U;;AAEA,8B;AACA,iB;AACA,0C;AACA,W;AACA,mD;AACA,2B;AACA,U;;AAEA,gB;;AAEA,kB;;AAEA,sC;AACA,qC;AACA,8B;AACA,2C;AACA,iB;AACA,e;AACA,c;;AAEA,oC;AACA,qC;AACA,8B;AACA,8C;AACA,iB;AACA,sC;AACA,e;AACA,a;;AAEA,Y;;AAEA,wC;AACA,8B;AACA,e;AACA,iD;AACA,iD;AACA,a;AACA,kF;AACA,2C;AACA,oC;AACA,sC;AACA,mC;AACA,6B;AACA,iB;AACA,2C;AACA,2B;AACA,wB;AACA,e;;AAEA,a;AACA,Y;;AAEA,kD;AACA,oC;AACA,uD;AACA,2B;AACA,2C;AACA,e;AACA,8B;AACA,a;AACA,kB;AACA,2B;AACA,8C;AACA,e;AACA,gC;AACA,a;AACA,Y;;AAEA,qD;AACA,sC;AACA,yC;AACA,iE;AACA,+B;AACA,6C;AACA,iB;AACA,wC;AACA,e;AACA,oB;AACA,+B;AACA,wC;AACA,iB;AACA,wC;AACA,e;AACA,a;;AAEA,W;AACA,U;;AAEA,gB;;AAEA,yC;AACA,2C;AACA,iD;AACA,a;AACA,yB;AACA,W;;AAEA,U;;AAEA,sC;AACA,iC;AACA,uC;AACA,2C;AACA,W;AACA,gB;AACA,mC;AACA,W;AACA,S;AACA,c;AACA,gC;AACA,S;AACA,Q;AACA,uC;AACA,qC;AACA,uC;AACA,S;AACA,sC;AACA,+B;AACA,S;AACA,c;AACA,8B;AACA,S;AACA,Q;AACA,yB;AACA,4B;AACA,oC;AACA,8C;AACA,W;AACA,gB;AACA,oG;AACA,mD;AACA,W;AACA,S;AACA,Q;AACA,2B;AACA,gD;AACA,oC;AACA,8C;AACA,W;AACA,gB;AACA,sG;AACA,qD;AACA,W;AACA,S;AACA,Q;AACA,yB;AACA,iG;AACA,+C;AACA,Q;AACA,oB;AACA,gC;AACA,a;AACA,wB;AACA,0B;AACA,wB;AACA,W;AACA,oC;AACA,iD;AACA,gD;AACA,uD;AACA,wC;AACA,8B;AACA,yC;AACA,4C;AACA,iE;AACA,8C;AACA,e;AACA,W;AACA,iD;AACA,iF;AACA,U;AACA,6B;AACA,a;AACA,wC;AACA,yB;AACA,W;AACA,uB;AACA,iD;AACA,qD;AACA,gD;AACA,a;AACA,0C;AACA,8B;AACA,mD;AACA,W;AACA,uG;AACA,0C;AACA,+B;AACA,yC;AACA,a;AACA,kB;AACA,yD;AACA,+E;AACA,iB;AACA,a;AACA,+B;AACA,W;AACA,2B;AACA,S;AACA,Q;AACA,yD;AACA,W;AACA,mB;AACA,e;AACA,S;AACA,4D;AACA,qD;AACA,gE;AACA,0C;AACA,sC;AACA,gD;AACA,6E;AACA,yC;AACA,a;AACA,sD;AACA,sC;AACA,a;AACA,kB;AACA,gD;AACA,a;AACA,a;AACA,S;AACA,sC;AACA,uD;AACA,S;AACA,8B;AACA,O;AACA,M;;AAEA,uB;AACA,kC;AACA,4B;AACA,O;AACA,2B;AACA,K;AACA,U;AACA,kC;AACA,yB;AACA,O;AACA,0B;AACA,K;AACA,I;AACA,C;;AAEA,wB;AACA,mB;AACA,U;AACA,G;AACA,E;;AAEA,4B;;AAEA,6B;AACA,4B;AACA,6B;;AAEA,qC;;AAEA,mC;AACA,mC;AACA,mC;AACA,mC;;AAEA,yB;;AAEA,4B;AACA,2B;AACA,2B;;AAEA,0B;AACA,qC;;AAEA,+E;AACA,2B;;AAEA,uB;AACA,6B;AACA,4B;AACA,M;;AAEA,Y;AACA,wD;AACA,wE;AACA,8D;AACA,uD;AACA,M;;AAEA,mB;AACA,yB;AACA,yB;AACA,wB;AACA,uB;AACA,yB;AACA,M;;AAEA,mB;AACA,2C;AACA,+C;AACA,iD;AACA,+B;AACA,qC;AACA,oC;AACA,6C;AACA,oD;AACA,qC;AACA,2C;AACA,M;;AAEA,gB;;AAEA,mC;AACA,yC;AACA,Q;;AAEA,+B;AACA,W;AACA,oB;AACA,sB;AACA,sB;AACA,sB;AACA,sB;AACA,sB;AACA,sB;AACA,sB;AACA,sB;AACA,sB;AACA,sB;AACA,sB;AACA,sB;AACA,sB;AACA,sB;AACA,sB;AACA,sB;AACA,sB;AACA,sB;AACA,sB;AACA,sB;AACA,sB;AACA,sB;AACA,sB;AACA,sB;AACA,sB;AACA,sB;AACA,sB;AACA,sB;AACA,sB;AACA,qB;AACA,W;AACA,S;AACA,oE;AACA,Q;;AAEA,kC;AACA,W;AACA,mB;AACA,S;AACA,kC;AACA,yC;AACA,gD;AACA,8D;AACA,S;AACA,U;AACA,qC;AACA,iD;AACA,6D;AACA,S;AACA,U;AACA,c;AACA,0C;AACA,S;AACA,sB;AACA,8C;AACA,uH;AACA,S;AACA,c;AACA,4E;AACA,S;AACA,kB;AACA,0B;AACA,mB;AACA,oB;AACA,S;AACA,oB;AACA,Q;;AAEA,gC;AACA,iD;AACA,gF;AACA,iB;AACA,S;AACA,Q;AACA,8B;AACA,iD;AACA,8E;AACA,iB;AACA,S;AACA,Q;;AAEA,kC;AACA,W;AACA,mB;AACA,S;AACA,4B;AACA,mC;AACA,S;AACA,mB;AACA,4D;AACA,kC;AACA,qD;AACA,qB;AACA,S;AACA,wC;AACA,4I;AACA,S;AACA,c;AACA,uG;AACA,S;AACA,yB;AACA,oB;AACA,O;;AAEA,K;;AAEA,I;;AAEA,gC;;;;;;;;;;;;;;;;;;;ACpwBA,E;AACA,wB;AACA,wC;AACA,E;AACA,E;AACA,8B;AACA,iC;AACA,qC;AACA,E;AACA,G;;AAEA,+C;;AAEA,sC;AACA,K;AACA,6B;AACA,gD;;AAEA,0C;AACA,wB;;AAEA,kC;AACA,gD;AACA,iD;AACA,iB;AACA,G;;AAEA,a;AACA,sB;AACA,S;AACA,iF;;AAEA,6C;AACA,6C;AACA,yC;;AAEA,0C;AACA,gD;;AAEA,kC;AACA,wE;AACA,gE;;AAEA,iD;AACA,wD;;AAEA,+B;AACA,c;AACA,O;;AAEA,qB;;AAEA,gC;AACA,4D;AACA,mD;AACA,sD;AACA,wC;AACA,oE;AACA,sG;AACA,a;AACA,W;AACA,gB;AACA,mB;AACA,0D;AACA,4C;AACA,a;AACA,kB;AACA,0D;AACA,a;AACA,W;AACA,+B;AACA,U;;AAEA,iC;AACA,+D;AACA,4B;AACA,iB;AACA,0C;AACA,W;AACA,U;;AAEA,6B;AACA,uD;AACA,iB;AACA,gC;AACA,wC;AACA,W;AACA,U;;AAEA,a;AACA,6B;AACA,qD;AACA,Y;AACA,+B;AACA,kF;AACA,Y;AACA,gC;AACA,wC;AACA,W;AACA,U;;AAEA,c;AACA,+B;AACA,2D;AACA,iC;AACA,kC;AACA,a;AACA,W;AACA,U;;AAEA,4B;AACA,oD;AACA,gB;AACA,kC;AACA,W;AACA,qD;AACA,qD;AACA,U;;AAEA,6B;AACA,6C;AACA,gB;AACA,mC;AACA,W;AACA,qD;AACA,sD;AACA,U;;AAEA,iC;AACA,2D;AACA,sC;AACA,4B;AACA,W;AACA,kE;AACA,6B;AACA,W;AACA,U;AACA,wC;AACA,uC;AACA,2C;AACA,W;AACA,wC;AACA,mC;AACA,W;AACA,gB;AACA,kC;AACA,W;AACA,U;AACA,yC;AACA,uC;AACA,yC;AACA,W;AACA,wC;AACA,iC;AACA,W;AACA,gB;AACA,gC;AACA,W;AACA,U;AACA,2B;AACA,8B;AACA,sC;AACA,gD;AACA,a;AACA,kB;AACA,sG;AACA,qD;AACA,a;AACA,W;AACA,U;AACA,6B;AACA,kD;AACA,sC;AACA,gD;AACA,a;AACA,kB;AACA,wG;AACA,uD;AACA,a;AACA,W;AACA,U;AACA,2B;AACA,mG;AACA,iD;AACA,U;AACA,sB;AACA,kC;AACA,e;AACA,0B;AACA,4B;AACA,0B;AACA,a;AACA,sC;AACA,mD;AACA,kD;AACA,yD;AACA,0C;AACA,gC;AACA,2C;AACA,8C;AACA,mE;AACA,gD;AACA,iB;AACA,a;AACA,mD;AACA,mF;AACA,Y;AACA,+B;AACA,e;AACA,0C;AACA,2B;AACA,a;AACA,yB;AACA,mD;AACA,uD;AACA,kD;AACA,e;AACA,4C;AACA,gC;AACA,qD;AACA,a;AACA,yG;AACA,4C;AACA,iC;AACA,2C;AACA,e;AACA,oB;AACA,2D;AACA,iF;AACA,mB;AACA,e;AACA,iC;AACA,a;AACA,6B;AACA,W;AACA,U;AACA,2D;AACA,a;AACA,qB;AACA,kB;AACA,oB;AACA,W;AACA,8D;AACA,uD;AACA,kE;AACA,4C;AACA,wC;AACA,kD;AACA,sD;AACA,8F;AACA,uB;AACA,e;AACA,wF;AACA,oD;AACA,e;AACA,iE;AACA,iD;AACA,6B;AACA,e;AACA,oF;AACA,2C;AACA,e;AACA,wD;AACA,wC;AACA,6B;AACA,e;AACA,oB;AACA,kD;AACA,6B;AACA,e;AACA,e;AACA,W;AACA,wC;AACA,6D;AACA,W;AACA,wC;AACA,6B;AACA,W;AACA,wC;AACA,yC;AACA,W;AACA,gD;AACA,sD;AACA,W;AACA,2C;AACA,qC;AACA,W;AACA,uB;AACA,S;AACA,Q;;AAEA,yB;AACA,oC;AACA,8B;AACA,S;AACA,6B;AACA,O;AACA,Y;AACA,oC;AACA,2B;AACA,S;AACA,4B;AACA,O;AACA,M;AACA,G;;AAEA,sC;AACA,mB;AACA,U;AACA,G;AACA,E;;AAEA,0B;;AAEA,2B;AACA,2B;;AAEA,qB;AACA,qB;AACA,qB;;AAEA,4B;AACA,sB;AACA,uB;;AAEA,6B;AACA,6B;AACA,6B;;AAEA,e;AACA,sD;AACA,I;;AAEA,c;AACA,uD;AACA,oB;AACA,I;;AAEA,e;AACA,oB;AACA,G;;AAEA,E;;AAEA,gC;;;;;;;;;;;;;;;;;;;ACxVA,E;AACA,sB;AACA,wC;AACA,E;AACA,E;AACA,8B;AACA,iC;AACA,qC;AACA,E;AACA,G;;AAEA,+C;;AAEA,oC;AACA,K;AACA,8B;;AAEA,2C;AACA,yB;;AAEA,mC;AACA,iD;AACA,kD;;AAEA,iB;AACA,G;;AAEA,a;AACA,sB;AACA,S;AACA,yD;AACA,gE;AACA,+C;;AAEA,4C;AACA,6C;AACA,6C;AACA,yC;;AAEA,0C;AACA,gD;AACA,qD;;AAEA,sE;AACA,wB;AACA,oB;;AAEA,0B;AACA,gB;AACA,kB;;AAEA,yB;AACA,kD;AACA,c;AACA,O;;AAEA,gB;;AAEA,mC;AACA,oC;AACA,yC;AACA,gC;AACA,W;AACA,gB;AACA,gC;AACA,uC;AACA,oE;AACA,a;AACA,kB;AACA,wC;AACA,a;AACA,W;AACA,U;;AAEA,gC;AACA,wD;AACA,sC;AACA,qB;AACA,6D;AACA,6D;AACA,a;AACA,W;AACA,2C;AACA,qB;AACA,6D;AACA,a;AACA,W;;AAEA,kC;AACA,gE;AACA,oC;AACA,W;;AAEA,iC;AACA,iE;AACA,mB;AACA,kE;AACA,a;AACA,W;AACA,gC;AACA,+B;AACA,U;;AAEA,iC;AACA,+D;AACA,4B;AACA,iB;AACA,4C;AACA,W;AACA,U;;AAEA,6B;AACA,gE;AACA,iB;AACA,wC;AACA,W;AACA,mB;AACA,gC;AACA,W;AACA,iB;AACA,gC;AACA,W;AACA,U;;AAEA,gB;;AAEA,kC;AACA,4E;AACA,mG;AACA,4B;AACA,+C;AACA,a;AACA,W;;AAEA,U;;AAEA,uC;AACA,a;AACA,0C;AACA,W;AACA,0D;AACA,mD;AACA,qC;AACA,W;AACA,U;;AAEA,4B;AACA,qE;AACA,U;;AAEA,kB;AACA,oC;AACA,6C;AACA,wB;AACA,4B;AACA,a;AACA,gC;AACA,wG;AACA,qB;AACA,6B;AACA,0D;AACA,mC;AACA,oD;AACA,0C;AACA,wC;AACA,+B;AACA,mB;AACA,kB;AACA,e;AACA,a;AACA,kB;AACA,yE;AACA,qB;AACA,uB;AACA,sB;AACA,8B;AACA,mC;AACA,kC;AACA,kB;AACA,8D;AACA,8C;AACA,sC;AACA,6B;AACA,kB;AACA,e;AACA,a;AACA,Y;AACA,oC;AACA,6C;AACA,wB;AACA,4B;AACA,a;AACA,wG;AACA,uD;AACA,qB;AACA,6B;AACA,2D;AACA,oD;AACA,mC;AACA,0C;AACA,2C;AACA,2C;AACA,+B;AACA,mB;AACA,kB;AACA,e;AACA,a;AACA,kB;AACA,8D;AACA,qB;AACA,uB;AACA,4D;AACA,8C;AACA,yC;AACA,yC;AACA,6B;AACA,kB;AACA,e;AACA,a;AACA,W;AACA,U;;AAEA,c;AACA,8B;AACA,2B;AACA,Y;AACA,gC;AACA,sD;AACA,wC;AACA,8C;AACA,e;AACA,oB;AACA,8C;AACA,e;AACA,a;AACA,qC;AACA,W;AACA,U;;AAEA,c;AACA,8B;AACA,oE;AACA,W;AACA,U;;AAEA,a;AACA,8B;AACA,sD;AACA,Y;AACA,iC;AACA,yF;AACA,Y;AACA,8B;AACA,+C;AACA,Y;AACA,gC;AACA,iD;AACA,Y;AACA,8B;AACA,wD;AACA,Y;AACA,gC;AACA,0D;AACA,Y;AACA,+B;AACA,yC;AACA,Y;AACA,6B;AACA,wC;AACA,Y;AACA,kC;AACA,0D;AACA,W;AACA,U;;AAEA,c;AACA,4B;AACA,yD;AACA,W;AACA,U;;AAEA,c;AACA,8B;AACA,gC;AACA,mB;AACA,gD;AACA,yC;AACA,a;AACA,Y;AACA,gC;AACA,mD;AACA,Y;AACA,8B;AACA,iD;AACA,Y;AACA,kC;AACA,mD;AACA,Y;AACA,gC;AACA,iD;AACA,W;AACA,U;;AAEA,iB;AACA,8B;AACA,mB;AACA,gD;AACA,4C;AACA,a;AACA,Y;AACA,8B;AACA,oD;AACA,Y;AACA,gC;AACA,oD;AACA,W;AACA,U;;AAEA,kC;AACA,2C;AACA,sB;AACA,0B;AACA,W;AACA,4D;AACA,4D;AACA,0C;AACA,gD;AACA,kD;AACA,W;AACA,gB;AACA,gE;AACA,W;AACA,U;;AAEA,kC;AACA,2C;AACA,sB;AACA,0B;AACA,W;AACA,6D;AACA,mD;AACA,0C;AACA,gD;AACA,kD;AACA,W;AACA,gB;AACA,kD;AACA,W;AACA,U;;AAEA,4B;AACA,gE;AACA,qC;AACA,0B;AACA,W;AACA,gB;AACA,0B;AACA,W;AACA,U;;AAEA,wC;AACA,uC;AACA,2C;AACA,W;AACA,wC;AACA,mC;AACA,W;AACA,gB;AACA,kC;AACA,W;AACA,U;AACA,yC;AACA,uC;AACA,yC;AACA,W;AACA,wC;AACA,iC;AACA,W;AACA,gB;AACA,gC;AACA,W;AACA,U;AACA,2B;AACA,8B;AACA,sC;AACA,gD;AACA,a;AACA,kB;AACA,sG;AACA,qD;AACA,a;AACA,W;AACA,U;AACA,6B;AACA,kD;AACA,sC;AACA,gD;AACA,a;AACA,kB;AACA,wG;AACA,uD;AACA,a;AACA,W;AACA,U;AACA,2B;AACA,mG;AACA,iD;AACA,U;AACA,sB;AACA,kC;AACA,e;AACA,0B;AACA,4B;AACA,0B;AACA,a;AACA,sC;AACA,mD;AACA,kD;AACA,yD;AACA,0C;AACA,gC;AACA,2C;AACA,8C;AACA,mE;AACA,gD;AACA,iB;AACA,a;AACA,mD;AACA,mF;AACA,Y;AACA,+B;AACA,e;AACA,0C;AACA,2B;AACA,a;AACA,yB;AACA,mD;AACA,uD;AACA,kD;AACA,e;AACA,4C;AACA,gC;AACA,qD;AACA,a;AACA,wC;AACA,4D;AACA,a;AACA,yG;AACA,4C;AACA,iC;AACA,2C;AACA,e;AACA,oB;AACA,2D;AACA,iF;AACA,mB;AACA,e;AACA,iC;AACA,a;AACA,6B;AACA,W;AACA,U;AACA,2D;AACA,a;AACA,qB;AACA,kB;AACA,oB;AACA,W;AACA,8D;AACA,uD;AACA,kE;AACA,4C;AACA,wC;AACA,kD;AACA,sD;AACA,8F;AACA,uB;AACA,e;AACA,wF;AACA,oD;AACA,e;AACA,oF;AACA,2C;AACA,e;AACA,wD;AACA,wC;AACA,6B;AACA,e;AACA,iE;AACA,iD;AACA,6B;AACA,e;AACA,oB;AACA,kD;AACA,6B;AACA,e;AACA,e;AACA,W;AACA,wC;AACA,6D;AACA,W;AACA,wC;AACA,6B;AACA,W;AACA,wC;AACA,yC;AACA,W;AACA,gD;AACA,sD;AACA,W;AACA,2C;AACA,qC;AACA,W;AACA,uB;AACA,S;AACA,Q;;AAEA,6B;;AAEA,yB;AACA,oC;AACA,8B;AACA,S;AACA,6B;AACA,O;AACA,Y;AACA,oC;AACA,2B;AACA,S;AACA,4B;AACA,O;AACA,M;AACA,G;;AAEA,sC;AACA,mB;AACA,U;AACA,G;AACA,E;;AAEA,wB;;AAEA,yB;AACA,yB;;AAEA,qB;AACA,qB;AACA,qB;;AAEA,uB;AACA,qB;AACA,sB;AACA,qB;;AAEA,iB;AACA,e;AACA,c;AACA,I;;AAEA,6B;AACA,6B;AACA,6B;;AAEA,a;AACA,sD;AACA,I;;AAEA,a;AACA,8B;AACA,4B;AACA,uE;AACA,I;;AAEA,a;AACA,wB;AACA,oD;AACA,K;AACA,I;;AAEA,e;AACA,0B;AACA,+B;AACA,0B;AACA,4B;AACA,wB;AACA,wB;AACA,wB;AACA,6B;AACA,G;;AAEA,E;;AAEA,gC;;;;;;;;;;;;;;;;;;AChlBA,E;AACA,wB;AACA,wC;AACA,E;AACA,E;AACA,8B;AACA,iC;AACA,qC;AACA,E;AACA,G;AACA,+C;;AAEA,sC;AACA,O;AACA,6B;AACA,iC;;AAEA,gD;;AAEA,kE;AACA,0C;AACA,wB;;AAEA,kC;AACA,gD;AACA,iD;AACA,iB;AACA,G;;AAEA,a;AACA,sB;AACA,S;AACA,2D;AACA,kE;AACA,iD;;AAEA,6C;AACA,4C;AACA,6C;AACA,4C;AACA,yC;;AAEA,0C;AACA,gD;;AAEA,kC;AACA,sD;AACA,sD;AACA,uD;;AAEA,0D;;;AAGA,+B;AACA,wD;AACA,c;AACA,O;;AAEA,gB;;AAEA,gC;AACA,0D;;AAEA,gC;;AAEA,wB;AACA,sC;AACA,W;AACA,6E;AACA,oC;AACA,+B;AACA,U;;AAEA,iC;AACA,iE;AACA,4B;AACA,iB;AACA,0C;AACA,W;AACA,U;;AAEA,6B;AACA,sE;AACA,e;AACA,gC;AACA,W;AACA,iB;AACA,gC;AACA,wC;AACA,W;AACA,U;;AAEA,e;AACA,mC;AACA,uE;AACA,mB;AACA,0E;AACA,a;AACA,iB;AACA,8E;AACA,yE;AACA,a;AACA,Y;AACA,mC;AACA,kE;AACA,wC;AACA,qB;AACA,uE;AACA,e;AACA,a;AACA,6C;AACA,qB;AACA,qE;AACA,qE;AACA,e;AACA,a;AACA,kB;AACA,qB;AACA,gE;AACA,e;AACA,a;AACA,iB;AACA,8E;AACA,8E;AACA,yE;AACA,a;AACA,Y;AACA,8B;AACA,oE;AACA,0B;AACA,uB;AACA,2E;AACA,2E;AACA,e;AACA,a;AACA,qB;AACA,mE;AACA,a;AACA,W;AACA,U;;AAEA,iB;AACA,8B;AACA,uE;AACA,0B;AACA,uB;AACA,mD;AACA,e;AACA,a;AACA,qB;AACA,4C;AACA,a;AACA,W;AACA,U;;AAEA,gB;AACA,iB;AACA,qC;AACA,mE;AACA,uC;AACA,e;AACA,c;AACA,oC;AACA,yD;AACA,gD;AACA,+E;AACA,iB;AACA,oD;AACA,6C;AACA,iB;AACA,iB;AACA,sC;AACA,c;AACA,mC;AACA,0D;AACA,a;AACA,Y;;AAEA,iB;;AAEA,yC;AACA,iB;AACA,2D;AACA,sF;AACA,e;AACA,6C;AACA,+C;AACA,0D;AACA,0D;AACA,mE;AACA,4D;AACA,4C;AACA,uC;AACA,e;AACA,c;;AAEA,yC;AACA,iB;AACA,0D;AACA,e;AACA,2C;AACA,+C;AACA,0D;AACA,kE;AACA,4D;AACA,wC;AACA,e;AACA,c;;AAEA,qC;AACA,iB;AACA,kC;AACA,uE;AACA,+C;AACA,mC;AACA,uE;AACA,gD;AACA,sC;AACA,e;AACA,8D;AACA,2D;AACA,iE;AACA,e;AACA,a;;AAEA,Y;;AAEA,kC;AACA,wC;AACA,W;;AAEA,U;;AAEA,oB;AACA,+C;AACA,kE;AACA,kE;AACA,uF;AACA,4D;AACA,a;AACA,sD;AACA,qF;AACA,2C;AACA,a;AACA,kB;AACA,0D;AACA,a;AACA,Y;AACA,6C;AACA,yF;AACA,gD;AACA,+D;AACA,2D;AACA,yB;AACA,0B;AACA,a;AACA,kB;AACA,+E;AACA,2B;AACA,a;AACA,W;AACA,U;;AAEA,iB;;AAEA,iC;;AAEA,4B;AACA,0B;AACA,Y;;AAEA,2C;AACA,yC;AACA,qB;AACA,oB;AACA,a;AACA,uC;AACA,oC;AACA,0B;AACA,Y;;AAEA,0B;AACA,uC;AACA,yC;AACA,qB;AACA,oB;AACA,a;AACA,uC;AACA,oC;AACA,0B;AACA,Y;;AAEA,0B;AACA,6C;AACA,yC;AACA,qB;AACA,oB;AACA,a;AACA,uC;AACA,0B;AACA,Y;;AAEA,0B;AACA,6C;AACA,yC;AACA,qB;AACA,oB;AACA,a;AACA,uC;AACA,oC;AACA,0B;AACA,W;;AAEA,U;;AAEA,c;AACA,4B;AACA,gC;AACA,Y;AACA,6B;AACA,sC;AACA,4B;AACA,4C;AACA,a;AACA,Y;AACA,iC;AACA,e;AACA,2B;AACA,a;AACA,yC;AACA,qB;AACA,mD;AACA,oC;AACA,mC;AACA,a;AACA,qC;AACA,mB;AACA,kC;AACA,qB;AACA,4C;AACA,iF;AACA,mD;AACA,uC;AACA,kF;AACA,oD;AACA,gD;AACA,mB;AACA,qE;AACA,4C;AACA,iC;AACA,mB;AACA,kB;AACA,e;AACA,a;AACA,kB;AACA,wC;AACA,a;AACA,0C;AACA,W;AACA,U;;AAEA,c;AACA,gC;AACA,uD;AACA,qD;AACA,6B;AACA,Y;AACA,kC;AACA,iF;AACA,mC;AACA,gC;AACA,a;AACA,kB;AACA,kD;AACA,a;AACA,Y;AACA,8B;AACA,+C;AACA,Y;AACA,+B;AACA,gD;AACA,Y;AACA,qC;AACA,e;AACA,qD;AACA,0B;AACA,a;AACA,+B;AACA,2E;AACA,8E;AACA,mD;AACA,sC;AACA,e;AACA,mB;AACA,8C;AACA,e;AACA,2B;AACA,2C;AACA,e;AACA,4C;AACA,a;AACA,W;AACA,U;;AAEA,iB;AACA,8B;AACA,kD;AACA,Y;AACA,+B;AACA,mD;AACA,W;AACA,U;;AAEA,a;AACA,iC;AACA,yD;AACA,Y;AACA,wC;AACA,6B;AACA,+E;AACA,yE;AACA,a;AACA,Y;AACA,uC;AACA,6B;AACA,uC;AACA,oC;AACA,a;AACA,Y;AACA,sC;AACA,6B;AACA,6C;AACA,0C;AACA,a;AACA,W;AACA,U;;AAEA,c;AACA,6B;AACA,wD;AACA,Y;AACA,4B;AACA,yD;AACA,W;AACA,U;;AAEA,kB;AACA,8C;AACA,e;AACA,8C;AACA,a;AACA,gD;AACA,kD;AACA,wE;AACA,iD;AACA,2B;AACA,e;AACA,4F;AACA,yC;AACA,0D;AACA,gD;AACA,uC;AACA,mC;AACA,mB;AACA,e;AACA,4D;AACA,4B;AACA,yB;AACA,+B;AACA,6B;AACA,iC;AACA,sC;AACA,8B;AACA,8B;AACA,iC;AACA,iF;AACA,0B;AACA,6D;AACA,6D;AACA,+B;AACA,oB;AACA,iB;AACA,e;AACA,sD;AACA,4B;AACA,yB;AACA,+B;AACA,yD;AACA,6D;AACA,+B;AACA,oB;AACA,iB;AACA,e;AACA,oB;AACA,oE;AACA,e;AACA,a;AACA,Y;AACA,8C;AACA,e;AACA,8C;AACA,a;AACA,gD;AACA,kD;AACA,wE;AACA,uF;AACA,yC;AACA,2D;AACA,gD;AACA,uC;AACA,mC;AACA,mB;AACA,e;AACA,sD;AACA,2B;AACA,e;AACA,4D;AACA,4B;AACA,yB;AACA,+B;AACA,6B;AACA,iC;AACA,sC;AACA,8B;AACA,iC;AACA,mE;AACA,0B;AACA,4B;AACA,2D;AACA,6D;AACA,+B;AACA,oB;AACA,iB;AACA,e;AACA,sD;AACA,4B;AACA,yB;AACA,+B;AACA,4C;AACA,6D;AACA,+B;AACA,oB;AACA,iB;AACA,e;AACA,oB;AACA,+C;AACA,e;AACA,a;AACA,W;AACA,U;;AAEA,0B;AACA,wD;AACA,oC;AACA,gC;AACA,gC;AACA,4C;AACA,wC;AACA,qC;AACA,e;AACA,mC;AACA,e;AACA,gD;AACA,W;AACA,U;;AAEA,0B;AACA,8D;AACA,4C;AACA,sC;AACA,qC;AACA,a;AACA,mC;AACA,uD;AACA,gD;AACA,W;AACA,U;;AAEA,gB;AACA,4B;AACA,wE;AACA,uC;AACA,wE;AACA,Y;AACA,4B;AACA,wE;AACA,uC;AACA,wE;AACA,W;AACA,U;;AAEA,gC;AACA,4D;AACA,qB;AACA,yB;AACA,8C;AACA,+B;AACA,W;AACA,U;;AAEA,4B;AACA,qD;AACA,oC;AACA,0B;AACA,W;AACA,gB;AACA,0B;AACA,W;AACA,U;;AAEA,wC;AACA,uC;AACA,2C;AACA,W;AACA,wC;AACA,mC;AACA,W;AACA,gB;AACA,kC;AACA,W;AACA,U;AACA,yC;AACA,uC;AACA,yC;AACA,W;AACA,wC;AACA,iC;AACA,W;AACA,gB;AACA,gC;AACA,W;AACA,U;AACA,2B;AACA,8B;AACA,sC;AACA,gD;AACA,a;AACA,kB;AACA,sG;AACA,qD;AACA,a;AACA,W;AACA,U;AACA,6B;AACA,kD;AACA,sC;AACA,gD;AACA,a;AACA,kB;AACA,wG;AACA,uD;AACA,a;AACA,W;AACA,U;AACA,2B;AACA,mG;AACA,iD;AACA,U;AACA,sB;AACA,kC;AACA,e;AACA,0B;AACA,4B;AACA,0B;AACA,a;AACA,sC;AACA,mD;AACA,kD;AACA,yD;AACA,0C;AACA,gC;AACA,2C;AACA,8C;AACA,mE;AACA,gD;AACA,iB;AACA,a;AACA,mD;AACA,mF;AACA,Y;AACA,+B;AACA,e;AACA,0C;AACA,2B;AACA,a;AACA,yB;AACA,mD;AACA,uD;AACA,kD;AACA,e;AACA,4C;AACA,gC;AACA,qD;AACA,a;AACA,yG;AACA,4C;AACA,iC;AACA,2C;AACA,e;AACA,oB;AACA,2D;AACA,iF;AACA,mB;AACA,e;AACA,iC;AACA,a;AACA,6B;AACA,W;AACA,U;AACA,2D;AACA,a;AACA,qB;AACA,kB;AACA,oB;AACA,W;AACA,8D;AACA,uD;AACA,kE;AACA,4C;AACA,wC;AACA,kD;AACA,sD;AACA,8F;AACA,uB;AACA,e;AACA,wF;AACA,oD;AACA,e;AACA,iE;AACA,iD;AACA,6B;AACA,e;AACA,oF;AACA,2C;AACA,e;AACA,wD;AACA,wC;AACA,6B;AACA,e;AACA,oB;AACA,kD;AACA,6B;AACA,e;AACA,e;AACA,W;AACA,wC;AACA,6D;AACA,W;AACA,wC;AACA,6B;AACA,W;AACA,wC;AACA,yC;AACA,W;AACA,gD;AACA,sD;AACA,W;AACA,2C;AACA,qC;AACA,W;AACA,uB;AACA,S;AACA,Q;;AAEA,yB;AACA,oC;AACA,8B;AACA,S;AACA,6B;AACA,O;AACA,Y;AACA,oC;AACA,2B;AACA,S;AACA,4B;AACA,O;AACA,M;AACA,G;;AAEA,wB;AACA,mB;AACA,U;AACA,G;AACA,E;;AAEA,0B;;AAEA,2B;AACA,2B;;AAEA,qB;AACA,qB;AACA,qB;;AAEA,wB;AACA,2B;;AAEA,U;AACA,gB;AACA,gB;AACA,c;AACA,I;;AAEA,4B;AACA,mB;;AAEA,qC;AACA,0B;AACA,0B;;AAEA,a;AACA,oE;AACA,wD;AACA,yD;AACA,I;;AAEA,a;AACA,qB;AACA,qB;AACA,I;;AAEA,c;AACA,oB;AACA,4B;AACA,sB;AACA,oC;AACA,I;;AAEA,e;AACA,2B;AACA,4B;AACA,6B;AACA,4B;AACA,6B;AACA,G;;AAEA,E;;AAEA,c;AACA,qB;AACA,yC;AACA,gC;AACA,I;AACA,G;;;AAGA,gC;;;;;;;;;;;;;;;;;;AC90BA,E;AACA,qB;AACA,wC;AACA,E;AACA,E;AACA,8B;AACA,iC;AACA,qC;AACA,E;AACA,G;;AAEA,+C;;AAEA,mC;AACA,K;AACA,0B;AACA,4B;AACA,8B;;AAEA,2C;AACA,yB;;AAEA,mC;AACA,iD;AACA,kD;;AAEA,iB;AACA,G;;;AAGA,a;AACA,sB;AACA,S;AACA,qD;AACA,+D;AACA,8C;;AAEA,4C;AACA,6C;AACA,6C;AACA,yC;;AAEA,0C;AACA,gD;AACA,qD;;AAEA,+B;AACA,2C;AACA,oD;;AAEA,mB;AACA,qB;AACA,wB;AACA,kB;AACA,gB;;AAEA,4B;AACA,qD;AACA,c;AACA,O;;AAEA,iB;;AAEA,gC;AACA,0D;;AAEA,gD;AACA,uC;AACA,mB;AACA,W;AACA,8B;AACA,qB;AACA,+B;AACA,mD;AACA,iD;AACA,gD;AACA,c;AACA,2C;AACA,W;AACA,6B;AACA,iC;AACA,W;;AAEA,0D;AACA,mD;;AAEA,2D;AACA,gB;AACA,6D;AACA,W;AACA,iB;AACA,uD;AACA,wD;AACA,c;AACA,W;AACA,+B;AACA,U;;AAEA,iC;AACA,sD;AACA,4B;AACA,iB;AACA,4C;AACA,W;AACA,U;;AAEA,6B;AACA,sD;AACA,iB;AACA,wC;AACA,gC;AACA,W;AACA,gB;AACA,gC;AACA,W;AACA,kB;AACA,8B;AACA,W;AACA,U;;AAEA,6B;AACA,oC;AACA,8B;AACA,4B;AACA,gC;AACA,U;;AAEA,iD;AACA,a;AACA,iC;AACA,W;AACA,6C;AACA,2B;AACA,2B;AACA,W;AACA,kC;AACA,+E;AACA,mB;AACA,kC;AACA,kD;AACA,a;AACA,W;AACA,gB;AACA,yC;AACA,W;AACA,U;;AAEA,gB;AACA,6B;AACA,sD;AACA,gD;AACA,oE;AACA,8B;AACA,e;AACA,oB;AACA,kF;AACA,e;AACA,a;AACA,kD;AACA,iE;AACA,8B;AACA,e;AACA,oB;AACA,+E;AACA,e;AACA,a;AACA,kB;AACA,4B;AACA,a;AACA,Y;AACA,kC;AACA,wE;AACA,gE;AACA,+B;AACA,+C;AACA,a;AACA,Y;AACA,6C;AACA,uC;AACA,qD;AACA,Y;AACA,qC;AACA,e;AACA,sC;AACA,4B;AACA,a;AACA,sC;AACA,qC;AACA,gE;AACA,8B;AACA,e;AACA,oB;AACA,iF;AACA,e;AACA,qC;AACA,a;AACA,Y;AACA,8B;AACA,iD;AACA,+B;AACA,a;AACA,W;AACA,U;;AAEA,4B;AACA,oC;AACA,0B;AACA,W;AACA,gB;AACA,0B;AACA,W;AACA,U;;AAEA,kC;AACA,2C;AACA,sB;AACA,0B;AACA,W;AACA,8B;AACA,qC;AACA,U;;AAEA,uC;AACA,2C;AACA,sB;AACA,0B;AACA,W;AACA,qC;AACA,gC;AACA,kC;AACA,8B;;AAEA,8D;AACA,4E;AACA,kD;AACA,a;AACA,kB;AACA,8G;AACA,kE;AACA,uB;AACA,0F;AACA,wC;AACA,+B;AACA,oB;AACA,iB;AACA,e;AACA,oB;AACA,8D;AACA,uB;AACA,0E;AACA,wC;AACA,+B;AACA,oB;AACA,iB;AACA,e;AACA,kD;AACA,a;AACA,W;AACA,gB;AACA,qD;AACA,W;AACA,U;;AAEA,gC;AACA,gD;AACA,2C;AACA,qC;AACA,W;AACA,gB;AACA,mD;AACA,W;AACA,U;;AAEA,kC;AACA,2C;AACA,sB;AACA,0B;AACA,W;AACA,8B;AACA,qC;AACA,U;;AAEA,gC;AACA,+C;AACA,0C;AACA,mC;AACA,qB;AACA,8C;AACA,e;AACA,a;AACA,qC;AACA,W;AACA,gB;AACA,8D;AACA,W;AACA,U;;AAEA,uC;AACA,2C;AACA,sB;AACA,0B;AACA,W;AACA,oC;AACA,yC;AACA,8C;AACA,4G;AACA,qB;AACA,yF;AACA,yC;AACA,yC;AACA,6B;AACA,kB;AACA,e;AACA,a;AACA,kB;AACA,qB;AACA,yE;AACA,yC;AACA,yC;AACA,6B;AACA,kB;AACA,e;AACA,a;AACA,gD;AACA,W;AACA,U;;AAEA,qC;AACA,2C;AACA,sB;AACA,0B;AACA,W;AACA,2C;AACA,sD;AACA,gC;AACA,sB;AACA,iC;AACA,8C;AACA,a;AACA,W;AACA,U;;AAEA,wC;AACA,2C;AACA,sB;AACA,0B;AACA,W;AACA,6C;AACA,gD;AACA,wB;AACA,iC;AACA,8C;AACA,a;AACA,W;AACA,U;;AAEA,c;AACA,yC;AACA,wD;AACA,qB;AACA,kE;AACA,a;AACA,W;AACA,U;;AAEA,e;AACA,6B;AACA,+D;AACA,W;AACA,U;;AAEA,kB;AACA,6B;AACA,+D;AACA,sC;AACA,a;AACA,W;AACA,U;;AAEA,iB;AACA,8B;AACA,kD;AACA,Y;AACA,yC;AACA,0D;AACA,qB;AACA,4C;AACA,a;AACA,Y;AACA,iC;AACA,uD;AACA,qD;AACA,W;AACA,U;;AAEA,gC;AACA,0B;AACA,oE;AACA,wD;AACA,kC;AACA,kC;AACA,Y;AACA,0E;AACA,U;;AAEA,c;AACA,2B;AACA,sE;AACA,W;AACA,U;;AAEA,a;AACA,8B;AACA,sD;AACA,Y;AACA,qC;AACA,kB;AACA,yE;AACA,W;AACA,U;;AAEA,c;AACA,8B;AACA,2C;AACA,gC;AACA,mB;AACA,yC;AACA,a;AACA,mC;AACA,qB;AACA,8C;AACA,iE;AACA,e;AACA,a;AACA,Y;AACA,iC;AACA,oD;AACA,kD;AACA,Y;AACA,4B;AACA,kC;AACA,qD;AACA,wC;AACA,a;AACA,kB;AACA,gF;AACA,qC;AACA,a;AACA,Y;AACA,gC;AACA,6F;AACA,kC;AACA,qB;AACA,sB;AACA,0B;AACA,uD;AACA,kB;AACA,e;AACA,a;AACA,kB;AACA,qB;AACA,sB;AACA,oC;AACA,mD;AACA,kB;AACA,e;AACA,a;AACA,W;AACA,U;;AAEA,wC;AACA,uC;AACA,2C;AACA,W;AACA,wC;AACA,mC;AACA,W;AACA,gB;AACA,kC;AACA,W;AACA,U;AACA,yC;AACA,uC;AACA,yC;AACA,W;AACA,wC;AACA,iC;AACA,W;AACA,gB;AACA,gC;AACA,W;AACA,U;AACA,2B;AACA,8B;AACA,sC;AACA,gD;AACA,a;AACA,kB;AACA,sG;AACA,qD;AACA,a;AACA,W;AACA,U;AACA,6B;AACA,kD;AACA,sC;AACA,gD;AACA,a;AACA,kB;AACA,wG;AACA,uD;AACA,a;AACA,W;AACA,U;AACA,2B;AACA,mG;AACA,iD;AACA,U;AACA,sB;AACA,kC;AACA,e;AACA,0B;AACA,4B;AACA,0B;AACA,a;AACA,sC;AACA,mD;AACA,kD;AACA,yD;AACA,0C;AACA,gC;AACA,2C;AACA,8C;AACA,mE;AACA,gD;AACA,iB;AACA,a;AACA,mD;AACA,mF;AACA,Y;AACA,+B;AACA,e;AACA,0C;AACA,2B;AACA,a;AACA,yB;AACA,mD;AACA,uD;AACA,kD;AACA,e;AACA,4C;AACA,gC;AACA,qD;AACA,a;AACA,yG;AACA,4C;AACA,iC;AACA,2C;AACA,e;AACA,oB;AACA,2D;AACA,iF;AACA,mB;AACA,e;AACA,iC;AACA,a;AACA,6B;AACA,W;AACA,U;AACA,2D;AACA,a;AACA,qB;AACA,kB;AACA,oB;AACA,W;AACA,8D;AACA,uD;AACA,kE;AACA,4C;AACA,wC;AACA,kD;AACA,sD;AACA,8F;AACA,uB;AACA,e;AACA,wF;AACA,oD;AACA,e;AACA,iE;AACA,iD;AACA,6B;AACA,e;AACA,oF;AACA,2C;AACA,e;AACA,wD;AACA,wC;AACA,6B;AACA,e;AACA,oB;AACA,kD;AACA,6B;AACA,e;AACA,e;AACA,W;AACA,wC;AACA,6D;AACA,W;AACA,wC;AACA,6B;AACA,W;AACA,wC;AACA,yC;AACA,W;AACA,gD;AACA,sD;AACA,W;AACA,2C;AACA,qC;AACA,W;AACA,uB;AACA,S;AACA,Q;;AAEA,yB;AACA,oC;AACA,8B;AACA,S;AACA,6B;AACA,O;AACA,Y;AACA,oC;AACA,2B;AACA,S;AACA,4B;AACA,O;AACA,M;AACA,G;;AAEA,sC;AACA,mB;AACA,U;AACA,G;AACA,E;;AAEA,uB;;AAEA,wB;AACA,wB;;AAEA,qB;AACA,qB;AACA,qB;;AAEA,qB;AACA,uB;AACA,oB;AACA,8B;AACA,kB;AACA,wB;;AAEA,6B;AACA,6B;AACA,2C;AACA,2C;;AAEA,iB;AACA,0C;AACA,uD;AACA,sD;AACA,0B;AACA,I;AACA,W;AACA,+E;AACA,uD;AACA,I;AACA,e;AACA,yB;AACA,2B;AACA,G;AACA,E;;;AAGA,gC;;;;;;;;;;;;;;;;;;AC3qBA,E;AACA,mB;AACA,wC;AACA,E;AACA,E;AACA,8B;AACA,iC;AACA,qC;AACA,E;AACA,G;;AAEA,6C;;AAEA,iC;AACA,K;AACA,8B;AACA,iD;;AAEA,2C;AACA,yB;;AAEA,mC;AACA,iD;AACA,kD;AACA,iB;AACA,G;AACA,S;AACA,sB;AACA,S;AACA,4E;;AAEA,6C;AACA,4C;AACA,yC;AACA,6C;;AAEA,0C;AACA,gD;;AAEA,kC;;AAEA,uD;AACA,8C;;;AAGA,+B;AACA,wD;;AAEA,qB;AACA,qB;;AAEA,qB;AACA,sB;AACA,sB;;AAEA,gB;AACA,kB;;AAEA,c;AACA,e;;AAEA,4D;AACA,4C;AACA,+C;AACA,2C;AACA,4D;AACA,O;AACA,gB;;AAEA,gC;AACA,iD;AACA,yC;AACA,2C;AACA,gD;AACA,gD;AACA,iD;AACA,4C;;AAEA,iB;AACA,0C;AACA,W;AACA,gB;AACA,yD;AACA,W;AACA,gE;AACA,0E;AACA,mB;AACA,wC;AACA,a;AACA,W;AACA,+B;AACA,mD;AACA,+C;AACA,iD;AACA,sB;AACA,mE;AACA,mE;AACA,e;AACA,a;AACA,iD;AACA,kB;AACA,uB;AACA,mE;AACA,mE;AACA,e;AACA,a;AACA,4C;AACA,iD;AACA,W;;AAEA,wC;AACA,0D;AACA,W;AACA,oC;AACA,2C;AACA,4B;AACA,a;AACA,W;AACA,gB;AACA,0B;AACA,W;AACA,U;;AAEA,6B;AACA,gD;AACA,iB;AACA,wC;AACA,gC;AACA,W;AACA,+B;AACA,oB;AACA,kC;AACA,a;AACA,W;AACA,U;;AAEA,6B;AACA,yD;AACA,2C;AACA,gD;AACA,gD;AACA,iD;AACA,4C;AACA,U;;AAEA,0B;AACA,+D;AACA,iD;AACA,mB;AACA,yD;AACA,a;AACA,W;AACA,gB;AACA,mB;AACA,4D;AACA,a;AACA,W;AACA,U;;AAEA,0B;AACA,+D;AACA,iD;AACA,mB;AACA,yD;AACA,a;AACA,W;AACA,gB;AACA,mB;AACA,0D;AACA,a;AACA,W;AACA,U;;AAEA,4B;AACA,gE;AACA,2B;AACA,gC;AACA,8B;AACA,W;AACA,U;;AAEA,2B;AACA,2B;;AAEA,4C;AACA,e;AACA,oF;AACA,kE;AACA,mF;AACA,kD;AACA,a;AACA,mB;AACA,oB;AACA,mC;AACA,uC;AACA,8C;AACA,iE;AACA,gB;AACA,a;AACA,W;AACA,gB;AACA,mB;AACA,oB;AACA,+B;AACA,gB;AACA,a;AACA,W;AACA,U;AACA,6B;AACA,iB;AACA,kB;AACA,sB;AACA,c;AACA,W;AACA,U;AACA,kC;AACA,sC;AACA,yE;AACA,W;AACA,wB;AACA,2C;AACA,iC;AACA,U;;AAEA,iB;AACA,4B;AACA,kC;AACA,kE;AACA,0B;AACA,a;AACA,gF;AACA,4G;AACA,0B;AACA,a;AACA,yG;AACA,yB;AACA,Y;AACA,6B;AACA,6E;AACA,8D;AACA,kE;AACA,uB;AACA,a;AACA,6D;AACA,8C;AACA,0B;AACA,a;AACA,mD;AACA,0B;AACA,a;AACA,yB;AACA,W;AACA,U;;AAEA,kB;;AAEA,qC;AACA,qF;AACA,iF;AACA,2C;AACA,a;AACA,8B;AACA,6C;AACA,mC;AACA,a;AACA,kB;AACA,4C;AACA,a;AACA,Y;AACA,8B;AACA,8E;AACA,iF;AACA,2C;AACA,a;AACA,4B;AACA,6C;AACA,mC;AACA,a;AACA,kB;AACA,4C;AACA,a;AACA,W;;AAEA,U;;AAEA,gB;AACA,8B;AACA,qC;AACA,kC;AACA,a;AACA,2C;AACA,0C;AACA,oD;AACA,e;AACA,oB;AACA,iC;AACA,e;AACA,6B;AACA,W;AACA,U;AACA,wC;AACA,uC;AACA,2C;AACA,W;AACA,wC;AACA,mC;AACA,W;AACA,gB;AACA,kC;AACA,W;AACA,U;AACA,yC;AACA,yD;AACA,mC;AACA,yC;AACA,2C;AACA,a;AACA,kB;AACA,mC;AACA,a;AACA,W;AACA,gB;AACA,gC;AACA,W;AACA,U;AACA,2B;AACA,8B;AACA,sC;AACA,gD;AACA,a;AACA,kB;AACA,sG;AACA,qD;AACA,a;AACA,W;AACA,U;AACA,6B;AACA,kD;AACA,sC;AACA,gD;AACA,a;AACA,kB;AACA,wG;AACA,uD;AACA,a;AACA,W;AACA,U;AACA,2B;AACA,mG;AACA,iD;AACA,U;AACA,sB;AACA,kC;AACA,e;AACA,0B;AACA,4B;AACA,0B;AACA,a;AACA,sC;AACA,mD;AACA,kD;AACA,yD;AACA,0C;AACA,gC;AACA,2C;AACA,8C;AACA,mE;AACA,gD;AACA,iB;AACA,a;AACA,mD;AACA,mF;AACA,Y;AACA,+B;AACA,e;AACA,0C;AACA,2B;AACA,a;AACA,yB;AACA,mD;AACA,uD;AACA,kD;AACA,e;AACA,4C;AACA,gC;AACA,qD;AACA,a;AACA,wC;AACA,4D;AACA,a;AACA,yG;AACA,4C;AACA,iC;AACA,2C;AACA,e;AACA,oB;AACA,2D;AACA,iF;AACA,mB;AACA,e;AACA,iC;AACA,a;AACA,6B;AACA,W;AACA,U;AACA,2D;AACA,a;AACA,qB;AACA,kB;AACA,oB;AACA,W;AACA,8D;AACA,uD;AACA,kE;AACA,4C;AACA,wC;AACA,kD;AACA,sD;AACA,8F;AACA,uB;AACA,e;AACA,wF;AACA,oD;AACA,e;AACA,iE;AACA,iD;AACA,6B;AACA,e;AACA,oF;AACA,2C;AACA,e;AACA,wD;AACA,wC;AACA,6B;AACA,e;AACA,oB;AACA,kD;AACA,6B;AACA,e;AACA,e;AACA,W;AACA,wC;AACA,6D;AACA,W;AACA,wC;AACA,6B;AACA,W;AACA,wC;AACA,yC;AACA,W;AACA,gD;AACA,sD;AACA,W;AACA,2C;AACA,qC;AACA,W;AACA,uB;AACA,S;AACA,Q;AACA,yB;AACA,oC;AACA,8B;AACA,S;AACA,6B;AACA,O;AACA,Y;AACA,oC;AACA,2B;AACA,S;AACA,4B;AACA,O;;AAEA,M;AACA,G;AACA,sC;AACA,mB;AACA,U;AACA,G;AACA,E;;AAEA,qB;;AAEA,sB;;AAEA,qB;AACA,qB;AACA,qB;;AAEA,sB;;AAEA,kC;AACA,sB;;AAEA,gE;AACA,kB;;AAEA,iB;AACA,kB;AACA,iB;AACA,I;;AAEA,yB;AACA,2B;AACA,sB;;AAEA,2B;AACA,4B;;AAEA,oD;AACA,yB;AACA,6B;;AAEA,2C;AACA,yB;;AAEA,oC;AACA,qB;;AAEA,6B;AACA,0B;;AAEA,U;AACA,0G;AACA,uD;AACA,I;;AAEA,mB;AACA,2B;AACA,yB;AACA,I;;AAEA,mB;AACA,wB;AACA,I;;AAEA,sB;AACA,gC;;AAEA,uB;;AAEA,E;;AAEA,gC;;;;;;;;;;;;;;;;;;;AC9hBA,E;AACA,qB;AACA,wC;AACA,E;AACA,E;AACA,8B;AACA,iC;AACA,qC;AACA,E;AACA,G;;AAEA,6C;;AAEA,mC;AACA,K;AACA,8B;AACA,kC;;AAEA,iD;;AAEA,2C;AACA,yB;;AAEA,mC;AACA,iD;AACA,kD;;AAEA,iB;AACA,G;AACA,a;AACA,sB;AACA,S;AACA,yD;AACA,+D;AACA,8C;;AAEA,4C;AACA,6C;AACA,yC;AACA,4C;AACA,6C;;AAEA,mD;AACA,gD;;AAEA,kC;AACA,8C;AACA,2C;AACA,8B;AACA,oB;;AAEA,oC;;AAEA,2C;AACA,kC;AACA,oB;AACA,2C;AACA,iD;AACA,6D;;AAEA,4B;;AAEA,+B;AACA,wD;AACA,c;AACA,O;;AAEA,gB;;AAEA,uB;AACA,gC;AACA,uD;AACA,sC;AACA,mB;AACA,yC;AACA,a;AACA,W;AACA,gB;AACA,mB;AACA,+E;AACA,2E;AACA,a;AACA,W;AACA,+B;AACA,2D;AACA,W;AACA,iB;AACA,+D;AACA,W;AACA,+B;AACA,U;;AAEA,iC;AACA,+D;AACA,4B;AACA,iB;AACA,4C;AACA,W;AACA,U;;AAEA,6B;AACA,+B;AACA,kD;AACA,mD;AACA,W;AACA,gB;AACA,6D;AACA,W;AACA,U;;AAEA,6B;AACA,qD;AACA,iB;AACA,gC;AACA,W;AACA,gB;AACA,qB;AACA,W;AACA,iB;AACA,gC;AACA,wC;AACA,W;AACA,U;;AAEA,gB;AACA,mC;AACA,kD;AACA,wC;AACA,8B;AACA,e;AACA,+B;AACA,Y;AACA,4B;AACA,uC;AACA,uC;AACA,4B;AACA,a;AACA,Y;AACA,8B;AACA,uC;AACA,oC;AACA,a;AACA,W;AACA,U;;AAEA,6C;AACA,4B;AACA,+C;AACA,a;AACA,0E;AACA,+E;AACA,2E;AACA,qG;AACA,W;AACA,wC;AACA,uB;AACA,wC;AACA,gC;AACA,iC;AACA,iB;AACA,a;AACA,gC;AACA,wC;AACA,kC;AACA,yB;AACA,a;AACA,iC;AACA,uE;AACA,oB;AACA,qC;AACA,e;AACA,a;AACA,kB;AACA,wE;AACA,oB;AACA,qC;AACA,e;AACA,a;AACA,iD;AACA,W;AACA,gB;AACA,wC;AACA,W;AACA,U;;AAEA,iC;AACA,4B;AACA,0C;AACA,oC;AACA,6B;AACA,0B;AACA,W;AACA,gB;AACA,0B;AACA,W;AACA,U;;AAEA,kC;AACA,8C;AACA,8D;AACA,kC;AACA,6B;AACA,W;AACA,kC;AACA,4B;AACA,W;AACA,gC;AACA,wC;AACA,U;;;AAGA,kC;AACA,8C;AACA,iB;AACA,2C;AACA,W;AACA,gC;AACA,qC;AACA,0C;AACA,W;AACA,U;;AAEA,6B;AACA,2B;AACA,+B;AACA,4B;AACA,W;AACA,U;;AAEA,yC;AACA,+C;AACA,qE;AACA,0B;AACA,W;AACA,U;;AAEA,4B;AACA,+B;AACA,2C;AACA,W;AACA,gB;AACA,sD;AACA,W;AACA,U;;AAEA,4B;AACA,yC;AACA,gB;AACA,qB;AACA,W;AACA,U;;AAEA,kB;AACA,oC;AACA,gD;AACA,mB;AACA,0C;AACA,a;AACA,4G;AACA,oB;AACA,wF;AACA,sC;AACA,+C;AACA,kB;AACA,e;AACA,a;AACA,kB;AACA,oB;AACA,uB;AACA,wE;AACA,sC;AACA,+C;AACA,kB;AACA,e;AACA,a;AACA,gD;AACA,Y;AACA,oC;AACA,gD;AACA,0C;AACA,4G;AACA,oB;AACA,yF;AACA,iC;AACA,6B;AACA,kB;AACA,e;AACA,a;AACA,kB;AACA,oB;AACA,uB;AACA,yE;AACA,iC;AACA,6B;AACA,kB;AACA,e;AACA,a;AACA,gD;AACA,W;AACA,U;;AAEA,c;AACA,kC;AACA,wC;AACA,kC;AACA,a;AACA,6C;AACA,6B;AACA,a;AACA,Y;AACA,gC;AACA,wC;AACA,kC;AACA,a;AACA,6C;AACA,4B;AACA,a;AACA,Y;AACA,wC;AACA,e;AACA,2B;AACA,+C;AACA,oE;AACA,2B;AACA,0C;AACA,gB;AACA,2B;AACA,0C;AACA,gD;AACA,0C;AACA,gB;AACA,6B;AACA,oC;AACA,a;AACA,gC;AACA,0B;AACA,6D;AACA,+E;AACA,8E;AACA,8D;AACA,gB;AACA,a;AACA,gF;AACA,8D;AACA,8D;AACA,8B;AACA,kD;AACA,e;AACA,e;AACA,iD;AACA,2C;AACA,qB;AACA,a;AACA,Y;AACA,4C;AACA,8B;AACA,8B;AACA,yC;AACA,oB;AACA,iC;AACA,uC;AACA,oB;AACA,+B;AACA,0C;AACA,oB;AACA,kC;AACA,wC;AACA,oB;AACA,gC;AACA,2C;AACA,oB;AACA,mC;AACA,0C;AACA,oB;AACA,kC;AACA,yC;AACA,oB;AACA,iC;AACA,wC;AACA,oB;AACA,a;AACA,4B;AACA,W;AACA,U;;AAEA,c;AACA,qD;AACA,e;AACA,+C;AACA,gD;;AAEA,kD;AACA,mD;;AAEA,4C;AACA,kD;;AAEA,wD;AACA,yD;;AAEA,mD;;AAEA,8C;AACA,oC;AACA,mC;;AAEA,0B;AACA,8B;AACA,a;AACA,iG;AACA,+F;AACA,4C;AACA,iC;AACA,2E;AACA,+G;AACA,iH;AACA,e;AACA,oB;AACA,gH;AACA,+G;AACA,e;AACA,a;AACA,sE;AACA,8B;AACA,8B;AACA,+B;AACA,qE;AACA,oE;AACA,kC;AACA,iC;AACA,kB;AACA,oB;AACA,gC;AACA,+B;AACA,qE;AACA,sF;AACA,kC;AACA,iC;AACA,kB;AACA,oB;AACA,+B;AACA,+B;AACA,kC;AACA,qE;AACA,6D;AACA,iC;AACA,kB;AACA,oB;AACA,iC;AACA,+B;AACA,wF;AACA,oE;AACA,kC;AACA,iC;AACA,kB;AACA,oB;AACA,kC;AACA,+B;AACA,wF;AACA,8D;AACA,kC;AACA,iC;AACA,kB;AACA,oB;AACA,iC;AACA,+B;AACA,+D;AACA,mE;AACA,kC;AACA,iC;AACA,kB;AACA,oB;AACA,mC;AACA,+B;AACA,+D;AACA,sF;AACA,kC;AACA,iC;AACA,kB;AACA,oB;AACA,kC;AACA,+B;AACA,+D;AACA,6D;AACA,kC;AACA,iC;AACA,kB;AACA,oB;AACA,a;AACA,yC;AACA,kB;AACA,+B;AACA,8C;AACA,iC;AACA,0C;AACA,a;AACA,mC;AACA,6D;;AAEA,+C;AACA,kC;AACA,8E;AACA,yD;AACA,6D;AACA,8B;AACA,8D;AACA,qD;AACA,e;AACA,oB;AACA,8C;AACA,gC;AACA,+B;AACA,6B;AACA,e;AACA,a;AACA,kB;AACA,6D;AACA,8B;AACA,0B;AACA,a;;AAEA,mD;AACA,W;;AAEA,U;;AAEA,e;AACA,4B;AACA,6D;AACA,sE;AACA,uB;AACA,oE;AACA,e;AACA,a;AACA,W;AACA,U;;AAEA,iB;AACA,6B;AACA,6D;AACA,mE;AACA,uB;AACA,8C;AACA,e;AACA,a;AACA,W;AACA,U;;AAEA,a;AACA,+B;AACA,yC;AACA,Y;AACA,8B;AACA,wC;AACA,W;AACA,U;;AAEA,2B;AACA,gB;AACA,8B;AACA,gC;AACA,W;AACA,kC;AACA,4B;AACA,W;AACA,U;;AAEA,wC;AACA,uC;AACA,2C;AACA,W;AACA,wC;AACA,mC;AACA,W;AACA,gB;AACA,kC;AACA,W;AACA,U;AACA,yC;AACA,uC;AACA,yC;AACA,W;AACA,wC;AACA,iC;AACA,W;AACA,gB;AACA,gC;AACA,W;AACA,U;AACA,2B;AACA,8B;AACA,sC;AACA,gD;AACA,a;AACA,kB;AACA,sG;AACA,qD;AACA,a;AACA,W;AACA,U;AACA,6B;AACA,kD;AACA,sC;AACA,gD;AACA,a;AACA,kB;AACA,wG;AACA,uD;AACA,a;AACA,W;AACA,U;AACA,2B;AACA,mG;AACA,iD;AACA,U;AACA,sB;AACA,kC;AACA,e;AACA,0B;AACA,4B;AACA,0B;AACA,a;AACA,sC;AACA,mD;AACA,kD;AACA,yD;AACA,0C;AACA,gC;AACA,2C;AACA,8C;AACA,mE;AACA,gD;AACA,iB;AACA,a;AACA,mD;AACA,mF;AACA,Y;AACA,+B;AACA,e;AACA,0C;AACA,2B;AACA,a;AACA,yB;AACA,mD;AACA,uD;AACA,kD;AACA,e;AACA,4C;AACA,gC;AACA,qD;AACA,a;AACA,yG;AACA,4C;AACA,iC;AACA,2C;AACA,e;AACA,oB;AACA,2D;AACA,iF;AACA,mB;AACA,e;AACA,iC;AACA,a;AACA,6B;AACA,W;AACA,U;AACA,2D;AACA,a;AACA,qB;AACA,kB;AACA,oB;AACA,W;AACA,8D;AACA,uD;AACA,kE;AACA,4C;AACA,wC;AACA,kD;AACA,sD;AACA,8F;AACA,uB;AACA,e;AACA,+E;AACA,2C;AACA,e;AACA,6F;AACA,oD;AACA,e;AACA,wD;AACA,wC;AACA,6B;AACA,e;AACA,iE;AACA,iD;AACA,6B;AACA,e;AACA,oB;AACA,kD;AACA,6B;AACA,e;AACA,e;AACA,W;AACA,wC;AACA,6D;AACA,W;AACA,wC;AACA,6B;AACA,W;AACA,wC;AACA,yC;AACA,W;AACA,gD;AACA,sD;AACA,W;AACA,2C;AACA,qC;AACA,W;AACA,uB;AACA,S;AACA,Q;;AAEA,yB;AACA,oC;AACA,8B;AACA,S;AACA,6B;AACA,O;AACA,Y;AACA,oC;AACA,2B;AACA,S;AACA,4B;AACA,O;AACA,M;AACA,G;;AAEA,sC;AACA,mB;AACA,U;AACA,G;AACA,E;;AAEA,uB;;AAEA,2B;AACA,wB;AACA,wB;AACA,wB;AACA,2B;;AAEA,gC;AACA,gC;AACA,gC;;AAEA,sB;AACA,yB;AACA,yB;AACA,yB;;AAEA,2B;AACA,yB;AACA,wB;;AAEA,0B;AACA,gC;AACA,uB;AACA,yB;AACA,yB;;AAEA,uB;AACA,kC;AACA,2B;;AAEA,qB;AACA,qB;AACA,sB;;AAEA,U;AACA,sD;AACA,wD;AACA,wG;AACA,I;;AAEA,a;AACA,0B;AACA,uB;AACA,yB;AACA,2B;AACA,wB;AACA,2B;AACA,I;;AAEA,iB;AACA,4B;AACA,6B;AACA,iD;AACA,2B;AACA,I;;AAEA,iB;AACA,0B;AACA,I;;AAEA,4B;AACA,kB;AACA,mC;AACA,yD;AACA,8E;AACA,O;AACA,6D;AACA,kE;AACA,O;AACA,K;AACA,gB;AACA,G;;AAEA,E;;AAEA,gC;;;;;;;;;;;;;;;;;;;AClzBA,E;AACA,sB;AACA,wC;AACA,E;AACA,E;AACA,8B;AACA,iC;AACA,qC;AACA,E;AACA,G;;AAEA,6C;;AAEA,oC;AACA,K;AACA,8B;AACA,iD;;AAEA,2C;AACA,yB;;AAEA,mC;AACA,iD;AACA,kD;AACA,iB;AACA,G;AACA,a;AACA,sB;AACA,S;AACA,yD;AACA,gE;AACA,+C;;AAEA,6C;AACA,6C;AACA,4C;AACA,4C;AACA,yC;;AAEA,0C;AACA,gD;;AAEA,+B;AACA,wD;;AAEA,kC;AACA,sD;;AAEA,c;AACA,O;;AAEA,gB;;AAEA,gC;AACA,iE;;AAEA,oC;AACA,4B;AACA,W;AACA,gB;AACA,6B;AACA,W;;AAEA,sC;AACA,mD;AACA,qD;AACA,W;AACA,+C;AACA,qD;AACA,8D;AACA,W;AACA,+B;AACA,U;;AAEA,iC;AACA,2D;AACA,4B;AACA,iB;AACA,0C;AACA,W;AACA,U;;AAEA,6B;AACA,mE;AACA,iB;AACA,wC;AACA,W;AACA,e;AACA,gC;AACA,W;AACA,U;;AAEA,gB;AACA,kC;AACA,e;AACA,mC;AACA,a;AACA,uB;AACA,wB;AACA,6C;AACA,a;AACA,mB;AACA,wC;AACA,a;AACA,uB;AACA,wC;AACA,0B;AACA,0C;AACA,a;AACA,Y;AACA,kC;AACA,mB;AACA,2C;AACA,a;AACA,iB;AACA,2C;AACA,a;AACA,Y;AACA,6B;AACA,e;AACA,sC;AACA,iD;AACA,0D;AACA,a;AACA,+D;AACA,mC;AACA,a;AACA,kB;AACA,yC;AACA,a;AACA,W;AACA,U;;AAEA,iC;AACA,kD;AACA,8B;AACA,U;;AAEA,+B;AACA,a;AACA,uE;AACA,W;AACA,oE;AACA,+B;AACA,U;;AAEA,4B;AACA,6D;AACA,e;AACA,uE;AACA,uE;AACA,6D;AACA,W;AACA,iB;AACA,4C;AACA,W;AACA,U;;AAEA,6B;AACA,2D;AACA,e;AACA,gC;AACA,W;AACA,iB;AACA,yC;AACA,W;AACA,U;;AAEA,qC;AACA,a;AACA,2C;AACA,4B;AACA,kB;AACA,+C;AACA,W;AACA,iB;AACA,yC;AACA,W;AACA,e;AACA,yC;AACA,0C;AACA,W;AACA,0B;AACA,gE;AACA,uB;AACA,yC;AACA,0B;AACA,2C;AACA,a;AACA,W;AACA,oD;AACA,U;;AAEA,wC;AACA,uC;AACA,2C;AACA,W;AACA,wC;AACA,mC;AACA,W;AACA,gB;AACA,kC;AACA,W;AACA,U;AACA,yC;AACA,uC;AACA,yC;AACA,W;AACA,wC;AACA,iC;AACA,W;AACA,gB;AACA,gC;AACA,W;AACA,U;AACA,2B;AACA,8B;AACA,sC;AACA,gD;AACA,a;AACA,kB;AACA,sG;AACA,qD;AACA,a;AACA,W;AACA,U;AACA,6B;AACA,kD;AACA,sC;AACA,gD;AACA,a;AACA,kB;AACA,wG;AACA,uD;AACA,a;AACA,W;AACA,U;AACA,2B;AACA,mG;AACA,iD;AACA,U;AACA,sB;AACA,kC;AACA,e;AACA,0B;AACA,4B;AACA,0B;AACA,a;AACA,sC;AACA,mD;AACA,kD;AACA,yD;AACA,0C;AACA,gC;AACA,2C;AACA,8C;AACA,mE;AACA,gD;AACA,iB;AACA,a;AACA,mD;AACA,mF;AACA,Y;AACA,+B;AACA,e;AACA,0C;AACA,2B;AACA,a;AACA,yB;AACA,mD;AACA,uD;AACA,kD;AACA,e;AACA,4C;AACA,gC;AACA,qD;AACA,a;AACA,wC;AACA,4D;AACA,a;AACA,yG;AACA,4C;AACA,iC;AACA,2C;AACA,e;AACA,oB;AACA,2D;AACA,iF;AACA,mB;AACA,e;AACA,iC;AACA,a;AACA,6B;AACA,W;AACA,U;AACA,2D;AACA,a;AACA,qB;AACA,kB;AACA,oB;AACA,W;AACA,8D;AACA,uD;AACA,kE;AACA,4C;AACA,wC;AACA,kD;AACA,sD;AACA,8F;AACA,uB;AACA,e;AACA,wF;AACA,oD;AACA,e;AACA,iE;AACA,iD;AACA,6B;AACA,e;AACA,oF;AACA,2C;AACA,e;AACA,wD;AACA,wC;AACA,6B;AACA,e;AACA,oB;AACA,kD;AACA,6B;AACA,e;AACA,e;AACA,W;AACA,wC;AACA,6D;AACA,W;AACA,wC;AACA,6B;AACA,W;AACA,wC;AACA,yC;AACA,W;AACA,gD;AACA,sD;AACA,W;AACA,2C;AACA,qC;AACA,W;AACA,uB;AACA,S;AACA,Q;AACA,yB;AACA,oC;AACA,8B;AACA,S;AACA,6B;AACA,O;AACA,Y;AACA,oC;AACA,2B;AACA,S;AACA,4B;AACA,O;AACA,M;AACA,G;;AAEA,sC;AACA,mB;AACA,U;AACA,G;AACA,E;;AAEA,wB;;AAEA,2B;AACA,2B;;AAEA,uB;AACA,uB;AACA,uB;;AAEA,oB;AACA,uB;AACA,wB;;AAEA,qC;;AAEA,iB;AACA,mD;AACA,I;;AAEA,a;AACA,oB;AACA,I;;AAEA,e;AACA,wB;AACA,0B;AACA,uB;AACA,wB;AACA,I;;AAEA,e;AACA,kB;AACA,G;;AAEA,E;;AAEA,gC;;;;;;;;;;;;;;;;;;;ACtZA,E;AACA,sB;AACA,wC;AACA,E;AACA,E;AACA,8B;AACA,iC;AACA,qC;AACA,E;AACA,G;;AAEA,6C;;AAEA,4C;AACA,K;AACA,8B;AACA,iD;;AAEA,2C;AACA,yB;;AAEA,mC;AACA,iD;AACA,kD;AACA,iB;AACA,G;AACA,S;AACA,sB;AACA,S;AACA,+E;;AAEA,6C;AACA,4C;AACA,yC;AACA,6C;;AAEA,0C;AACA,gD;;AAEA,kC;AACA,wD;AACA,8D;AACA,yD;AACA,wD;AACA,0D;;AAEA,+B;AACA,wD;;AAEA,c;AACA,O;AACA,gB;;AAEA,gC;AACA,gD;AACA,a;AACA,gC;AACA,yD;AACA,uB;AACA,uD;AACA,kC;AACA,yB;AACA,W;AACA,0B;AACA,iB;AACA,6D;AACA,2D;AACA,kE;AACA,W;AACA,kC;AACA,mB;AACA,sE;AACA,a;AACA,W;AACA,uB;AACA,8D;AACA,W;AACA,kB;AACA,iF;AACA,W;AACA,+B;AACA,U;AACA,iC;AACA,+D;AACA,4B;AACA,iB;AACA,0C;AACA,W;AACA,U;AACA,6B;AACA,gD;AACA,iB;AACA,wC;AACA,W;AACA,U;AACA,gB;AACA,6B;AACA,mB;AACA,wC;AACA,a;AACA,kC;AACA,Y;AACA,4B;AACA,mC;AACA,mB;AACA,2C;AACA,a;AACA,kC;AACA,W;AACA,U;AACA,yC;AACA,a;AACA,kC;AACA,0D;AACA,4D;AACA,wC;AACA,6B;AACA,4B;AACA,6B;AACA,6B;AACA,6B;AACA,4B;AACA,c;AACA,4C;AACA,8E;AACA,0C;AACA,oB;AACA,W;AACA,6B;AACA,sC;AACA,wE;AACA,mB;AACA,8B;AACA,a;AACA,W;AACA,6B;AACA,sD;AACA,uC;AACA,2E;AACA,gE;AACA,qF;AACA,uC;AACA,6B;AACA,e;AACA,a;AACA,8C;AACA,uE;AACA,+C;AACA,8B;AACA,kC;AACA,e;AACA,uB;AACA,yC;AACA,e;AACA,qB;AACA,yC;AACA,6B;AACA,wC;AACA,qC;AACA,0C;AACA,e;AACA,qC;AACA,a;AACA,gD;AACA,yE;AACA,yD;AACA,8B;AACA,kC;AACA,e;AACA,uB;AACA,yC;AACA,e;AACA,qB;AACA,yC;AACA,6B;AACA,wC;AACA,qC;AACA,0C;AACA,e;AACA,qC;AACA,a;AACA,W;AACA,gB;AACA,8B;AACA,uC;AACA,mE;AACA,oC;AACA,2B;AACA,yC;AACA,e;AACA,qB;AACA,yC;AACA,+B;AACA,gD;AACA,mB;AACA,kB;AACA,e;AACA,a;AACA,W;AACA,U;AACA,iB;AACA,8B;AACA,e;AACA,gD;AACA,a;AACA,mD;AACA,qD;AACA,0B;AACA,a;AACA,Y;AACA,gC;AACA,e;AACA,4C;AACA,+C;AACA,a;AACA,uC;AACA,0D;AACA,sF;AACA,a;AACA,kB;AACA,oC;AACA,a;AACA,Y;AACA,6B;AACA,e;AACA,yC;AACA,+D;AACA,a;AACA,4B;AACA,iF;AACA,6C;AACA,a;AACA,kB;AACA,gE;AACA,6C;AACA,gD;AACA,e;AACA,oB;AACA,iD;AACA,e;AACA,mE;AACA,a;AACA,Y;AACA,uC;AACA,e;AACA,6B;AACA,mC;AACA,gE;AACA,uC;AACA,0C;;AAEA,wE;AACA,2D;AACA,wB;AACA,a;AACA,mB;AACA,0C;AACA,a;AACA,2D;AACA,yD;AACA,qD;AACA,wI;AACA,2D;AACA,wC;AACA,mB;AACA,kE;AACA,gD;AACA,mB;AACA,iB;AACA,iB;AACA,e;AACA,kD;AACA,wD;AACA,e;AACA,mB;AACA,6C;AACA,a;AACA,8D;AACA,2C;AACA,Y;AACA,wC;AACA,e;AACA,6B;AACA,wC;AACA,uC;AACA,+C;AACA,oD;AACA,iE;AACA,oE;AACA,iD;AACA,kB;AACA,2C;AACA,gB;AACA,wB;AACA,a;AACA,mC;AACA,6C;AACA,8D;AACA,+B;AACA,Y;;AAEA,kB;AACA,kC;AACA,iB;AACA,6C;AACA,e;AACA,mG;AACA,6B;AACA,uB;AACA,e;AACA,c;AACA,0C;AACA,iB;AACA,6D;AACA,yC;AACA,sB;AACA,e;AACA,kC;AACA,qB;AACA,qC;AACA,e;AACA,a;AACA,W;AACA,U;;AAEA,kB;AACA,wC;AACA,oE;AACA,e;AACA,2D;AACA,2B;AACA,a;AACA,4J;AACA,2C;AACA,+F;AACA,e;AACA,+C;AACA,4C;AACA,4C;AACA,iB;AACA,sB;AACA,wD;AACA,iB;AACA,e;AACA,a;AACA,kB;AACA,8D;AACA,a;AACA,2D;AACA,wB;AACA,Y;AACA,+B;AACA,mH;AACA,sB;AACA,2B;AACA,e;AACA,a;AACA,kC;AACA,Y;AACA,4B;AACA,gI;AACA,sB;AACA,uB;AACA,4B;AACA,e;AACA,0D;AACA,a;AACA,Y;AACA,4B;AACA,wD;AACA,sB;AACA,uB;AACA,6B;AACA,e;AACA,2D;AACA,a;AACA,Y;AACA,mC;AACA,mD;AACA,e;AACA,gC;AACA,+C;AACA,qC;AACA,a;AACA,wG;AACA,iB;AACA,uD;AACA,qD;AACA,sD;AACA,e;AACA,oC;AACA,qB;AACA,2B;AACA,e;AACA,wB;AACA,yD;AACA,oC;AACA,iB;AACA,sB;AACA,gD;AACA,iB;AACA,e;AACA,a;AACA,W;AACA,U;;AAEA,wC;AACA,uC;AACA,2C;AACA,W;AACA,wC;AACA,mC;AACA,W;AACA,gB;AACA,kC;AACA,W;AACA,U;AACA,yC;AACA,uC;AACA,yC;AACA,W;AACA,wC;AACA,iC;AACA,W;AACA,gB;AACA,gC;AACA,W;AACA,U;AACA,2B;AACA,8B;AACA,sC;AACA,gD;AACA,a;AACA,kB;AACA,sG;AACA,qD;AACA,a;AACA,W;AACA,U;AACA,6B;AACA,kD;AACA,sC;AACA,gD;AACA,a;AACA,kB;AACA,wG;AACA,uD;AACA,a;AACA,W;AACA,U;AACA,2B;AACA,mG;AACA,iD;AACA,U;AACA,sB;AACA,kC;AACA,e;AACA,0B;AACA,4B;AACA,0B;AACA,a;AACA,sC;AACA,mD;AACA,kD;AACA,yD;AACA,0C;AACA,gC;AACA,2C;AACA,8C;AACA,mE;AACA,gD;AACA,iB;AACA,a;AACA,mD;AACA,mF;AACA,Y;AACA,+B;AACA,e;AACA,0C;AACA,2B;AACA,a;AACA,yB;AACA,mD;AACA,uD;AACA,kD;AACA,e;AACA,4C;AACA,gC;AACA,qD;AACA,a;AACA,wC;AACA,4D;AACA,a;AACA,yG;AACA,4C;AACA,iC;AACA,2C;AACA,e;AACA,oB;AACA,2D;AACA,iF;AACA,mB;AACA,e;AACA,iC;AACA,a;AACA,6B;AACA,W;AACA,U;AACA,2D;AACA,a;AACA,qB;AACA,kB;AACA,oB;AACA,W;AACA,8D;AACA,uD;AACA,kE;AACA,4C;AACA,wC;AACA,kD;AACA,sD;AACA,8F;AACA,uB;AACA,e;AACA,wF;AACA,oD;AACA,e;AACA,iE;AACA,iD;AACA,6B;AACA,e;AACA,oF;AACA,2C;AACA,e;AACA,wD;AACA,wC;AACA,6B;AACA,e;AACA,oB;AACA,kD;AACA,6B;AACA,e;AACA,e;AACA,W;AACA,wC;AACA,6D;AACA,W;AACA,wC;AACA,6B;AACA,W;AACA,wC;AACA,yC;AACA,W;AACA,gD;AACA,sD;AACA,W;AACA,2C;AACA,qC;AACA,W;AACA,uB;AACA,S;AACA,Q;AACA,yB;AACA,oC;AACA,8B;AACA,S;AACA,6B;AACA,O;AACA,Y;AACA,oC;AACA,2B;AACA,S;AACA,4B;AACA,O;;AAEA,M;AACA,G;;AAEA,sC;AACA,mB;AACA,U;AACA,G;AACA,E;;AAEA,wB;;AAEA,mC;AACA,4B;;AAEA,wB;AACA,wB;AACA,wB;;AAEA,iD;AACA,6B;AACA,6B;;AAEA,gC;AACA,wC;;AAEA,gC;AACA,gC;;AAEA,0B;AACA,4B;AACA,qB;AACA,uB;AACA,qB;AACA,wB;;AAEA,qB;AACA,Y;AACA,iB;AACA,I;;AAEA,e;AACA,gB;;AAEA,I;;AAEA,c;AACA,uB;AACA,qB;AACA,sB;AACA,sB;AACA,uB;AACA,I;;AAEA,W;AACA,oD;AACA,qD;AACA,6D;AACA,iE;AACA,yD;AACA,I;;AAEA,c;AACA,6B;AACA,oC;AACA,8B;AACA,+B;AACA,4B;AACA,I;;AAEA,c;AACA,sC;AACA,S;AACA,iB;AACA,O;AACA,uD;AACA,mB;AACA,+C;AACA,S;AACA,uB;AACA,6B;AACA,oB;AACA,mE;AACA,kF;AACA,W;AACA,S;AACA,c;AACA,oE;AACA,S;AACA,yB;AACA,O;AACA,kB;AACA,M;AACA,oC;AACA,S;AACA,iB;AACA,O;AACA,0C;AACA,wB;AACA,4D;AACA,6E;AACA,uB;AACA,wC;AACA,+D;AACA,a;AACA,wC;AACA,8D;AACA,8C;AACA,2D;AACA,8C;AACA,yB;AACA,yC;AACA,uD;AACA,4B;AACA,iB;AACA,e;AACA,2C;AACA,8C;AACA,uE;AACA,e;AACA,8C;AACA,uE;AACA,e;AACA,oD;AACA,mF;AACA,e;AACA,yB;AACA,0B;AACA,0B;AACA,e;AACA,e;AACA,uB;AACA,wB;AACA,a;AACA,W;AACA,W;AACA,iC;AACA,oB;AACA,oE;AACA,sC;AACA,mB;AACA,S;AACA,oB;AACA,O;AACA,mB;AACA,M;AACA,gC;AACA,S;AACA,iB;AACA,O;AACA,0C;;AAEA,sB;AACA,0D;AACA,kE;AACA,0C;AACA,qB;AACA,qC;AACA,mD;AACA,wB;AACA,a;AACA,W;AACA,uC;AACA,0C;AACA,mE;AACA,W;AACA,0C;AACA,mE;AACA,W;AACA,gD;AACA,+E;AACA,W;AACA,qB;AACA,sB;AACA,oB;AACA,W;AACA,W;;AAEA,iC;AACA,oB;AACA,oE;AACA,sC;AACA,mB;AACA,S;AACA,oB;AACA,O;AACA,mB;AACA,K;AACA,G;AACA,E;;AAEA,gC;;;;;;;;;;;;;;;;;;AC7vBA,E;AACA,qB;AACA,wC;AACA,E;AACA,E;AACA,8B;AACA,iC;AACA,qC;AACA,E;AACA,G;;AAEA,+C;;AAEA,mC;AACA,K;AACA,8B;AACA,gC;;AAEA,2C;AACA,yB;;AAEA,mC;AACA,iD;AACA,kD;AACA,iB;AACA,G;;AAEA,a;AACA,sB;AACA,S;AACA,qD;AACA,8E;;AAEA,2B;AACA,2C;AACA,0C;AACA,uC;AACA,2C;;AAEA,wC;AACA,0C;AACA,gD;;AAEA,yB;AACA,gC;AACA,qD;AACA,oD;;AAEA,4B;AACA,6B;AACA,oB;AACA,kB;;AAEA,0B;AACA,6B;AACA,sD;AACA,c;AACA,O;;AAEA,gB;;AAEA,gC;AACA,6D;AACA,mC;AACA,+B;AACA,U;;AAEA,iC;AACA,+D;AACA,4B;AACA,iB;AACA,4C;AACA,W;AACA,U;;AAEA,6B;AACA,oE;AACA,iB;AACA,wC;AACA,gC;AACA,W;AACA,U;;AAEA,6B;AACA,mE;AACA,+B;AACA,iD;AACA,gD;AACA,U;;AAEA,6B;AACA,kD;AACA,a;AACA,4E;AACA,8C;AACA,W;AACA,U;;AAEA,qD;AACA,0E;AACA,kD;AACA,2D;AACA,qC;AACA,sC;AACA,a;AACA,2B;AACA,gC;AACA,Y;AACA,yD;AACA,4C;AACA,qD;AACA,mB;AACA,4C;AACA,a;AACA,6B;AACA,mB;AACA,4C;AACA,a;AACA,uB;AACA,yC;AACA,a;AACA,kB;AACA,kC;AACA,0D;AACA,a;AACA,mD;AACA,W;AACA,gB;AACA,uB;AACA,W;AACA,U;;AAEA,iC;AACA,wD;AACA,gB;AACA,2D;AACA,yD;AACA,oC;AACA,sC;AACA,oB;AACA,c;AACA,W;AACA,U;;AAEA,2B;AACA,mD;AACA,iB;AACA,6C;AACA,8B;AACA,gC;AACA,W;AACA,kE;AACA,gB;AACA,8B;AACA,gC;AACA,W;AACA,e;AACA,8B;AACA,gC;AACA,0C;AACA,W;AACA,mB;AACA,6C;AACA,8B;AACA,gC;AACA,W;AACA,U;;AAEA,a;AACA,iC;AACA,yD;AACA,W;AACA,U;;AAEA,c;;AAEA,mC;AACA,wE;AACA,wE;AACA,+C;AACA,mD;AACA,a;AACA,iC;AACA,8D;AACA,0D;AACA,Y;;AAEA,wC;AACA,qD;AACA,oD;AACA,+B;AACA,wB;AACA,a;AACA,mE;AACA,6B;AACA,oB;AACA,wD;AACA,qD;AACA,oD;AACA,mD;AACA,+C;AACA,gB;AACA,a;AACA,Y;;AAEA,iC;AACA,e;AACA,wE;AACA,yE;AACA,0C;AACA,2C;AACA,gE;AACA,mD;AACA,uD;AACA,0B;AACA,a;AACA,sD;AACA,iD;AACA,oC;AACA,uB;AACA,8C;AACA,8C;AACA,c;AACA,4B;AACA,mB;AACA,2B;AACA,a;AACA,yE;AACA,Y;;AAEA,wC;AACA,oC;AACA,+C;AACA,wC;AACA,uC;AACA,a;AACA,mE;AACA,Y;;AAEA,8B;AACA,oE;AACA,iB;AACA,4C;AACA,a;AACA,qB;AACA,yC;AACA,a;AACA,uD;AACA,qC;AACA,W;AACA,U;;AAEA,e;;AAEA,0B;AACA,mD;AACA,0C;AACA,qC;AACA,mC;AACA,0D;AACA,a;AACA,kB;AACA,sC;AACA,a;AACA,Y;;AAEA,4B;AACA,qD;AACA,0C;AACA,qC;AACA,mC;AACA,4D;AACA,a;AACA,kB;AACA,wC;AACA,a;AACA,Y;;AAEA,4B;AACA,qD;AACA,0C;AACA,qC;AACA,kC;AACA,2D;AACA,a;AACA,kB;AACA,wC;AACA,a;AACA,Y;;AAEA,6B;AACA,sD;AACA,0C;AACA,qC;AACA,mC;AACA,4D;AACA,a;AACA,kB;AACA,yC;AACA,a;AACA,Y;;AAEA,4B;AACA,qD;AACA,0C;AACA,qC;AACA,oC;AACA,2D;AACA,a;AACA,kB;AACA,wC;AACA,a;AACA,Y;;AAEA,4B;AACA,qD;AACA,0C;AACA,qC;AACA,oC;AACA,2D;AACA,a;AACA,kB;AACA,wC;AACA,a;AACA,W;;AAEA,U;;AAEA,c;;AAEA,sB;AACA,4B;AACA,iB;AACA,6B;AACA,kF;AACA,qD;AACA,iB;AACA,e;AACA,sB;AACA,+G;AACA,gB;AACA,c;;AAEA,8B;AACA,iB;AACA,6B;AACA,kF;AACA,qD;AACA,iB;AACA,e;AACA,sB;AACA,8G;AACA,gB;AACA,c;;AAEA,8B;AACA,iB;AACA,6B;AACA,iF;AACA,qD;AACA,iB;AACA,e;AACA,sB;AACA,+G;AACA,gB;AACA,c;;AAEA,+B;AACA,iB;AACA,6B;AACA,iF;AACA,qD;AACA,iB;AACA,e;AACA,sB;AACA,gH;AACA,gB;AACA,c;;AAEA,8B;AACA,iB;AACA,6B;AACA,gF;AACA,iB;AACA,e;AACA,sB;AACA,8E;AACA,gB;AACA,c;;AAEA,8B;AACA,iB;AACA,6B;AACA,gF;AACA,iB;AACA,e;AACA,sB;AACA,+E;AACA,gB;AACA,a;AACA,Y;;AAEA,uC;AACA,e;AACA,8D;AACA,6B;AACA,oD;AACA,qD;AACA,oD;AACA,yD;AACA,gB;AACA,wB;AACA,a;AACA,2C;AACA,4D;AACA,+C;AACA,e;AACA,a;AACA,Y;;AAEA,gC;AACA,iE;AACA,+C;AACA,mD;AACA,a;AACA,W;;AAEA,U;;AAEA,gB;;AAEA,6B;AACA,e;AACA,qB;AACA,qF;AACA,0B;AACA,yD;AACA,0D;AACA,iB;AACA,e;AACA,a;AACA,8F;AACA,uB;AACA,oB;AACA,oF;AACA,gB;AACA,a;AACA,qB;AACA,4C;AACA,oB;AACA,sC;AACA,gD;AACA,mF;AACA,gB;AACA,a;AACA,Y;;AAEA,6B;AACA,e;AACA,qB;AACA,qF;AACA,0B;AACA,yD;AACA,0D;AACA,iB;AACA,e;AACA,a;AACA,8F;AACA,uB;AACA,oB;AACA,oF;AACA,gB;AACA,a;AACA,qB;AACA,4C;AACA,oB;AACA,sC;AACA,gD;AACA,oF;AACA,gB;AACA,a;AACA,Y;;AAEA,4B;AACA,e;AACA,qB;AACA,sF;AACA,0B;AACA,wD;AACA,yD;AACA,iB;AACA,e;AACA,a;AACA,6F;AACA,uB;AACA,oB;AACA,oF;AACA,gB;AACA,a;AACA,qB;AACA,4C;AACA,oB;AACA,sC;AACA,gD;AACA,oF;AACA,gB;AACA,a;AACA,Y;;AAEA,6B;AACA,e;AACA,qB;AACA,sF;AACA,0B;AACA,wD;AACA,yD;AACA,iB;AACA,e;AACA,a;AACA,6F;AACA,uB;AACA,oB;AACA,oF;AACA,gB;AACA,a;AACA,qB;AACA,4C;AACA,oB;AACA,sC;AACA,gD;AACA,mF;AACA,gB;AACA,a;AACA,Y;;AAEA,8B;AACA,e;AACA,qB;AACA,sF;AACA,0B;AACA,wD;AACA,yD;AACA,iB;AACA,e;AACA,a;AACA,+F;AACA,uB;AACA,oB;AACA,6C;AACA,gB;AACA,a;AACA,qB;AACA,4C;AACA,oB;AACA,sC;AACA,gD;AACA,gD;AACA,gB;AACA,a;AACA,W;AACA,U;AACA,wC;AACA,uC;AACA,2C;AACA,W;AACA,wC;AACA,mC;AACA,W;AACA,gB;AACA,kC;AACA,W;AACA,U;AACA,yC;AACA,uC;AACA,yC;AACA,W;AACA,wC;AACA,iC;AACA,W;AACA,gB;AACA,gC;AACA,W;AACA,U;AACA,2B;AACA,8B;AACA,sC;AACA,gD;AACA,a;AACA,kB;AACA,sG;AACA,qD;AACA,a;AACA,W;AACA,U;AACA,6B;AACA,kD;AACA,sC;AACA,gD;AACA,a;AACA,kB;AACA,wG;AACA,uD;AACA,a;AACA,W;AACA,U;AACA,2B;AACA,mG;AACA,iD;AACA,U;AACA,sB;AACA,kC;AACA,e;AACA,0B;AACA,4B;AACA,0B;AACA,a;AACA,sC;AACA,mD;AACA,kD;AACA,yD;AACA,0C;AACA,gC;AACA,2C;AACA,8C;AACA,mE;AACA,gD;AACA,iB;AACA,a;AACA,mD;AACA,mF;AACA,Y;AACA,+B;AACA,e;AACA,0C;AACA,2B;AACA,a;AACA,yB;AACA,mD;AACA,uD;AACA,kD;AACA,e;AACA,4C;AACA,gC;AACA,qD;AACA,a;AACA,wC;AACA,4D;AACA,a;AACA,yG;AACA,4C;AACA,iC;AACA,2C;AACA,e;AACA,oB;AACA,2D;AACA,iF;AACA,mB;AACA,e;AACA,iC;AACA,a;AACA,6B;AACA,W;AACA,U;AACA,2D;AACA,a;AACA,qB;AACA,kB;AACA,oB;AACA,W;AACA,8D;AACA,uD;AACA,kE;AACA,4C;AACA,wC;AACA,kD;AACA,sD;AACA,8F;AACA,uB;AACA,e;AACA,wF;AACA,oD;AACA,e;AACA,iE;AACA,iD;AACA,6B;AACA,e;AACA,oF;AACA,2C;AACA,e;AACA,wD;AACA,wC;AACA,6B;AACA,e;AACA,oB;AACA,kD;AACA,6B;AACA,e;AACA,e;AACA,W;AACA,wC;AACA,6D;AACA,W;AACA,wC;AACA,6B;AACA,W;AACA,wC;AACA,yC;AACA,W;AACA,gD;AACA,sD;AACA,W;AACA,2C;AACA,qC;AACA,W;AACA,uB;AACA,S;AACA,Q;;AAEA,yB;AACA,oC;AACA,8B;AACA,S;AACA,6B;AACA,O;AACA,Y;AACA,oC;AACA,2B;AACA,S;AACA,4B;AACA,O;AACA,M;AACA,G;;AAEA,sC;AACA,mB;AACA,U;AACA,G;AACA,E;;AAEA,uB;;AAEA,gB;AACA,iB;;AAEA,uC;AACA,oB;;AAEA,yB;AACA,oB;;AAEA,4B;AACA,oB;;AAEA,oB;AACA,uB;;AAEA,mC;AACA,+B;AACA,+B;;AAEA,uB;AACA,mB;;AAEA,oB;AACA,U;AACA,kE;AACA,mD;AACA,I;;AAEA,oB;AACA,iB;AACA,4B;AACA,yB;AACA,0B;AACA,wB;AACA,I;;AAEA,mB;AACA,iB;AACA,qB;AACA,mB;AACA,G;;AAEA,E;;;AAGA,gC;;;;;;;;;;;;;;;;;;AClxBA,E;AACA,uB;AACA,wC;AACA,E;AACA,E;AACA,8B;AACA,iC;AACA,qC;AACA,E;AACA,G;;AAEA,+C;;AAEA,qC;AACA,K;AACA,6B;AACA,+B;AACA,+B;;AAEA,gD;;AAEA,0C;AACA,wB;;AAEA,kC;AACA,gD;AACA,iD;AACA,iB;AACA,G;;AAEA,a;AACA,sB;AACA,S;AACA,yD;AACA,iE;AACA,gD;;AAEA,4C;AACA,6C;AACA,6C;AACA,yC;;AAEA,0C;AACA,gD;;AAEA,kC;AACA,8D;;AAEA,+B;AACA,wD;AACA,c;AACA,O;;AAEA,qB;;AAEA,gC;AACA,wD;AACA,+B;AACA,U;;AAEA,iC;AACA,+D;AACA,4B;AACA,iB;AACA,0C;AACA,W;AACA,U;;AAEA,6B;AACA,oE;AACA,iB;AACA,gC;AACA,wC;AACA,W;AACA,U;;AAEA,6B;AACA,sD;AACA,wD;AACA,U;;AAEA,iD;AACA,a;AACA,iC;AACA,W;AACA,6C;AACA,2B;AACA,2B;AACA,W;AACA,kC;AACA,iF;AACA,mB;AACA,kC;AACA,kD;AACA,a;AACA,W;AACA,gB;AACA,yC;AACA,W;AACA,U;;AAEA,kC;AACA,2C;AACA,sB;AACA,0B;AACA,W;AACA,oD;AACA,kC;AACA,mC;AACA,sC;AACA,iC;AACA,e;AACA,gC;AACA,a;AACA,gC;AACA,uB;AACA,kD;AACA,gD;AACA,W;AACA,gB;AACA,uD;AACA,W;AACA,U;;AAEA,kC;AACA,2C;AACA,sB;AACA,0B;AACA,W;AACA,mD;AACA,gC;AACA,mC;AACA,gC;AACA,qC;AACA,a;AACA,mC;AACA,uB;AACA,kD;AACA,gD;AACA,W;AACA,U;;AAEA,6B;AACA,6B;AACA,+B;AACA,8B;AACA,W;AACA,U;;AAEA,4B;AACA,kC;AACA,0B;AACA,W;AACA,gB;AACA,0B;AACA,W;AACA,U;;AAEA,8B;AACA,a;AACA,+C;AACA,8C;AACA,qC;AACA,oC;AACA,W;AACA,+B;AACA,sD;AACA,oD;AACA,gC;AACA,W;AACA,gB;AACA,uE;AACA,W;AACA,U;;AAEA,8B;AACA,a;AACA,8C;AACA,W;AACA,+B;AACA,wD;AACA,oC;AACA,W;AACA,gB;AACA,qE;AACA,6C;AACA,W;AACA,iC;AACA,U;;AAEA,oD;AACA,a;AACA,gC;AACA,W;AACA,6D;AACA,4E;AACA,e;AACA,2E;AACA,W;AACA,U;;AAEA,c;AACA,kD;AACA,e;AACA,mB;AACA,a;AACA,gD;AACA,wB;AACA,qD;AACA,iC;AACA,8E;AACA,qB;AACA,4B;AACA,e;AACA,a;AACA,gC;AACA,4D;AACA,W;AACA,U;;AAEA,iB;AACA,+B;AACA,6D;AACA,6B;AACA,4B;AACA,Y;AACA,8B;AACA,kD;AACA,Y;AACA,8B;AACA,+E;AACA,iB;AACA,+D;AACA,4C;AACA,a;AACA,W;AACA,U;;AAEA,c;AACA,8B;AACA,+C;AACA,Y;AACA,8B;AACA,6E;AACA,iB;AACA,4D;AACA,yC;AACA,a;AACA,W;AACA,U;;AAEA,c;AACA,iC;AACA,iD;AACA,mC;AACA,a;AACA,wD;AACA,qC;AACA,a;AACA,yD;AACA,sC;AACA,a;AACA,kB;AACA,oC;AACA,a;AACA,Y;AACA,uC;AACA,e;AACA,8D;AACA,6B;AACA,oD;AACA,qD;AACA,oD;AACA,yD;AACA,gB;AACA,wB;AACA,a;AACA,2C;AACA,4D;AACA,+C;AACA,e;AACA,a;AACA,W;AACA,U;;AAEA,a;AACA,4B;AACA,iF;AACA,Y;AACA,8B;AACA,qC;AACA,Y;AACA,gC;AACA,mD;AACA,W;AACA,U;;AAEA,wC;AACA,uC;AACA,2C;AACA,W;AACA,wC;AACA,mC;AACA,W;AACA,gB;AACA,kC;AACA,W;AACA,U;AACA,yC;AACA,uC;AACA,yC;AACA,W;AACA,wC;AACA,iC;AACA,W;AACA,gB;AACA,gC;AACA,W;AACA,U;AACA,2B;AACA,8B;AACA,sC;AACA,gD;AACA,a;AACA,kB;AACA,sG;AACA,qD;AACA,a;AACA,W;AACA,U;AACA,6B;AACA,kD;AACA,sC;AACA,gD;AACA,a;AACA,kB;AACA,wG;AACA,uD;AACA,a;AACA,W;AACA,U;AACA,2B;AACA,mG;AACA,iD;AACA,U;AACA,sB;AACA,kC;AACA,e;AACA,0B;AACA,4B;AACA,0B;AACA,a;AACA,sC;AACA,mD;AACA,kD;AACA,yD;AACA,0C;AACA,gC;AACA,2C;AACA,8C;AACA,mE;AACA,gD;AACA,iB;AACA,a;AACA,mD;AACA,mF;AACA,Y;AACA,+B;AACA,e;AACA,0C;AACA,2B;AACA,a;AACA,yB;AACA,mD;AACA,uD;AACA,kD;AACA,e;AACA,4C;AACA,gC;AACA,qD;AACA,a;AACA,wC;AACA,4D;AACA,a;AACA,yG;AACA,4C;AACA,iC;AACA,2C;AACA,e;AACA,oB;AACA,2D;AACA,iF;AACA,mB;AACA,e;AACA,iC;AACA,a;AACA,6B;AACA,W;AACA,U;AACA,2D;AACA,a;AACA,qB;AACA,kB;AACA,oB;AACA,W;AACA,8D;AACA,uD;AACA,kE;AACA,4C;AACA,wC;AACA,kD;AACA,sD;AACA,8F;AACA,uB;AACA,e;AACA,wF;AACA,oD;AACA,e;AACA,iE;AACA,iD;AACA,6B;AACA,e;AACA,oF;AACA,2C;AACA,e;AACA,wD;AACA,wC;AACA,6B;AACA,e;AACA,oB;AACA,kD;AACA,6B;AACA,e;AACA,e;AACA,W;AACA,wC;AACA,6D;AACA,W;AACA,wC;AACA,6B;AACA,W;AACA,wC;AACA,yC;AACA,W;AACA,gD;AACA,sD;AACA,W;AACA,2C;AACA,qC;AACA,W;AACA,uB;AACA,S;AACA,Q;AACA,yB;AACA,oC;AACA,8B;AACA,S;AACA,6B;AACA,O;AACA,Y;AACA,oC;AACA,2B;AACA,S;AACA,4B;AACA,O;AACA,M;AACA,G;;AAEA,sC;AACA,mB;AACA,U;AACA,G;AACA,E;;AAEA,yB;;AAEA,0B;AACA,0B;;AAEA,qB;AACA,qB;AACA,qB;;AAEA,qB;AACA,qB;AACA,sB;AACA,oB;;AAEA,8B;AACA,8B;AACA,8B;;AAEA,c;AACA,sB;AACA,sB;AACA,mB;AACA,oB;AACA,qB;AACA,qB;AACA,I;;AAEA,a;AACA,0B;AACA,I;;AAEA,a;AACA,uD;AACA,2E;AACA,G;;AAEA,E;;AAEA,gC;;;;;;;;;;;;;;;;;;;AChgBA,E;AACA,mB;AACA,wC;AACA,E;AACA,8B;AACA,iC;AACA,qC;AACA,E;AACA,G;;;AAGA,6C;;AAEA,mC;;AAEA,O;AACA,0E;;AAEA,gC;AACA,yE;;AAEA,+C;;AAEA,2B;AACA,6B;AACA,0B;;AAEA,oB;AACA,qB;AACA,mB;;AAEA,6B;AACA,6C;AACA,2B;;AAEA,2C;AACA,0C;AACA,uC;;AAEA,iD;AACA,uD;;AAEA,sD;;AAEA,qC;AACA,6E;AACA,oD;;AAEA,a;AACA,mB;AACA,K;;AAEA,c;;AAEA,8B;AACA,mD;;AAEA,mC;AACA,2B;AACA,2E;AACA,kC;AACA,0C;AACA,Y;AACA,S;;AAEA,gC;AACA,8B;AACA,kD;AACA,yC;AACA,sC;AACA,yB;AACA,W;AACA,gB;AACA,iD;AACA,0D;AACA,2C;AACA,yB;AACA,gC;AACA,uC;AACA,iB;AACA,e;AACA,oB;AACA,yC;AACA,6B;AACA,e;AACA,a;AACA,qB;AACA,+B;AACA,0D;AACA,a;AACA,W;AACA,S;;AAEA,2D;AACA,sC;AACA,8E;AACA,iB;AACA,6D;AACA,W;AACA,S;AACA,6B;AACA,Q;;AAEA,gC;AACA,6D;AACA,e;AACA,wC;AACA,S;AACA,Q;;AAEA,2B;AACA,iD;AACA,e;AACA,sC;AACA,8B;AACA,S;AACA,Q;;AAEA,c;AACA,gC;AACA,a;AACA,gD;AACA,W;AACA,qC;AACA,kC;AACA,2D;AACA,uC;AACA,a;AACA,kB;AACA,6E;AACA,wC;AACA,a;AACA,mC;AACA,W;AACA,gB;AACA,6C;AACA,W;AACA,U;AACA,kB;AACA,mC;AACA,e;AACA,gF;AACA,6E;AACA,a;AACA,iE;AACA,iC;AACA,uC;AACA,wC;AACA,a;AACA,2B;AACA,yC;AACA,a;AACA,W;AACA,S;AACA,Q;;AAEA,2B;AACA,2B;AACA,wD;AACA,0C;AACA,S;AACA,Q;;AAEA,c;;AAEA,kC;AACA,yC;AACA,6B;AACA,mB;AACA,W;AACA,U;AACA,0C;AACA,+C;AACA,8D;AACA,oC;AACA,U;AACA,oC;AACA,+C;AACA,gE;AACA,iC;AACA,S;AACA,Q;;AAEA,Y;AACA,8B;AACA,+B;AACA,S;AACA,Q;;AAEA,oC;AACA,W;AACA,4E;AACA,6F;AACA,yF;AACA,wD;AACA,0D;AACA,mD;AACA,kD;AACA,S;AACA,0D;AACA,gC;AACA,gD;AACA,a;AACA,+D;AACA,gF;;AAEA,4D;AACA,iE;;AAEA,oE;AACA,0B;AACA,qB;AACA,qB;AACA,W;AACA,iD;AACA,qB;AACA,iD;;AAEA,uB;AACA,wC;AACA,uF;;AAEA,6B;AACA,+B;AACA,a;AACA,kB;AACA,4D;AACA,0E;AACA,2D;AACA,6B;AACA,sE;AACA,e;AACA,a;AACA,4C;AACA,qC;AACA,wD;AACA,2D;AACA,e;AACA,oB;AACA,uF;AACA,kC;AACA,uD;AACA,iD;AACA,6F;AACA,6F;AACA,e;AACA,2B;AACA,a;AACA,kB;AACA,4D;AACA,+C;AACA,qD;AACA,oD;AACA,uE;AACA,6F;AACA,e;AACA,2F;AACA,a;AACA,W;AACA,gB;AACA,gD;AACA,yB;AACA,W;AACA,W;AACA,Q;;AAEA,gB;;AAEA,+C;AACA,a;AACA,8D;AACA,gC;AACA,oC;AACA,kC;AACA,iD;AACA,wD;AACA,yD;AACA,8C;AACA,0D;AACA,+C;AACA,iB;AACA,sB;AACA,wE;AACA,iB;AACA,yF;AACA,yF;AACA,gB;AACA,2C;AACA,c;AACA,mE;AACA,2E;AACA,4B;AACA,yB;AACA,W;;AAEA,iD;AACA,yD;;AAEA,+C;AACA,kE;AACA,0D;AACA,yC;AACA,qF;AACA,W;AACA,oC;AACA,oE;AACA,gB;AACA,0C;AACA,a;AACA,W;AACA,wC;AACA,8C;AACA,mH;AACA,oF;AACA,qC;AACA,W;AACA,gB;AACA,oC;AACA,W;AACA,U;;AAEA,yC;AACA,qD;AACA,a;AACA,iD;AACA,W;AACA,c;AACA,uB;AACA,W;AACA,S;AACA,Q;;AAEA,iB;AACA,gC;AACA,uC;AACA,8C;AACA,U;AACA,gC;AACA,a;AACA,iD;AACA,W;AACA,0D;AACA,0C;AACA,U;AACA,uC;AACA,a;AACA,wD;AACA,W;AACA,gF;AACA,iD;AACA,S;AACA,Q;;AAEA,mB;AACA,yB;AACA,yC;AACA,mC;AACA,U;AACA,gC;AACA,iB;AACA,0C;AACA,W;AACA,U;AACA,0B;AACA,e;AACA,oE;AACA,W;AACA,S;AACA,Q;;AAEA,W;AACA,gC;AACA,wC;AACA,2D;AACA,mB;AACA,W;AACA,S;AACA,Q;;AAEA,Y;AACA,iC;AACA,oF;AACA,U;AACA,0B;AACA,mC;AACA,U;AACA,wC;AACA,6C;AACA,iF;AACA,U;AACA,wC;AACA,a;AACA,kG;AACA,iE;AACA,W;AACA,4B;AACA,0D;AACA,oD;AACA,+B;AACA,wD;AACA,a;AACA,0C;AACA,W;AACA,gB;AACA,sE;AACA,W;AACA,6B;AACA,yB;AACA,U;AACA,uC;AACA,6C;AACA,iF;AACA,U;AACA,uC;AACA,a;AACA,yB;AACA,2B;AACA,yB;AACA,mB;AACA,W;AACA,oD;AACA,iE;AACA,+D;AACA,yF;AACA,yF;AACA,0C;AACA,0B;AACA,4B;AACA,W;AACA,U;AACA,yB;AACA,+B;AACA,S;AACA,Q;;AAEA,kB;AACA,uD;AACA,wD;AACA,8D;AACA,a;AACA,U;AACA,+B;AACA,iC;AACA,sC;AACA,mB;AACA,W;AACA,U;AACA,yC;AACA,sC;AACA,qC;AACA,W;AACA,4C;AACA,iC;AACA,wB;AACA,W;AACA,U;AACA,0C;AACA,qC;AACA,iC;AACA,mB;AACA,W;AACA,S;AACA,Q;;AAEA,sC;AACA,qC;AACA,yC;AACA,S;AACA,sC;AACA,iC;AACA,S;AACA,c;AACA,gC;AACA,S;AACA,Q;AACA,uC;AACA,qC;AACA,uC;AACA,S;AACA,sC;AACA,+B;AACA,S;AACA,c;AACA,8B;AACA,S;AACA,Q;AACA,yB;AACA,4B;AACA,oC;AACA,8C;AACA,W;AACA,gB;AACA,oG;AACA,mD;AACA,W;AACA,S;AACA,Q;AACA,2B;AACA,gD;AACA,oC;AACA,8C;AACA,W;AACA,gB;AACA,sG;AACA,qD;AACA,W;AACA,S;AACA,Q;AACA,yB;AACA,iG;AACA,+C;AACA,Q;AACA,oB;AACA,gC;AACA,a;AACA,wB;AACA,0B;AACA,wB;AACA,W;AACA,oC;AACA,iD;AACA,gD;AACA,uD;AACA,wC;AACA,8B;AACA,yC;AACA,4C;AACA,iE;AACA,8C;AACA,e;AACA,W;AACA,iD;AACA,iF;AACA,U;AACA,6B;AACA,a;AACA,wC;AACA,yB;AACA,W;AACA,uB;AACA,iD;AACA,qD;AACA,gD;AACA,a;AACA,0C;AACA,8B;AACA,mD;AACA,W;AACA,uG;AACA,0C;AACA,+B;AACA,yC;AACA,a;AACA,kB;AACA,yD;AACA,+E;AACA,iB;AACA,a;AACA,+B;AACA,W;AACA,2B;AACA,S;AACA,Q;AACA,yD;AACA,W;AACA,mB;AACA,gB;AACA,kB;AACA,S;AACA,4D;AACA,qD;AACA,gE;AACA,0C;AACA,sC;AACA,gD;AACA,oD;AACA,4F;AACA,qB;AACA,a;AACA,6E;AACA,yC;AACA,a;AACA,2F;AACA,kD;AACA,a;AACA,sD;AACA,sC;AACA,2B;AACA,a;AACA,+D;AACA,+C;AACA,2B;AACA,a;AACA,kB;AACA,gD;AACA,2B;AACA,a;AACA,a;AACA,S;AACA,sC;AACA,2D;AACA,S;AACA,sC;AACA,2B;AACA,S;AACA,sC;AACA,uC;AACA,S;AACA,8C;AACA,oD;AACA,S;AACA,yC;AACA,mC;AACA,S;AACA,qB;AACA,O;AACA,M;;AAEA,uB;AACA,kC;AACA,4B;AACA,O;AACA,2B;AACA,K;AACA,U;AACA,kC;AACA,yB;AACA,O;AACA,0B;AACA,K;;AAEA,wC;AACA,qB;AACA,Y;AACA,K;;AAEA,I;;AAEA,2D;AACA,8B;AACA,4B;AACA,I;;AAEA,uB;;AAEA,wB;AACA,uB;AACA,uB;AACA,uB;AACA,wB;;AAEA,4E;AACA,qE;AACA,2B;AACA,qE;;AAEA,mB;AACA,2C;AACA,M;;AAEA,2F;AACA,4B;AACA,2B;AACA,6B;AACA,4B;;AAEA,6B;;AAEA,oC;AACA,yB;AACA,sC;AACA,4B;AACA,2C;AACA,4B;AACA,iD;AACA,2B;AACA,4B;AACA,4B;;AAEA,Y;AACA,sE;AACA,0D;AACA,yC;AACA,qE;AACA,gE;AACA,iD;AACA,+D;AACA,M;;AAEA,gB;AACA,qB;AACA,wB;AACA,wB;AACA,M;;AAEA,mB;AACA,0B;AACA,wB;AACA,M;;AAEA,mB;AACA,sB;AACA,K;;AAEA,I;;AAEA,gC;;;;;;;;;;;;;;;;;;;AClsBA,kC;AACA,gB;AACA,oB;;AAEA,6D;AACA,iE;AACA,6C;;AAEA,kC;;AAEA,6C;;AAEA,mC;;AAEA,K;AACA,8B;;AAEA,iD;;AAEA,2C;AACA,yB;;AAEA,mC;AACA,iD;AACA,kD;;AAEA,iB;AACA,G;;AAEA,a;AACA,sB;AACA,S;AACA,yD;AACA,+D;AACA,8C;;AAEA,4C;AACA,6C;AACA,yC;AACA,4C;AACA,6C;;AAEA,0C;AACA,gD;;AAEA,kC;AACA,6D;AACA,4D;AACA,uD;;AAEA,+B;AACA,wD;AACA,c;AACA,O;;AAEA,gB;;AAEA,gC;AACA,6C;AACA,sB;AACA,sD;AACA,W;AACA,qB;AACA,sD;AACA,W;AACA,+B;AACA,U;;AAEA,iC;AACA,+D;AACA,4B;AACA,iB;AACA,0C;AACA,W;AACA,U;;AAEA,6B;AACA,kE;AACA,iB;AACA,wC;AACA,gC;AACA,W;AACA,sB;AACA,gC;AACA,W;AACA,qB;AACA,gC;AACA,W;AACA,U;;AAEA,yB;AACA,2C;AACA,8D;AACA,iB;AACA,0C;AACA,kC;AACA,oC;AACA,W;AACA,8B;AACA,U;;AAEA,6B;AACA,2B;AACA,uE;AACA,iB;AACA,0C;AACA,W;AACA,gB;AACA,sB;AACA,W;AACA,sB;AACA,mB;AACA,W;AACA,6B;AACA,U;;AAEA,8B;AACA,0B;AACA,wC;AACA,a;AACA,4D;AACA,4D;AACA,2D;AACA,W;AACA,gB;AACA,0D;AACA,W;AACA,iB;AACA,uC;AACA,W;AACA,4B;AACA,U;;AAEA,mB;AACA,kC;AACA,2C;AACA,kD;AACA,e;AACA,gD;AACA,iC;AACA,iC;AACA,kD;AACA,kC;AACA,kC;AACA,kB;AACA,a;AACA,8B;AACA,qC;AACA,yB;AACA,iH;AACA,oE;AACA,yG;AACA,iB;AACA,e;AACA,4C;AACA,yB;AACA,gH;AACA,oE;AACA,yG;AACA,iB;AACA,e;AACA,a;AACA,0B;AACA,uB;AACA,6C;AACA,kE;AACA,uG;AACA,e;AACA,a;AACA,kB;AACA,0C;AACA,a;AACA,wB;AACA,Y;;AAEA,oC;AACA,iC;AACA,e;AACA,uC;AACA,mB;AACA,oB;AACA,4C;AACA,mB;AACA,oB;AACA,sC;AACA,mB;AACA,oB;AACA,0C;AACA,mB;AACA,oB;AACA,8C;AACA,2C;AACA,mB;AACA,oB;AACA,sB;AACA,a;AACA,mC;AACA,sB;AACA,wC;AACA,2C;AACA,2C;AACA,2C;AACA,6C;AACA,e;AACA,kC;AACA,sD;AACA,e;AACA,a;AACA,qC;AACA,sB;AACA,wC;AACA,e;AACA,kC;AACA,sD;AACA,e;AACA,a;AACA,0C;AACA,sB;AACA,2C;AACA,gD;AACA,8C;AACA,0C;AACA,yC;AACA,e;AACA,kC;AACA,sD;AACA,e;AACA,a;AACA,uB;AACA,W;AACA,U;;AAEA,wC;AACA,uC;AACA,2C;AACA,W;AACA,wC;AACA,mC;AACA,W;AACA,gB;AACA,kC;AACA,W;AACA,U;AACA,yC;AACA,uC;AACA,yC;AACA,W;AACA,wC;AACA,iC;AACA,W;AACA,gB;AACA,gC;AACA,W;AACA,U;AACA,2B;AACA,8B;AACA,sC;AACA,gD;AACA,a;AACA,kB;AACA,sG;AACA,qD;AACA,a;AACA,W;AACA,U;AACA,6B;AACA,kD;AACA,sC;AACA,gD;AACA,a;AACA,kB;AACA,wG;AACA,uD;AACA,a;AACA,W;AACA,U;AACA,2B;AACA,mG;AACA,iD;AACA,U;AACA,sB;AACA,kC;AACA,e;AACA,0B;AACA,4B;AACA,0B;AACA,a;AACA,sC;AACA,mD;AACA,kD;AACA,yD;AACA,0C;AACA,gC;AACA,2C;AACA,8C;AACA,mE;AACA,gD;AACA,iB;AACA,a;AACA,mD;AACA,mF;AACA,Y;AACA,+B;AACA,e;AACA,0C;AACA,2B;AACA,a;AACA,yB;AACA,mD;AACA,uD;AACA,kD;AACA,e;AACA,4C;AACA,gC;AACA,qD;AACA,a;AACA,wC;AACA,4D;AACA,a;AACA,yG;AACA,4C;AACA,iC;AACA,2C;AACA,e;AACA,oB;AACA,2D;AACA,iF;AACA,mB;AACA,e;AACA,iC;AACA,a;AACA,6B;AACA,W;AACA,U;AACA,2D;AACA,a;AACA,qB;AACA,kB;AACA,oB;AACA,W;AACA,8D;AACA,uD;AACA,kE;AACA,4C;AACA,wC;AACA,kD;AACA,sD;AACA,8F;AACA,uB;AACA,e;AACA,wF;AACA,oD;AACA,e;AACA,iE;AACA,iD;AACA,6B;AACA,e;AACA,oF;AACA,2C;AACA,e;AACA,wD;AACA,wC;AACA,6B;AACA,e;AACA,oB;AACA,kD;AACA,6B;AACA,e;AACA,e;AACA,W;AACA,wC;AACA,6D;AACA,W;AACA,wC;AACA,6B;AACA,W;AACA,wC;AACA,yC;AACA,W;AACA,gD;AACA,sD;AACA,W;AACA,2C;AACA,qC;AACA,W;AACA,uB;AACA,S;AACA,Q;;AAEA,yB;AACA,oC;AACA,8B;AACA,S;AACA,6B;AACA,O;AACA,Y;AACA,oC;AACA,2B;AACA,S;AACA,4B;AACA,O;AACA,M;AACA,G;AACA,sC;AACA,mB;AACA,U;AACA,G;AACA,E;;AAEA,uB;;AAEA,wB;AACA,wB;;AAEA,qB;AACA,qB;AACA,qB;;AAEA,iB;AACA,sB;AACA,kB;AACA,kB;AACA,I;;AAEA,0B;AACA,0B;AACA,0B;;AAEA,iD;AACA,2B;AACA,2B;;AAEA,oB;AACA,oB;;AAEA,mB;AACA,uB;AACA,kB;AACA,mB;AACA,kB;;AAEA,gB;AACA,uC;AACA,wD;AACA,I;;AAEA,iB;AACA,0B;AACA,I;;AAEA,iB;AACA,2B;AACA,iC;AACA,yB;AACA,G;AACA,E;;;AAGA,gC","sourcesContent":["/*\n * # Semantic - Accordion\n * http://github.com/jlukic/semantic-ui/\n *\n *\n * Copyright 2013 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n$.fn.accordion = function(parameters) {\n  var\n    $allModules     = $(this),\n\n    time            = new Date().getTime(),\n    performance     = [],\n\n    query           = arguments[0],\n    methodInvoked   = (typeof query == 'string'),\n    queryArguments  = [].slice.call(arguments, 1),\n    returnedValue\n  ;\n  $allModules\n    .each(function() {\n      var\n        settings        = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.accordion.settings, parameters)\n          : $.extend({}, $.fn.accordion.settings),\n\n        className       = settings.className,\n        namespace       = settings.namespace,\n        selector        = settings.selector,\n        error           = settings.error,\n\n        eventNamespace  = '.' + namespace,\n        moduleNamespace = 'module-' + namespace,\n        moduleSelector  = $allModules.selector || '',\n\n        $module  = $(this),\n        $title   = $module.find(selector.title),\n        $content = $module.find(selector.content),\n\n        element  = this,\n        instance = $module.data(moduleNamespace),\n        module\n      ;\n\n      module = {\n\n        initialize: function() {\n          module.debug('Initializing accordion with bound events', $module);\n          // initializing\n          $title\n            .on('click' + eventNamespace, module.event.click)\n          ;\n          module.instantiate();\n        },\n\n        instantiate: function() {\n          instance = module;\n          $module\n            .data(moduleNamespace, module)\n          ;\n        },\n\n        destroy: function() {\n          module.debug('Destroying previous accordion for', $module);\n          $module\n            .removeData(moduleNamespace)\n          ;\n          $title\n            .off(eventNamespace)\n          ;\n        },\n\n        event: {\n          click: function() {\n            module.verbose('Title clicked', this);\n            var\n              $activeTitle = $(this),\n              index        = $title.index($activeTitle)\n            ;\n            module.toggle(index);\n          },\n          resetStyle: function() {\n            module.verbose('Resetting styles on element', this);\n            $(this)\n              .attr('style', '')\n              .removeAttr('style')\n              .children()\n                .attr('style', '')\n                .removeAttr('style')\n            ;\n          }\n        },\n\n        toggle: function(index) {\n          module.debug('Toggling content content at index', index);\n          var\n            $activeTitle   = $title.eq(index),\n            $activeContent = $activeTitle.next($content),\n            contentIsOpen  = $activeContent.is(':visible')\n          ;\n          if(contentIsOpen) {\n            if(settings.collapsible) {\n              module.close(index);\n            }\n            else {\n              module.debug('Cannot close accordion content collapsing is disabled');\n            }\n          }\n          else {\n            module.open(index);\n          }\n        },\n\n        open: function(index) {\n          var\n            $activeTitle     = $title.eq(index),\n            $activeContent   = $activeTitle.next($content),\n            $previousTitle   = $activeTitle.siblings(selector.title).filter('.' + className.active),\n            $previousContent = $previousTitle.next($title),\n            contentIsOpen    =  ($previousTitle.size() > 0)\n          ;\n          if( !$activeContent.is(':animated') ) {\n            module.debug('Opening accordion content', $activeTitle);\n            if(settings.exclusive && contentIsOpen) {\n              $previousTitle\n                .removeClass(className.active)\n              ;\n              $previousContent\n                .stop()\n                .children()\n                  .animate({\n                    opacity: 0\n                  }, settings.duration, module.event.resetStyle)\n                  .end()\n                .slideUp(settings.duration , settings.easing, function() {\n                  $previousContent\n                    .removeClass(className.active)\n                    .attr('style', '')\n                    .removeAttr('style')\n                    .children()\n                      .attr('style', '')\n                      .removeAttr('style')\n                  ;\n                })\n              ;\n            }\n            $activeTitle\n              .addClass(className.active)\n            ;\n            $activeContent\n              .stop()\n              .children()\n                .attr('style', '')\n                .removeAttr('style')\n                .end()\n              .slideDown(settings.duration, settings.easing, function() {\n                $activeContent\n                  .addClass(className.active)\n                  .attr('style', '')\n                  .removeAttr('style')\n                ;\n                $.proxy(settings.onOpen, $activeContent)();\n                $.proxy(settings.onChange, $activeContent)();\n              })\n            ;\n          }\n        },\n\n        close: function(index) {\n          var\n            $activeTitle   = $title.eq(index),\n            $activeContent = $activeTitle.next($content)\n          ;\n          module.debug('Closing accordion content', $activeContent);\n          $activeTitle\n            .removeClass(className.active)\n          ;\n          $activeContent\n            .removeClass(className.active)\n            .show()\n            .stop()\n            .children()\n              .animate({\n                opacity: 0\n              }, settings.duration, module.event.resetStyle)\n              .end()\n            .slideUp(settings.duration, settings.easing, function(){\n              $activeContent\n                .attr('style', '')\n                .removeAttr('style')\n              ;\n              $.proxy(settings.onClose, $activeContent)();\n              $.proxy(settings.onChange, $activeContent)();\n            })\n          ;\n        },\n\n        setting: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            settings[name] = value;\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          module.debug('Changing internal', name, value);\n          if(value !== undefined) {\n            if( $.isPlainObject(name) ) {\n              $.extend(true, module, name);\n            }\n            else {\n              module[name] = value;\n            }\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n          module.error.apply(console, arguments);\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Element'        : element,\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 100);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && instance !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( instance[camelCaseValue] ) && (depth != maxDepth) ) {\n                instance = instance[camelCaseValue];\n              }\n              else if( instance[camelCaseValue] !== undefined ) {\n                found = instance[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( instance[value] ) && (depth != maxDepth) ) {\n                instance = instance[value];\n              }\n              else if( instance[value] !== undefined ) {\n                found = instance[value];\n                return false;\n              }\n              else {\n                module.error(error.method, query);\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          module.destroy();\n        }\n        module.initialize();\n      }\n    })\n  ;\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.accordion.settings = {\n  name        : 'Accordion',\n  namespace   : 'accordion',\n\n  debug       : true,\n  verbose     : true,\n  performance : true,\n\n  exclusive   : true,\n  collapsible : true,\n\n  duration    : 500,\n  easing      : 'easeInOutQuint',\n\n  onOpen      : function(){},\n  onClose     : function(){},\n  onChange    : function(){},\n\n  error: {\n    method    : 'The method you called is not defined'\n  },\n\n  className   : {\n    active : 'active'\n  },\n\n  selector    : {\n    title   : '.title',\n    content : '.content'\n  }\n\n\n};\n\n// Adds easing\n$.extend( $.easing, {\n  easeInOutQuint: function (x, t, b, c, d) {\n    if ((t/=d/2) < 1) return c/2*t*t*t*t*t + b;\n    return c/2*((t-=2)*t*t*t*t + 2) + b;\n  }\n});\n\n})( jQuery, window , document );\n\n","/*\n * # Semantic - API\n * http://github.com/jlukic/semantic-ui/\n *\n *\n * Copyright 2013 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ( $, window, document, undefined ) {\n\n  $.api = $.fn.api = function(parameters) {\n\n    var\n      settings       = $.extend(true, {}, $.api.settings, parameters),\n\n      // if this keyword isn't a jQuery object, create one\n      context        = (typeof this != 'function')\n        ? this\n        : $('<div/>'),\n      // context defines the element used for loading/error state\n      $context       = (settings.stateContext)\n        ? $(settings.stateContext)\n        : $(context),\n      // module is the thing that initiates the api action, can be independent of context\n      $module = typeof this == 'object'\n        ? $(context)\n        : $context,\n\n      element         = this,\n      time            = new Date().getTime(),\n      performance     = [],\n\n      moduleSelector  = $module.selector || '',\n      moduleNamespace = settings.namespace + '-module',\n\n      className       = settings.className,\n      metadata        = settings.metadata,\n      error           = settings.error,\n\n      instance        = $module.data(moduleNamespace),\n\n      query           = arguments[0],\n      methodInvoked   = (instance !== undefined && typeof query == 'string'),\n      queryArguments  = [].slice.call(arguments, 1),\n\n      module,\n      returnedValue\n    ;\n\n    module = {\n      initialize: function() {\n        var\n          runSettings,\n\n          loadingTimer   = new Date().getTime(),\n          loadingDelay,\n\n          promise,\n          url,\n\n          formData       = {},\n          data,\n\n          ajaxSettings   = {},\n          xhr\n        ;\n\n        // serialize parent form if requested!\n        if(settings.serializeForm && $(this).toJSON() !== undefined) {\n          formData = module.get.formData();\n          module.debug('Adding form data to API Request', formData);\n          $.extend(true, settings.data, formData);\n        }\n\n        // let beforeSend change settings object\n        runSettings = $.proxy(settings.beforeSend, $module)(settings);\n\n        // check for exit conditions\n        if(runSettings !== undefined && !runSettings) {\n          module.error(error.beforeSend);\n          module.reset();\n          return;\n        }\n\n        // get real url from template\n        url = module.get.url( module.get.templateURL() );\n\n        // exit conditions reached from missing url parameters\n        if( !url ) {\n          module.error(error.missingURL);\n          module.reset();\n          return;\n        }\n\n        // promise handles notification on api request, so loading min. delay can occur for all notifications\n        promise =\n          $.Deferred()\n            .always(function() {\n              if(settings.stateContext) {\n                $context\n                  .removeClass(className.loading)\n                ;\n              }\n              $.proxy(settings.complete, $module)();\n            })\n            .done(function(response) {\n              module.debug('API request successful');\n              // take a stab at finding success state if json\n              if(settings.dataType == 'json') {\n                if (response.error !== undefined) {\n                  $.proxy(settings.failure, $context)(response.error, settings, $module);\n                }\n                else if ($.isArray(response.errors)) {\n                  $.proxy(settings.failure, $context)(response.errors[0], settings, $module);\n                }\n                else {\n                  $.proxy(settings.success, $context)(response, settings, $module);\n                }\n              }\n              // otherwise\n              else {\n                $.proxy(settings.success, $context)(response, settings, $module);\n              }\n            })\n            .fail(function(xhr, status, httpMessage) {\n              var\n                errorMessage = (settings.error[status] !== undefined)\n                  ? settings.error[status]\n                  : httpMessage,\n                response\n              ;\n              // let em know unless request aborted\n              if(xhr !== undefined) {\n                // readyState 4 = done, anything less is not really sent\n                if(xhr.readyState !== undefined && xhr.readyState == 4) {\n\n                  // if http status code returned and json returned error, look for it\n                  if( xhr.status != 200 && httpMessage !== undefined && httpMessage !== '') {\n                    module.error(error.statusMessage + httpMessage);\n                  }\n                  else {\n                    if(status == 'error' && settings.dataType == 'json') {\n                      try {\n                        response = $.parseJSON(xhr.responseText);\n                        if(response && response.error !== undefined) {\n                          errorMessage = response.error;\n                        }\n                      }\n                      catch(error) {\n                        module.error(error.JSONParse);\n                      }\n                    }\n                  }\n                  $context\n                    .removeClass(className.loading)\n                    .addClass(className.error)\n                  ;\n                  // show error state only for duration specified in settings\n                  if(settings.errorLength > 0) {\n                    setTimeout(function(){\n                      $context\n                        .removeClass(className.error)\n                      ;\n                    }, settings.errorLength);\n                  }\n                  module.debug('API Request error:', errorMessage);\n                  $.proxy(settings.failure, $context)(errorMessage, settings, this);\n                }\n                else {\n                  module.debug('Request Aborted (Most likely caused by page change)');\n                }\n              }\n            })\n        ;\n\n        // look for params in data\n        $.extend(true, ajaxSettings, settings, {\n          success    : function(){},\n          failure    : function(){},\n          complete   : function(){},\n          type       : settings.method || settings.type,\n          data       : data,\n          url        : url,\n          beforeSend : settings.beforeXHR\n        });\n\n        if(settings.stateContext) {\n          $context\n            .addClass(className.loading)\n          ;\n        }\n\n        if(settings.progress) {\n          module.verbose('Adding progress events');\n          $.extend(true, ajaxSettings, {\n            xhr: function() {\n              var\n                xhr = new window.XMLHttpRequest()\n              ;\n              xhr.upload.addEventListener('progress', function(event) {\n                var\n                  percentComplete\n                ;\n                if (event.lengthComputable) {\n                  percentComplete = Math.round(event.loaded / event.total * 10000) / 100 + '%';\n                  $.proxy(settings.progress, $context)(percentComplete, event);\n                }\n              }, false);\n              xhr.addEventListener('progress', function(event) {\n                var\n                  percentComplete\n                ;\n                if (event.lengthComputable) {\n                  percentComplete = Math.round(event.loaded / event.total * 10000) / 100 + '%';\n                  $.proxy(settings.progress, $context)(percentComplete, event);\n                }\n              }, false);\n              return xhr;\n            }\n          });\n        }\n\n        module.verbose('Creating AJAX request with settings: ', ajaxSettings);\n        xhr =\n          $.ajax(ajaxSettings)\n            .always(function() {\n              // calculate if loading time was below minimum threshold\n              loadingDelay = ( settings.loadingLength - (new Date().getTime() - loadingTimer) );\n              settings.loadingDelay = loadingDelay < 0\n                ? 0\n                : loadingDelay\n              ;\n            })\n            .done(function(response) {\n              var\n                context = this\n              ;\n              setTimeout(function(){\n                promise.resolveWith(context, [response]);\n              }, settings.loadingDelay);\n            })\n            .fail(function(xhr, status, httpMessage) {\n              var\n                context = this\n              ;\n              // page triggers abort on navigation, dont show error\n              if(status != 'abort') {\n                setTimeout(function(){\n                  promise.rejectWith(context, [xhr, status, httpMessage]);\n                }, settings.loadingDelay);\n              }\n              else {\n                $context\n                  .removeClass(className.error)\n                  .removeClass(className.loading)\n                ;\n              }\n            })\n        ;\n        if(settings.stateContext) {\n          $module\n            .data(metadata.promise, promise)\n            .data(metadata.xhr, xhr)\n          ;\n        }\n      },\n\n      get: {\n        formData: function() {\n          return $module\n            .closest('form')\n              .toJSON()\n          ;\n        },\n        templateURL: function() {\n          var\n            action = $module.data(settings.metadata.action) || settings.action || false,\n            url\n          ;\n          if(action) {\n            module.debug('Creating url for: ', action);\n            if(settings.api[action] !== undefined) {\n              url = settings.api[action];\n            }\n            else {\n              module.error(error.missingAction);\n            }\n          }\n          // override with url if specified\n          if(settings.url) {\n            url = settings.url;\n            module.debug('Getting url', url);\n          }\n          return url;\n        },\n        url: function(url, urlData) {\n          var\n            urlVariables\n          ;\n          if(url) {\n            urlVariables = url.match(settings.regExpTemplate);\n            urlData      = urlData || settings.urlData;\n\n            if(urlVariables) {\n              module.debug('Looking for URL variables', urlVariables);\n              $.each(urlVariables, function(index, templateValue){\n                var\n                  term      = templateValue.substr( 2, templateValue.length - 3),\n                  termValue = ($.isPlainObject(urlData) && urlData[term] !== undefined)\n                    ? urlData[term]\n                    : ($module.data(term) !== undefined)\n                      ? $module.data(term)\n                      : urlData[term]\n                ;\n                module.verbose('Looking for variable', term, $module, $module.data(term), urlData[term]);\n                // remove optional value\n                if(termValue === false) {\n                  module.debug('Removing variable from URL', urlVariables);\n                  url = url.replace('/' + templateValue, '');\n                }\n                // undefined condition\n                else if(termValue === undefined || !termValue) {\n                  module.error(error.missingParameter + term);\n                  url = false;\n                  return false;\n                }\n                else {\n                  url = url.replace(templateValue, termValue);\n                }\n              });\n            }\n          }\n          return url;\n        }\n      },\n\n      // reset api request\n      reset: function() {\n        $module\n          .data(metadata.promise, false)\n          .data(metadata.xhr, false)\n        ;\n        $context\n          .removeClass(className.error)\n          .removeClass(className.loading)\n        ;\n      },\n\n      setting: function(name, value) {\n        if( $.isPlainObject(name) ) {\n          $.extend(true, settings, name);\n        }\n        else if(value !== undefined) {\n          settings[name] = value;\n        }\n        else {\n          return settings[name];\n        }\n      },\n      internal: function(name, value) {\n        if( $.isPlainObject(name) ) {\n          $.extend(true, module, name);\n        }\n        else if(value !== undefined) {\n          module[name] = value;\n        }\n        else {\n          return module[name];\n        }\n      },\n      debug: function() {\n        if(settings.debug) {\n          if(settings.performance) {\n            module.performance.log(arguments);\n          }\n          else {\n            module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n            module.debug.apply(console, arguments);\n          }\n        }\n      },\n      verbose: function() {\n        if(settings.verbose && settings.debug) {\n          if(settings.performance) {\n            module.performance.log(arguments);\n          }\n          else {\n            module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n            module.verbose.apply(console, arguments);\n          }\n        }\n      },\n      error: function() {\n        module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n        module.error.apply(console, arguments);\n      },\n      performance: {\n        log: function(message) {\n          var\n            currentTime,\n            executionTime,\n            previousTime\n          ;\n          if(settings.performance) {\n            currentTime   = new Date().getTime();\n            previousTime  = time || currentTime;\n            executionTime = currentTime - previousTime;\n            time          = currentTime;\n            performance.push({\n              'Element'        : element,\n              'Name'           : message[0],\n              'Arguments'      : [].slice.call(message, 1) || '',\n              'Execution Time' : executionTime\n            });\n          }\n          clearTimeout(module.performance.timer);\n          module.performance.timer = setTimeout(module.performance.display, 100);\n        },\n        display: function() {\n          var\n            title = settings.name + ':',\n            totalTime = 0\n          ;\n          time = false;\n          clearTimeout(module.performance.timer);\n          $.each(performance, function(index, data) {\n            totalTime += data['Execution Time'];\n          });\n          title += ' ' + totalTime + 'ms';\n          if(moduleSelector) {\n            title += ' \\'' + moduleSelector + '\\'';\n          }\n          if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n            console.groupCollapsed(title);\n            if(console.table) {\n              console.table(performance);\n            }\n            else {\n              $.each(performance, function(index, data) {\n                console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n              });\n            }\n            console.groupEnd();\n          }\n          performance = [];\n        }\n      },\n      invoke: function(query, passedArguments, context) {\n        var\n          maxDepth,\n          found,\n          response\n        ;\n        passedArguments = passedArguments || queryArguments;\n        context         = element         || context;\n        if(typeof query == 'string' && instance !== undefined) {\n          query    = query.split(/[\\. ]/);\n          maxDepth = query.length - 1;\n          $.each(query, function(depth, value) {\n            var camelCaseValue = (depth != maxDepth)\n              ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n              : query\n            ;\n            if( $.isPlainObject( instance[value] ) && (depth != maxDepth) ) {\n              instance = instance[value];\n            }\n            else if( $.isPlainObject( instance[camelCaseValue] ) && (depth != maxDepth) ) {\n              instance = instance[camelCaseValue];\n            }\n            else if( instance[value] !== undefined ) {\n              found = instance[value];\n              return false;\n            }\n            else if( instance[camelCaseValue] !== undefined ) {\n              found = instance[camelCaseValue];\n              return false;\n            }\n            else {\n              module.error(error.method, query);\n              return false;\n            }\n          });\n        }\n        if ( $.isFunction( found ) ) {\n          response = found.apply(context, passedArguments);\n        }\n        else if(found !== undefined) {\n          response = found;\n        }\n        if($.isArray(returnedValue)) {\n          returnedValue.push(response);\n        }\n        else if(returnedValue !== undefined) {\n          returnedValue = [returnedValue, response];\n        }\n        else if(response !== undefined) {\n          returnedValue = response;\n        }\n        return found;\n      }\n    };\n\n    if(methodInvoked) {\n      if(instance === undefined) {\n        module.initialize();\n      }\n      module.invoke(query);\n    }\n    else {\n      if(instance !== undefined) {\n        module.destroy();\n      }\n      module.initialize();\n    }\n\n    return (returnedValue !== undefined)\n      ? returnedValue\n      : this\n    ;\n  };\n\n  // handle DOM attachment to API functionality\n  $.fn.apiButton = function(parameters) {\n    $(this)\n      .each(function(){\n        var\n          // if only function passed it is success callback\n          $module  = $(this),\n          selector = $(this).selector || '',\n\n          settings = ( $.isFunction(parameters) )\n            ? $.extend(true, {}, $.api.settings, $.fn.apiButton.settings, { stateContext: this, success: parameters })\n            : $.extend(true, {}, $.api.settings, $.fn.apiButton.settings, { stateContext: this}, parameters),\n          module\n        ;\n        module = {\n          initialize: function() {\n            if(settings.context && selector !== '') {\n              $(settings.context)\n                .on(selector, 'click.' + settings.namespace, module.click)\n              ;\n            }\n            else {\n              $module\n                .on('click.' + settings.namespace, module.click)\n              ;\n            }\n          },\n          click: function() {\n            if(!settings.filter || $(this).filter(settings.filter).size() === 0) {\n              $.proxy( $.api, this )(settings);\n            }\n          }\n        };\n        module.initialize();\n      })\n    ;\n    return this;\n  };\n\n  $.api.settings = {\n\n    name        : 'API',\n    namespace   : 'api',\n\n    debug       : true,\n    verbose     : true,\n    performance : true,\n\n    api         : {},\n\n    beforeSend  : function(settings) {\n      return settings;\n    },\n    beforeXHR   : function(xhr) {},\n    success     : function(response) {},\n    complete    : function(response) {},\n    failure     : function(errorCode) {},\n    progress    : false,\n\n    error : {\n      missingAction    : 'API action used but no url was defined',\n      missingURL       : 'URL not specified for the API action',\n      missingParameter : 'Missing an essential URL parameter: ',\n\n      timeout          : 'Your request timed out',\n      error            : 'There was an error with your request',\n      parseError       : 'There was an error parsing your request',\n      JSONParse        : 'JSON could not be parsed during error handling',\n      statusMessage    : 'Server gave an error: ',\n      beforeSend       : 'The before send function has aborted the request',\n      exitConditions   : 'API Request Aborted. Exit conditions met'\n    },\n\n    className: {\n      loading : 'loading',\n      error   : 'error'\n    },\n\n    metadata: {\n      action  : 'action',\n      promise : 'promise',\n      xhr     : 'xhr'\n    },\n\n    regExpTemplate: /\\{\\$([A-z]+)\\}/g,\n\n    action        : false,\n    url           : false,\n    urlData       : false,\n    serializeForm : false,\n\n    stateContext  : false,\n\n    method        : 'get',\n    data          : {},\n    dataType      : 'json',\n    cache         : true,\n\n    loadingLength : 200,\n    errorLength   : 2000\n\n  };\n\n  $.fn.apiButton.settings = {\n    filter       : '.disabled, .loading',\n    context      : false,\n    stateContext : false\n  };\n\n})( jQuery, window , document );","/*\n * # Semantic - Colorize\n * http://github.com/jlukic/semantic-ui/\n *\n *\n * Copyright 2013 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ( $, window, document, undefined ) {\n\n  $.fn.colorize = function(parameters) {\n    var\n      settings        = $.extend(true, {}, $.fn.colorize.settings, parameters),\n      // hoist arguments\n      moduleArguments = arguments || false\n    ;\n    $(this)\n      .each(function(instanceIndex) {\n\n        var\n          $module         = $(this),\n\n          mainCanvas      = $('<canvas />')[0],\n          imageCanvas     = $('<canvas />')[0],\n          overlayCanvas   = $('<canvas />')[0],\n\n          backgroundImage = new Image(),\n\n          // defs\n          mainContext,\n          imageContext,\n          overlayContext,\n\n          image,\n          imageName,\n\n          width,\n          height,\n\n          // shortucts\n          colors    = settings.colors,\n          paths     = settings.paths,\n          namespace = settings.namespace,\n          error     = settings.error,\n\n          // boilerplate\n          instance   = $module.data('module-' + namespace),\n          module\n        ;\n\n        module = {\n\n          checkPreconditions: function() {\n            module.debug('Checking pre-conditions');\n\n            if( !$.isPlainObject(colors) || $.isEmptyObject(colors) ) {\n              module.error(error.undefinedColors);\n              return false;\n            }\n            return true;\n          },\n\n          async: function(callback) {\n            if(settings.async) {\n              setTimeout(callback, 0);\n            }\n            else {\n              callback();\n            }\n          },\n\n          getMetadata: function() {\n            module.debug('Grabbing metadata');\n            image     = $module.data('image') || settings.image || undefined;\n            imageName = $module.data('name')  || settings.name  || instanceIndex;\n            width     = settings.width        || $module.width();\n            height    = settings.height       || $module.height();\n            if(width === 0 || height === 0) {\n              module.error(error.undefinedSize);\n            }\n          },\n\n          initialize: function() {\n            module.debug('Initializing with colors', colors);\n            if( module.checkPreconditions() ) {\n\n              module.async(function() {\n                module.getMetadata();\n                module.canvas.create();\n\n                module.draw.image(function() {\n                  module.draw.colors();\n                  module.canvas.merge();\n                });\n                $module\n                  .data('module-' + namespace, module)\n                ;\n              });\n            }\n          },\n\n          redraw: function() {\n            module.debug('Redrawing image');\n            module.async(function() {\n              module.canvas.clear();\n              module.draw.colors();\n              module.canvas.merge();\n            });\n          },\n\n          change: {\n            color: function(colorName, color) {\n              module.debug('Changing color', colorName);\n              if(colors[colorName] === undefined) {\n                module.error(error.missingColor);\n                return false;\n              }\n              colors[colorName] = color;\n              module.redraw();\n            }\n          },\n\n          canvas: {\n            create: function() {\n              module.debug('Creating canvases');\n\n              mainCanvas.width     = width;\n              mainCanvas.height    = height;\n              imageCanvas.width    = width;\n              imageCanvas.height   = height;\n              overlayCanvas.width  = width;\n              overlayCanvas.height = height;\n\n              mainContext    = mainCanvas.getContext('2d');\n              imageContext   = imageCanvas.getContext('2d');\n              overlayContext = overlayCanvas.getContext('2d');\n\n              $module\n                .append( mainCanvas )\n              ;\n              mainContext    = $module.children('canvas')[0].getContext('2d');\n            },\n            clear: function(context) {\n              module.debug('Clearing canvas');\n              overlayContext.fillStyle = '#FFFFFF';\n              overlayContext.fillRect(0, 0, width, height);\n            },\n            merge: function() {\n              if( !$.isFunction(mainContext.blendOnto) ) {\n                module.error(error.missingPlugin);\n                return;\n              }\n              mainContext.putImageData( imageContext.getImageData(0, 0, width, height), 0, 0);\n              overlayContext.blendOnto(mainContext, 'multiply');\n            }\n          },\n\n          draw: {\n\n            image: function(callback) {\n              module.debug('Drawing image');\n              callback = callback || function(){};\n              if(image) {\n                backgroundImage.src    = image;\n                backgroundImage.onload = function() {\n                  imageContext.drawImage(backgroundImage, 0, 0);\n                  callback();\n                };\n              }\n              else {\n                module.error(error.noImage);\n                callback();\n              }\n            },\n\n            colors: function() {\n              module.debug('Drawing color overlays', colors);\n              $.each(colors, function(colorName, color) {\n                settings.onDraw(overlayContext, imageName, colorName, color);\n              });\n            }\n\n          },\n\n          debug: function(message, variableName) {\n            if(settings.debug) {\n              if(variableName !== undefined) {\n                console.info(settings.name + ': ' + message, variableName);\n              }\n              else {\n                console.info(settings.name + ': ' + message);\n              }\n            }\n          },\n          error: function(errorMessage) {\n            console.warn(settings.name + ': ' + errorMessage);\n          },\n          invoke: function(methodName, context, methodArguments) {\n            var\n              method\n            ;\n            methodArguments = methodArguments || Array.prototype.slice.call( arguments, 2 );\n\n            if(typeof methodName == 'string' && instance !== undefined) {\n              methodName = methodName.split('.');\n              $.each(methodName, function(index, name) {\n                if( $.isPlainObject( instance[name] ) ) {\n                  instance = instance[name];\n                  return true;\n                }\n                else if( $.isFunction( instance[name] ) ) {\n                  method = instance[name];\n                  return true;\n                }\n                module.error(settings.error.method);\n                return false;\n              });\n            }\n            return ( $.isFunction( method ) )\n              ? method.apply(context, methodArguments)\n              : false\n            ;\n          }\n\n        };\n        if(instance !== undefined && moduleArguments) {\n          // simpler than invoke realizing to invoke itself (and losing scope due prototype.call()\n          if(moduleArguments[0] == 'invoke') {\n            moduleArguments = Array.prototype.slice.call( moduleArguments, 1 );\n          }\n          return module.invoke(moduleArguments[0], this, Array.prototype.slice.call( moduleArguments, 1 ) );\n        }\n        // initializing\n        module.initialize();\n      })\n    ;\n    return this;\n  };\n\n  $.fn.colorize.settings = {\n    name      : 'Image Colorizer',\n    debug     : true,\n    namespace : 'colorize',\n\n    onDraw    : function(overlayContext, imageName, colorName, color) {},\n\n    // whether to block execution while updating canvas\n    async     : true,\n    // object containing names and default values of color regions\n    colors    : {},\n\n    metadata: {\n      image : 'image',\n      name  : 'name'\n    },\n\n    error: {\n      noImage         : 'No tracing image specified',\n      undefinedColors : 'No default colors specified.',\n      missingColor    : 'Attempted to change color that does not exist',\n      missingPlugin   : 'Blend onto plug-in must be included',\n      undefinedHeight : 'The width or height of image canvas could not be automatically determined. Please specify a height.'\n    }\n\n  };\n\n})( jQuery, window , document );\n","/*\n * # Semantic - Form Validation\n * http://github.com/jlukic/semantic-ui/\n *\n *\n * Copyright 2013 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ( $, window, document, undefined ) {\n\n$.fn.form = function(fields, parameters) {\n  var\n    $allModules     = $(this),\n\n    settings        = $.extend(true, {}, $.fn.form.settings, parameters),\n    validation      = $.extend({}, $.fn.form.settings.defaults, fields),\n\n    namespace       = settings.namespace,\n    metadata        = settings.metadata,\n    selector        = settings.selector,\n    className       = settings.className,\n    error           = settings.error,\n\n    eventNamespace  = '.' + namespace,\n    moduleNamespace = 'module-' + namespace,\n\n    moduleSelector  = $allModules.selector || '',\n\n    time            = new Date().getTime(),\n    performance     = [],\n\n    query           = arguments[0],\n    methodInvoked   = (typeof query == 'string'),\n    queryArguments  = [].slice.call(arguments, 1),\n    returnedValue\n  ;\n  $allModules\n    .each(function() {\n      var\n        $module    = $(this),\n        $field     = $(this).find(selector.field),\n        $group     = $(this).find(selector.group),\n        $message   = $(this).find(selector.message),\n        $prompt    = $(this).find(selector.prompt),\n        $submit    = $(this).find(selector.submit),\n\n        formErrors = [],\n\n        element    = this,\n        instance   = $module.data(moduleNamespace),\n        module\n      ;\n\n      module      = {\n\n        initialize: function() {\n          module.verbose('Initializing form validation', $module, validation, settings);\n          if(settings.keyboardShortcuts) {\n            $field\n              .on('keydown' + eventNamespace, module.event.field.keydown)\n            ;\n          }\n          $module\n            .on('submit' + eventNamespace, module.validate.form)\n          ;\n          $field\n            .on('blur' + eventNamespace, module.event.field.blur)\n          ;\n          $submit\n            .on('click' + eventNamespace, module.submit)\n          ;\n          $field\n            .on(module.get.changeEvent() + eventNamespace, module.event.field.change)\n          ;\n          module.instantiate();\n        },\n\n        instantiate: function() {\n          module.verbose('Storing instance of module', module);\n          instance = module;\n          $module\n            .data(moduleNamespace, module)\n          ;\n        },\n\n        destroy: function() {\n          module.verbose('Destroying previous module', instance);\n          $module\n            .off(eventNamespace)\n            .removeData(moduleNamespace)\n          ;\n        },\n\n        refresh: function() {\n          module.verbose('Refreshing selector cache');\n          $field = $module.find(selector.field);\n        },\n\n        submit: function() {\n          module.verbose('Submitting form', $module);\n          $module\n            .submit()\n          ;\n        },\n\n        event: {\n          field: {\n            keydown: function(event) {\n              var\n                $field  = $(this),\n                key     = event.which,\n                keyCode = {\n                  enter  : 13,\n                  escape : 27\n                }\n              ;\n              if( key == keyCode.escape) {\n                module.verbose('Escape key pressed blurring field');\n                $field\n                  .blur()\n                ;\n              }\n              if(!event.ctrlKey && key == keyCode.enter && $field.is(selector.input) ) {\n                module.debug('Enter key pressed, submitting form');\n                $submit\n                  .addClass(className.down)\n                ;\n                $field\n                  .one('keyup' + eventNamespace, module.event.field.keyup)\n                ;\n                event.preventDefault();\n                return false;\n              }\n            },\n            keyup: function() {\n              module.verbose('Doing keyboard shortcut form submit');\n              $submit.removeClass(className.down);\n              module.submit();\n            },\n            blur: function() {\n              var\n                $field      = $(this),\n                $fieldGroup = $field.closest($group)\n              ;\n              if( $fieldGroup.hasClass(className.error) ) {\n                module.debug('Revalidating field', $field,  module.get.validation($field));\n                module.validate.field( module.get.validation($field) );\n              }\n              else if(settings.on == 'blur' || settings.on == 'change') {\n                module.validate.field( module.get.validation($field) );\n              }\n            },\n            change: function() {\n              var\n                $field      = $(this),\n                $fieldGroup = $field.closest($group)\n              ;\n              if(settings.on == 'change' || ( $fieldGroup.hasClass(className.error) && settings.revalidate) ) {\n                clearTimeout(module.timer);\n                module.timer = setTimeout(function() {\n                  module.debug('Revalidating field', $field,  module.get.validation($field));\n                  module.validate.field( module.get.validation($field) );\n                }, settings.delay);\n              }\n            }\n          }\n\n        },\n\n        get: {\n          changeEvent: function() {\n            return (document.createElement('input').oninput !== undefined)\n              ? 'input'\n              : (document.createElement('input').onpropertychange !== undefined)\n                ? 'propertychange'\n                : 'keyup'\n            ;\n          },\n          field: function(identifier) {\n            module.verbose('Finding field with identifier', identifier);\n            if( $field.filter('#' + identifier).size() > 0 ) {\n              return $field.filter('#' + identifier);\n            }\n            else if( $field.filter('[name=\"' + identifier +'\"]').size() > 0 ) {\n              return $field.filter('[name=\"' + identifier +'\"]');\n            }\n            else if( $field.filter('[data-' + metadata.validate + '=\"'+ identifier +'\"]').size() > 0 ) {\n              return $field.filter('[data-' + metadata.validate + '=\"'+ identifier +'\"]');\n            }\n            return $('<input/>');\n          },\n          validation: function($field) {\n            var\n              rules\n            ;\n            $.each(validation, function(fieldName, field) {\n              if( module.get.field(field.identifier).get(0) == $field.get(0) ) {\n                rules = field;\n              }\n            });\n            return rules || false;\n          }\n        },\n\n        has: {\n\n          field: function(identifier) {\n            module.verbose('Checking for existence of a field with identifier', identifier);\n            if( $field.filter('#' + identifier).size() > 0 ) {\n              return true;\n            }\n            else if( $field.filter('[name=\"' + identifier +'\"]').size() > 0 ) {\n              return true;\n            }\n            else if( $field.filter('[data-' + metadata.validate + '=\"'+ identifier +'\"]').size() > 0 ) {\n              return true;\n            }\n            return false;\n          }\n\n        },\n\n        add: {\n          prompt: function(field, errors) {\n            var\n              $field       = module.get.field(field.identifier),\n              $fieldGroup  = $field.closest($group),\n              $prompt      = $fieldGroup.find(selector.prompt),\n              promptExists = ($prompt.size() !== 0)\n            ;\n            module.verbose('Adding inline error', field);\n            $fieldGroup\n              .addClass(className.error)\n            ;\n            if(settings.inline) {\n              if(!promptExists) {\n                $prompt = settings.templates.prompt(errors);\n                $prompt\n                  .appendTo($fieldGroup)\n                ;\n              }\n              $prompt\n                .html(errors[0])\n              ;\n              if(!promptExists) {\n                if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {\n                  module.verbose('Displaying error with css transition', settings.transition);\n                  $prompt.transition(settings.transition + ' in', settings.duration);\n                }\n                else {\n                  module.verbose('Displaying error with fallback javascript animation');\n                  $prompt\n                    .fadeIn(settings.duration)\n                  ;\n                }\n              }\n            }\n          },\n          errors: function(errors) {\n            module.debug('Adding form error messages', errors);\n            $message\n              .html( settings.templates.error(errors) )\n            ;\n          }\n        },\n\n        remove: {\n          prompt: function(field) {\n            var\n              $field      = module.get.field(field.identifier),\n              $fieldGroup = $field.closest($group),\n              $prompt     = $fieldGroup.find(selector.prompt)\n            ;\n            $fieldGroup\n              .removeClass(className.error)\n            ;\n            if(settings.inline && $prompt.is(':visible')) {\n              module.verbose('Removing prompt for field', field);\n              if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {\n                $prompt.transition(settings.transition + ' out', settings.duration, function() {\n                  $prompt.remove();\n                });\n              }\n              else {\n                $prompt\n                  .fadeOut(settings.duration, function(){\n                    $prompt.remove();\n                  })\n                ;\n              }\n            }\n          }\n        },\n\n        validate: {\n\n          form: function(event) {\n            var\n              allValid = true\n            ;\n            // reset errors\n            formErrors = [];\n            $.each(validation, function(fieldName, field) {\n              if( !( module.validate.field(field) ) ) {\n                allValid = false;\n              }\n            });\n            if(allValid) {\n              module.debug('Form has no validation errors, submitting');\n              $module\n                .removeClass(className.error)\n                .addClass(className.success)\n              ;\n              $.proxy(settings.onSuccess, this)(event);\n            }\n            else {\n              module.debug('Form has errors');\n              $module.addClass(className.error);\n              if(!settings.inline) {\n                module.add.errors(formErrors);\n              }\n              return $.proxy(settings.onFailure, this)(formErrors);\n            }\n          },\n\n          // takes a validation object and returns whether field passes validation\n          field: function(field) {\n            var\n              $field      = module.get.field(field.identifier),\n              fieldValid  = true,\n              fieldErrors = []\n            ;\n            if(field.rules !== undefined) {\n              $.each(field.rules, function(index, rule) {\n                if( module.has.field(field.identifier) && !( module.validate.rule(field, rule) ) ) {\n                  module.debug('Field is invalid', field.identifier, rule.type);\n                  fieldErrors.push(rule.prompt);\n                  fieldValid = false;\n                }\n              });\n            }\n            if(fieldValid) {\n              module.remove.prompt(field, fieldErrors);\n              $.proxy(settings.onValid, $field)();\n            }\n            else {\n              formErrors = formErrors.concat(fieldErrors);\n              module.add.prompt(field, fieldErrors);\n              $.proxy(settings.onInvalid, $field)(fieldErrors);\n              return false;\n            }\n            return true;\n          },\n\n          // takes validation rule and returns whether field passes rule\n          rule: function(field, validation) {\n            var\n              $field        = module.get.field(field.identifier),\n              type          = validation.type,\n              value         = $field.val() + '',\n\n              bracketRegExp = /\\[(.*?)\\]/i,\n              bracket       = bracketRegExp.exec(type),\n              isValid       = true,\n              ancillary,\n              functionType\n            ;\n            // if bracket notation is used, pass in extra parameters\n            if(bracket !== undefined && bracket !== null) {\n              ancillary    = '' + bracket[1];\n              functionType = type.replace(bracket[0], '');\n              isValid      = $.proxy(settings.rules[functionType], $module)(value, ancillary);\n            }\n            // normal notation\n            else {\n              isValid = $.proxy(settings.rules[type], $field)(value);\n            }\n            return isValid;\n          }\n        },\n\n        setting: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            settings[name] = value;\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n          module.error.apply(console, arguments);\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Element'        : element,\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 100);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if($allModules.size() > 1) {\n              title += ' ' + '(' + $allModules.size() + ')';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && instance !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( instance[camelCaseValue] ) && (depth != maxDepth) ) {\n                instance = instance[camelCaseValue];\n              }\n              else if( instance[camelCaseValue] !== undefined ) {\n                found = instance[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( instance[value] ) && (depth != maxDepth) ) {\n                instance = instance[value];\n              }\n              else if( instance[value] !== undefined ) {\n                found = instance[value];\n                return false;\n              }\n              else {\n                module.error(error.method, query);\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          module.destroy();\n        }\n        module.initialize();\n      }\n\n    })\n  ;\n\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.form.settings = {\n\n  name              : 'Form',\n  namespace         : 'form',\n\n  debug             : true,\n  verbose           : true,\n  performance       : true,\n\n\n  keyboardShortcuts : true,\n  on                : 'submit',\n  inline            : false,\n\n  delay             : 200,\n  revalidate        : true,\n\n  transition        : 'scale',\n  duration          : 150,\n\n\n  onValid           : function() {},\n  onInvalid         : function() {},\n  onSuccess         : function() { return true; },\n  onFailure         : function() { return false; },\n\n  metadata : {\n    validate: 'validate'\n  },\n\n  selector : {\n    message : '.error.message',\n    field   : 'input, textarea, select',\n    group   : '.field',\n    input   : 'input',\n    prompt  : '.prompt',\n    submit  : '.submit'\n  },\n\n  className : {\n    error   : 'error',\n    success : 'success',\n    down    : 'down',\n    label   : 'ui label prompt'\n  },\n\n  // errors\n  error: {\n    method   : 'The method you called is not defined.'\n  },\n\n\n  templates: {\n    error: function(errors) {\n      var\n        html = '<ul class=\"list\">'\n      ;\n      $.each(errors, function(index, value) {\n        html += '<li>' + value + '</li>';\n      });\n      html += '</ul>';\n      return $(html);\n    },\n    prompt: function(errors) {\n      return $('<div/>')\n        .addClass('ui red pointing prompt label')\n        .html(errors[0])\n      ;\n    }\n  },\n\n  rules: {\n    checked: function() {\n      return ($(this).filter(':checked').size() > 0);\n    },\n    empty: function(value) {\n      return !(value === undefined || '' === value);\n    },\n    email: function(value){\n      var\n        emailRegExp = new RegExp(\"[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\", \"i\")\n      ;\n      return emailRegExp.test(value);\n    },\n    length: function(value, requiredLength) {\n      return (value !== undefined)\n        ? (value.length >= requiredLength)\n        : false\n      ;\n    },\n    not: function(value, notValue) {\n      return (value != notValue);\n    },\n    contains: function(value, text) {\n      text = text.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n      return (value.search(text) !== -1);\n    },\n    is: function(value, text) {\n      return (value == text);\n    },\n    maxLength: function(value, maxLength) {\n      return (value !== undefined)\n        ? (value.length <= maxLength)\n        : false\n      ;\n    },\n    match: function(value, fieldIdentifier) {\n      // use either id or name of field\n      var\n        $form = $(this),\n        matchingValue\n      ;\n      if($form.find('#' + fieldIdentifier).size() > 0) {\n        matchingValue = $form.find('#' + fieldIdentifier).val();\n      }\n      else if($form.find('[name=' + fieldIdentifier +']').size() > 0) {\n        matchingValue = $form.find('[name=' + fieldIdentifier + ']').val();\n      }\n      else if( $form.find('[data-validate=\"'+ fieldIdentifier +'\"]').size() > 0 ) {\n        matchingValue = $form.find('[data-validate=\"'+ fieldIdentifier +'\"]').val();\n      }\n      return (matchingValue !== undefined)\n        ? ( value.toString() == matchingValue.toString() )\n        : false\n      ;\n    },\n    url: function(value) {\n      var\n        urlRegExp = /(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/\n      ;\n      return urlRegExp.test(value);\n    }\n  }\n\n};\n\n})( jQuery, window , document );\n","/*\n * # Semantic - State\n * http://github.com/jlukic/semantic-ui/\n *\n *\n * Copyright 2013 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ( $, window, document, undefined ) {\n\n$.fn.state = function(parameters) {\n  var\n    $allModules     = $(this),\n    settings        = $.extend(true, {}, $.fn.state.settings, parameters),\n\n    moduleSelector  = $allModules.selector || '',\n\n    time            = new Date().getTime(),\n    performance     = [],\n\n    query           = arguments[0],\n    methodInvoked   = (typeof query == 'string'),\n    queryArguments  = [].slice.call(arguments, 1),\n\n    // shortcuts\n    error         = settings.error,\n    metadata      = settings.metadata,\n    className     = settings.className,\n    namespace     = settings.namespace,\n    states        = settings.states,\n    text          = settings.text,\n\n    eventNamespace  = '.' + namespace,\n    moduleNamespace = namespace + '-module',\n\n\n    returnedValue\n  ;\n  $allModules\n    .each(function() {\n      var\n        $module       = $(this),\n\n        element       = this,\n        instance      = $module.data(moduleNamespace),\n\n        module\n      ;\n      module = {\n\n        initialize: function() {\n          module.verbose('Initializing module');\n\n          // allow module to guess desired state based on element\n          if(settings.automatic) {\n            module.add.defaults();\n          }\n\n          // bind events with delegated events\n          if(settings.context && moduleSelector !== '') {\n            if( module.allows('hover') ) {\n              $(element, settings.context)\n                .on(moduleSelector, 'mouseenter' + eventNamespace, module.enable.hover)\n                .on(moduleSelector, 'mouseleave' + eventNamespace, module.disable.hover)\n              ;\n            }\n            if( module.allows('down') ) {\n              $(element, settings.context)\n                .on(moduleSelector, 'mousedown' + eventNamespace, module.enable.down)\n                .on(moduleSelector, 'mouseup'   + eventNamespace, module.disable.down)\n              ;\n            }\n            if( module.allows('focus') ) {\n              $(element, settings.context)\n                .on(moduleSelector, 'focus' + eventNamespace, module.enable.focus)\n                .on(moduleSelector, 'blur'  + eventNamespace, module.disable.focus)\n              ;\n            }\n            $(settings.context)\n              .on(moduleSelector, 'mouseenter' + eventNamespace, module.change.text)\n              .on(moduleSelector, 'mouseleave' + eventNamespace, module.reset.text)\n              .on(moduleSelector, 'click'      + eventNamespace, module.toggle.state)\n            ;\n          }\n          else {\n            if( module.allows('hover') ) {\n              $module\n                .on('mouseenter' + eventNamespace, module.enable.hover)\n                .on('mouseleave' + eventNamespace, module.disable.hover)\n              ;\n            }\n            if( module.allows('down') ) {\n              $module\n                .on('mousedown' + eventNamespace, module.enable.down)\n                .on('mouseup'   + eventNamespace, module.disable.down)\n              ;\n            }\n            if( module.allows('focus') ) {\n              $module\n                .on('focus' + eventNamespace, module.enable.focus)\n                .on('blur'  + eventNamespace, module.disable.focus)\n              ;\n            }\n            $module\n              .on('mouseenter' + eventNamespace, module.change.text)\n              .on('mouseleave' + eventNamespace, module.reset.text)\n              .on('click'      + eventNamespace, module.toggle.state)\n            ;\n          }\n          module.instantiate();\n        },\n\n        instantiate: function() {\n          module.verbose('Storing instance of module', module);\n          instance = module;\n          $module\n            .data(moduleNamespace, module)\n          ;\n        },\n\n        destroy: function() {\n          module.verbose('Destroying previous module', instance);\n          $module\n            .off(eventNamespace)\n            .removeData(moduleNamespace)\n          ;\n        },\n\n        refresh: function() {\n          module.verbose('Refreshing selector cache');\n          $module = $(element);\n        },\n\n        add: {\n          defaults: function() {\n            var\n              userStates = parameters && $.isPlainObject(parameters.states)\n                ? parameters.states\n                : {}\n            ;\n            $.each(settings.defaults, function(type, typeStates) {\n              if( module.is[type] !== undefined && module.is[type]() ) {\n                module.verbose('Adding default states', type, element);\n                $.extend(settings.states, typeStates, userStates);\n              }\n            });\n          }\n        },\n\n        is: {\n\n          active: function() {\n            return $module.hasClass(className.active);\n          },\n          loading: function() {\n            return $module.hasClass(className.loading);\n          },\n          inactive: function() {\n            return !( $module.hasClass(className.active) );\n          },\n\n          enabled: function() {\n            return !( $module.is(settings.filter.active) );\n          },\n          disabled: function() {\n            return ( $module.is(settings.filter.active) );\n          },\n          textEnabled: function() {\n            return !( $module.is(settings.filter.text) );\n          },\n\n          // definitions for automatic type detection\n          button: function() {\n            return $module.is('.button:not(a, .submit)');\n          },\n          input: function() {\n            return $module.is('input');\n          }\n        },\n\n        allow: function(state) {\n          module.debug('Now allowing state', state);\n          states[state] = true;\n        },\n        disallow: function(state) {\n          module.debug('No longer allowing', state);\n          states[state] = false;\n        },\n\n        allows: function(state) {\n          return states[state] || false;\n        },\n\n        enable: {\n          state: function(state) {\n            if(module.allows(state)) {\n              $module.addClass( className[state] );\n            }\n          },\n          // convenience\n          focus: function() {\n            $module.addClass(className.focus);\n          },\n          hover: function() {\n            $module.addClass(className.hover);\n          },\n          down: function() {\n            $module.addClass(className.down);\n          },\n        },\n\n        disable: {\n          state: function(state) {\n            if(module.allows(state)) {\n              $module.removeClass( className[state] );\n            }\n          },\n          // convenience\n          focus: function() {\n            $module.removeClass(className.focus);\n          },\n          hover: function() {\n            $module.removeClass(className.hover);\n          },\n          down: function() {\n            $module.removeClass(className.down);\n          },\n        },\n\n        toggle: {\n          state: function() {\n            var\n              apiRequest = $module.data(metadata.promise)\n            ;\n            if( module.allows('active') && module.is.enabled() ) {\n              module.refresh();\n              if(apiRequest !== undefined) {\n                module.listenTo(apiRequest);\n              }\n              else {\n                module.change.state();\n              }\n            }\n          }\n        },\n\n        listenTo: function(apiRequest) {\n          module.debug('API request detected, waiting for state signal', apiRequest);\n          if(apiRequest) {\n            if(text.loading) {\n              module.update.text(text.loading);\n            }\n            $.when(apiRequest)\n              .then(function() {\n                if(apiRequest.state() == 'resolved') {\n                  module.debug('API request succeeded');\n                  settings.activateTest   = function(){ return true; };\n                  settings.deactivateTest = function(){ return true; };\n                }\n                else {\n                  module.debug('API request failed');\n                  settings.activateTest   = function(){ return false; };\n                  settings.deactivateTest = function(){ return false; };\n                }\n                module.change.state();\n              })\n            ;\n          }\n          // xhr exists but set to false, beforeSend killed the xhr\n          else {\n            settings.activateTest   = function(){ return false; };\n            settings.deactivateTest = function(){ return false; };\n          }\n        },\n\n        // checks whether active/inactive state can be given\n        change: {\n\n          state: function() {\n            module.debug('Determining state change direction');\n            // inactive to active change\n            if( module.is.inactive() ) {\n              module.activate();\n            }\n            else {\n              module.deactivate();\n            }\n            if(settings.sync) {\n              module.sync();\n            }\n            $.proxy(settings.onChange, element)();\n          },\n\n          text: function() {\n            if( module.is.textEnabled() ) {\n              if( module.is.active() ) {\n                if(text.hover) {\n                  module.verbose('Changing text to hover text', text.hover);\n                  module.update.text(text.hover);\n                }\n                else if(text.disable) {\n                  module.verbose('Changing text to disable text', text.disable);\n                  module.update.text(text.disable);\n                }\n              }\n              else {\n                if(text.hover) {\n                  module.verbose('Changing text to hover text', text.disable);\n                  module.update.text(text.hover);\n                }\n                else if(text.enable){\n                  module.verbose('Changing text to enable text', text.enable);\n                  module.update.text(text.enable);\n                }\n              }\n            }\n          }\n\n        },\n\n        activate: function() {\n          if( $.proxy(settings.activateTest, element)() ) {\n            module.debug('Setting state to active');\n            $module\n              .addClass(className.active)\n            ;\n            module.update.text(text.active);\n          }\n          $.proxy(settings.onActivate, element)();\n        },\n\n        deactivate: function() {\n          if($.proxy(settings.deactivateTest, element)() ) {\n            module.debug('Setting state to inactive');\n            $module\n              .removeClass(className.active)\n            ;\n            module.update.text(text.inactive);\n          }\n          $.proxy(settings.onDeactivate, element)();\n        },\n\n        sync: function() {\n          module.verbose('Syncing other buttons to current state');\n          if( module.is.active() ) {\n            $allModules\n              .not($module)\n                .state('activate');\n          }\n          else {\n            $allModules\n              .not($module)\n                .state('deactivate')\n            ;\n          }\n        },\n\n        get: {\n          text: function() {\n            return (settings.selector.text)\n              ? $module.find(settings.selector.text).text()\n              : $module.html()\n            ;\n          },\n          textFor: function(state) {\n            return text[state] || false;\n          }\n        },\n\n        flash: {\n          text: function(text, duration) {\n            var\n              previousText = module.get.text()\n            ;\n            module.debug('Flashing text message', text, duration);\n            text     = text     || settings.text.flash;\n            duration = duration || settings.flashDuration;\n            module.update.text(text);\n            setTimeout(function(){\n              module.update.text(previousText);\n            }, duration);\n          }\n        },\n\n        reset: {\n          // on mouseout sets text to previous value\n          text: function() {\n            var\n              activeText   = text.active   || $module.data(metadata.storedText),\n              inactiveText = text.inactive || $module.data(metadata.storedText)\n            ;\n            if( module.is.textEnabled() ) {\n              if( module.is.active() && activeText) {\n                module.verbose('Resetting active text', activeText);\n                module.update.text(activeText);\n              }\n              else if(inactiveText) {\n                module.verbose('Resetting inactive text', activeText);\n                module.update.text(inactiveText);\n              }\n            }\n          }\n        },\n\n        update: {\n          text: function(text) {\n            var\n              currentText = module.get.text()\n            ;\n            if(text && text !== currentText) {\n              module.debug('Updating text', text);\n              if(settings.selector.text) {\n                $module\n                  .data(metadata.storedText, text)\n                  .find(settings.selector.text)\n                    .text(text)\n                ;\n              }\n              else {\n                $module\n                  .data(metadata.storedText, text)\n                  .html(text)\n                ;\n              }\n            }\n            else {\n              module.debug('Text is already sane, ignoring update', text);\n            }\n          }\n        },\n\n        setting: function(name, value) {\n          module.debug('Changing setting', name, value);\n          if(value !== undefined) {\n            if( $.isPlainObject(name) ) {\n              $.extend(true, settings, name);\n            }\n            else {\n              settings[name] = value;\n            }\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          module.debug('Changing internal', name, value);\n          if(value !== undefined) {\n            if( $.isPlainObject(name) ) {\n              $.extend(true, module, name);\n            }\n            else {\n              module[name] = value;\n            }\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n          module.error.apply(console, arguments);\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Element'        : element,\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 100);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if($allModules.size() > 1) {\n              title += ' ' + '(' + $allModules.size() + ')';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && instance !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( instance[camelCaseValue] ) && (depth != maxDepth) ) {\n                instance = instance[camelCaseValue];\n              }\n              else if( instance[camelCaseValue] !== undefined ) {\n                found = instance[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( instance[value] ) && (depth != maxDepth) ) {\n                instance = instance[value];\n              }\n              else if( instance[value] !== undefined ) {\n                found = instance[value];\n                return false;\n              }\n              else {\n                module.error(error.method, query);\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          module.destroy();\n        }\n        module.initialize();\n      }\n\n    })\n  ;\n\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.state.settings = {\n\n  // module info\n  name : 'State',\n\n  // debug output\n  debug      : true,\n\n  // verbose debug output\n  verbose    : true,\n\n  // namespace for events\n  namespace  : 'state',\n\n  // debug data includes performance\n  performance: true,\n\n  // callback occurs on state change\n  onActivate   : function() {},\n  onDeactivate : function() {},\n  onChange     : function() {},\n\n  // state test functions\n  activateTest   : function() { return true; },\n  deactivateTest : function() { return true; },\n\n  // whether to automatically map default states\n  automatic     : true,\n\n  // activate / deactivate changes all elements instantiated at same time\n  sync          : false,\n\n  // default flash text duration, used for temporarily changing text of an element\n  flashDuration : 3000,\n\n  // selector filter\n  filter     : {\n    text   : '.loading, .disabled',\n    active : '.disabled'\n  },\n\n  context    : false,\n\n  // error\n  error: {\n    method : 'The method you called is not defined.'\n  },\n\n  // metadata\n  metadata: {\n    promise    : 'promise',\n    storedText : 'stored-text'\n  },\n\n  // change class on state\n  className: {\n    focus   : 'focus',\n    hover   : 'hover',\n    down    : 'down',\n    active  : 'active',\n    loading : 'loading'\n  },\n\n  selector: {\n    // selector for text node\n    text: false\n  },\n\n  defaults : {\n    input: {\n      hover   : true,\n      focus   : true,\n      down    : true,\n      loading : false,\n      active  : false\n    },\n    button: {\n      hover   : true,\n      focus   : false,\n      down    : true,\n      active  : true,\n      loading : true\n    }\n  },\n\n  states     : {\n    hover   : true,\n    focus   : true,\n    down    : true,\n    loading : false,\n    active  : false\n  },\n\n  text     : {\n    flash    : false,\n    hover    : false,\n    active   : false,\n    inactive : false,\n    enable   : false,\n    disable  : false\n  }\n\n};\n\n\n\n})( jQuery, window , document );\n","/*\n * # Semantic - Chatroom\n * http://github.com/jlukic/semantic-ui/\n *\n *\n * Copyright 2013 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n$.fn.chatroom = function(parameters) {\n  var\n    $allModules    = $(this),\n    moduleSelector = $allModules.selector || '',\n\n    time           = new Date().getTime(),\n    performance    = [],\n\n    query          = arguments[0],\n    methodInvoked  = (typeof query == 'string'),\n    queryArguments = [].slice.call(arguments, 1),\n    returnedValue\n  ;\n  $(this)\n    .each(function() {\n      var\n        settings  = $.extend(true, {}, $.fn.chatroom.settings, parameters),\n\n        className = settings.className,\n        namespace = settings.namespace,\n        selector  = settings.selector,\n        error     = settings.error,\n\n        $module         = $(this),\n\n        $expandButton   = $module.find(selector.expandButton),\n        $userListButton = $module.find(selector.userListButton),\n\n        $userList       = $module.find(selector.userList),\n        $room           = $module.find(selector.room),\n        $userCount      = $module.find(selector.userCount),\n\n        $log            = $module.find(selector.log),\n        $message        = $module.find(selector.message),\n\n        $messageInput   = $module.find(selector.messageInput),\n        $messageButton  = $module.find(selector.messageButton),\n\n        instance        = $module.data('module'),\n        element         = this,\n\n        html            = '',\n        users           = {},\n\n        channel,\n        loggedInUser,\n\n        message,\n        count,\n\n        height,\n\n        pusher,\n        module\n      ;\n\n      module = {\n\n        width: {\n          log      : $log.width(),\n          userList : $userList.outerWidth()\n        },\n\n        initialize: function() {\n\n          // check error conditions\n          if(Pusher === undefined) {\n            module.error(error.pusher);\n          }\n          if(settings.key === undefined || settings.channelName === undefined) {\n            module.error(error.key);\n            return false;\n          }\n          else if( !(settings.endpoint.message || settings.endpoint.authentication) ) {\n            module.error(error.endpoint);\n            return false;\n          }\n\n          // define pusher\n          pusher                       = new Pusher(settings.key);\n          Pusher.channel_auth_endpoint = settings.endpoint.authentication;\n\n          channel = pusher.subscribe(settings.channelName);\n\n          channel.bind('pusher:subscription_succeeded', module.user.list.create);\n          channel.bind('pusher:subscription_error', module.error);\n          channel.bind('pusher:member_added', module.user.joined);\n          channel.bind('pusher:member_removed', module.user.left);\n          channel.bind('update_messages', module.message.receive);\n\n          $.each(settings.customEvents, function(label, value) {\n            channel.bind(label, value);\n          });\n\n          // bind module events\n          $userListButton\n            .on('click.' +  namespace, module.event.toggleUserList)\n          ;\n          $expandButton\n            .on('click.'   +  namespace, module.event.toggleExpand)\n          ;\n          $messageInput\n            .on('keydown.' +  namespace, module.event.input.keydown)\n            .on('keyup.'   +  namespace, module.event.input.keyup)\n          ;\n          $messageButton\n            .on('mouseenter.' +  namespace, module.event.hover)\n            .on('mouseleave.' +  namespace, module.event.hover)\n            .on('click.' +  namespace, module.event.submit)\n          ;\n          // scroll to bottom of chat log\n          $log\n            .animate({\n              scrollTop: $log.prop('scrollHeight')\n            }, 400)\n          ;\n          $module\n            .data('module', module)\n            .addClass(className.loading)\n          ;\n\n        },\n\n        // refresh module\n        refresh: function() {\n          // reset width calculations\n          $userListButton\n            .removeClass(className.active)\n          ;\n          module.width = {\n            log      : $log.width(),\n            userList : $userList.outerWidth()\n          };\n          if( $userListButton.hasClass(className.active) ) {\n            module.user.list.hide();\n          }\n          $module.data('module', module);\n        },\n\n        user: {\n\n          updateCount: function() {\n            if(settings.userCount) {\n              users = $module.data('users');\n              count = 0;\n              $.each(users, function() {\n                count++;\n              });\n              $userCount\n                .html( settings.templates.userCount(count) )\n              ;\n            }\n          },\n\n          // add user to user list\n          joined: function(member) {\n            users = $module.data('users');\n            if(member.id != 'anonymous' && users[ member.id ] === undefined ) {\n              users[ member.id ] = member.info;\n              if(settings.randomColor && member.info.color === undefined) {\n                member.info.color = settings.templates.color(member.id);\n              }\n              html = settings.templates.userList(member.info);\n              if(member.info.isAdmin) {\n                $(html)\n                  .prependTo($userList)\n                ;\n              }\n              else {\n                $(html)\n                  .appendTo($userList)\n                ;\n              }\n              if(settings.partingMessages) {\n                $log\n                  .append( settings.templates.joined(member.info) )\n                ;\n                module.message.scroll.test();\n              }\n              module.user.updateCount();\n            }\n          },\n\n          // remove user from user list\n          left: function(member) {\n            users = $module.data('users');\n            if(member !== undefined && member.id !== 'anonymous') {\n              delete users[ member.id ];\n              $module\n                .data('users', users)\n              ;\n              $userList\n                .find('[data-id='+ member.id + ']')\n                  .remove()\n              ;\n              if(settings.partingMessages) {\n                $log\n                  .append( settings.templates.left(member.info) )\n                ;\n                module.message.scroll.test();\n              }\n              module.user.updateCount();\n            }\n          },\n\n          list: {\n\n            // receives list of members and generates user list\n            create: function(members) {\n              users = {};\n              members.each(function(member) {\n                if(member.id !== 'anonymous' && member.id !== 'undefined') {\n                  if(settings.randomColor && member.info.color === undefined) {\n                    member.info.color = settings.templates.color(member.id);\n                  }\n                  // sort list with admin first\n                  html = (member.info.isAdmin)\n                    ? settings.templates.userList(member.info) + html\n                    : html + settings.templates.userList(member.info)\n                  ;\n                  users[ member.id ] = member.info;\n                }\n              });\n              $module\n                .data('users', users)\n                .data('user', users[members.me.id] )\n                .removeClass(className.loading)\n              ;\n              $userList\n                .html(html)\n              ;\n              module.user.updateCount();\n              $.proxy(settings.onJoin, $userList.children())();\n            },\n\n            // shows user list\n            show: function() {\n              $log\n                .animate({\n                  width: (module.width.log - module.width.userList)\n                }, {\n                  duration : settings.speed,\n                  easing   : settings.easing,\n                  complete : module.message.scroll.move\n                })\n              ;\n            },\n\n            // hides user list\n            hide: function() {\n              $log\n                .stop()\n                .animate({\n                  width: (module.width.log)\n                }, {\n                  duration : settings.speed,\n                  easing   : settings.easing,\n                  complete : module.message.scroll.move\n                })\n              ;\n            }\n\n          }\n\n        },\n\n        message: {\n\n          // handles scrolling of chat log\n          scroll: {\n            test: function() {\n              height = $log.prop('scrollHeight') - $log.height();\n              if( Math.abs($log.scrollTop() - height) < settings.scrollArea) {\n                module.message.scroll.move();\n              }\n            },\n\n            move: function() {\n              height = $log.prop('scrollHeight') - $log.height();\n              $log\n                .scrollTop(height)\n              ;\n            }\n          },\n\n          // sends chat message\n          send: function(message) {\n            if( !module.utils.emptyString(message) ) {\n              $.api({\n                url    : settings.endpoint.message,\n                method : 'POST',\n                data   : {\n                  'message': {\n                    content   : message,\n                    timestamp : new Date().getTime()\n                  }\n                }\n              });\n            }\n          },\n\n          // receives chat response and processes\n          receive: function(response) {\n            message      = response.data;\n            users        = $module.data('users');\n            loggedInUser = $module.data('user');\n            if(users[ message.userID] !== undefined) {\n              // logged in user's messages already pushed instantly\n              if(loggedInUser === undefined || loggedInUser.id != message.userID) {\n                message.user = users[ message.userID ];\n                module.message.display(message);\n              }\n            }\n          },\n\n          // displays message in chat log\n          display: function(message) {\n            $log\n              .append( settings.templates.message(message) )\n            ;\n            module.message.scroll.test();\n            $.proxy(settings.onMessage, $log.children().last() )();\n          }\n\n        },\n\n        expand: function() {\n          $module\n            .addClass(className.expand)\n          ;\n          $.proxy(settings.onExpand, $module )();\n          module.refresh();\n        },\n\n        contract: function() {\n          $module\n            .removeClass(className.expand)\n          ;\n          $.proxy(settings.onContract, $module )();\n          module.refresh();\n        },\n\n        event: {\n\n          input: {\n\n            keydown: function(event) {\n              if(event.which == 13) {\n                $messageButton\n                  .addClass(className.down)\n                ;\n              }\n            },\n\n            keyup: function(event) {\n              if(event.which == 13) {\n                $messageButton\n                  .removeClass(className.down)\n                ;\n                module.event.submit();\n              }\n            }\n\n          },\n\n          // handles message form submit\n          submit: function() {\n            var\n              message      = $messageInput.val(),\n              loggedInUser = $module.data('user')\n            ;\n            if(loggedInUser !== undefined && !module.utils.emptyString(message)) {\n              module.message.send(message);\n              // display immediately\n              module.message.display({\n                user: loggedInUser,\n                text: message\n              });\n              module.message.scroll.move();\n              $messageInput\n                .val('')\n              ;\n\n            }\n          },\n\n          // handles button click on expand button\n          toggleExpand: function() {\n            if( !$module.hasClass(className.expand) ) {\n              $expandButton\n                .addClass(className.active)\n              ;\n              module.expand();\n            }\n            else {\n              $expandButton\n                .removeClass(className.active)\n              ;\n              module.contract();\n            }\n          },\n\n          // handles button click on user list button\n          toggleUserList: function() {\n            if( !$log.is(':animated') ) {\n              if( !$userListButton.hasClass(className.active) ) {\n                $userListButton\n                  .addClass(className.active)\n                ;\n                module.user.list.show();\n              }\n              else {\n                $userListButton\n                  .removeClass('active')\n                ;\n                module.user.list.hide();\n              }\n            }\n\n          }\n        },\n\n        utils: {\n\n          emptyString: function(string) {\n            if(typeof string == 'string') {\n              return (string.search(/\\S/) == -1);\n            }\n            return false;\n          }\n\n        },\n\n      setting: function(name, value) {\n        if(value !== undefined) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else {\n            settings[name] = value;\n          }\n        }\n        else {\n          return settings[name];\n        }\n      },\n      internal: function(name, value) {\n        if( $.isPlainObject(name) ) {\n          $.extend(true, module, name);\n        }\n        else if(value !== undefined) {\n          module[name] = value;\n        }\n        else {\n          return module[name];\n        }\n      },\n      debug: function() {\n        if(settings.debug) {\n          if(settings.performance) {\n            module.performance.log(arguments);\n          }\n          else {\n            module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n            module.debug.apply(console, arguments);\n          }\n        }\n      },\n      verbose: function() {\n        if(settings.verbose && settings.debug) {\n          if(settings.performance) {\n            module.performance.log(arguments);\n          }\n          else {\n            module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n            module.verbose.apply(console, arguments);\n          }\n        }\n      },\n      error: function() {\n        module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n        module.error.apply(console, arguments);\n      },\n      performance: {\n        log: function(message) {\n          var\n            currentTime,\n            executionTime,\n            previousTime\n          ;\n          if(settings.performance) {\n            currentTime   = new Date().getTime();\n            previousTime  = time || currentTime;\n            executionTime = currentTime - previousTime;\n            time          = currentTime;\n            performance.push({\n              'Element'        : element,\n              'Name'           : message[0],\n              'Arguments'      : [].slice.call(message, 1) || '',\n              'Execution Time' : executionTime\n            });\n          }\n          clearTimeout(module.performance.timer);\n          module.performance.timer = setTimeout(module.performance.display, 100);\n        },\n        display: function() {\n          var\n            title = settings.name + ':',\n            totalTime = 0\n          ;\n          time = false;\n          clearTimeout(module.performance.timer);\n          $.each(performance, function(index, data) {\n            totalTime += data['Execution Time'];\n          });\n          title += ' ' + totalTime + 'ms';\n          if(moduleSelector) {\n            title += ' \\'' + moduleSelector + '\\'';\n          }\n          if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n            console.groupCollapsed(title);\n            if(console.table) {\n              console.table(performance);\n            }\n            else {\n              $.each(performance, function(index, data) {\n                console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n              });\n            }\n            console.groupEnd();\n          }\n          performance = [];\n        }\n      },\n      invoke: function(query, passedArguments, context) {\n        var\n          maxDepth,\n          found\n        ;\n        passedArguments = passedArguments || queryArguments;\n        context         = element         || context;\n        if(typeof query == 'string' && instance !== undefined) {\n          query    = query.split(/[\\. ]/);\n          maxDepth = query.length - 1;\n          $.each(query, function(depth, value) {\n            if( $.isPlainObject( instance[value] ) && (depth != maxDepth) ) {\n              instance = instance[value];\n            }\n            else if( instance[value] !== undefined ) {\n              found = instance[value];\n            }\n            else {\n              module.error(error.method, query);\n            }\n          });\n        }\n        if ( $.isFunction( found ) ) {\n          return found.apply(context, passedArguments);\n        }\n        return found || false;\n      }\n    };\n\n    if(methodInvoked) {\n      if(instance === undefined) {\n        module.initialize();\n      }\n      module.invoke(query);\n    }\n    else {\n      if(instance !== undefined) {\n        module.destroy();\n      }\n      module.initialize();\n    }\n  })\n;\n\n  return (returnedValue)\n    ? returnedValue\n    : this\n  ;\n};\n\n  $.fn.chatroom.settings = {\n\n    name            : 'Chat',\n    debug           : false,\n    namespace       : 'chat',\n\n    channel         : 'present-chat',\n\n    onJoin          : function(){},\n    onMessage       : function(){},\n    onExpand        : function(){},\n    onContract      : function(){},\n\n    customEvents    : {},\n\n    partingMessages : false,\n    userCount       : true,\n    randomColor     : true,\n\n    speed           : 300,\n    easing          : 'easeOutQuint',\n\n    // pixels from bottom of chat log that should trigger auto scroll to bottom\n    scrollArea      : 9999,\n\n    endpoint        : {\n      message        : false,\n      authentication : false\n    },\n\n    error: {\n      method   : 'The method you called is not defined',\n      endpoint : 'Please define a message and authentication endpoint.',\n      key      : 'You must specify a pusher key and channel.',\n      pusher   : 'You must include the Pusher library.'\n    },\n\n    className   : {\n      expand  : 'expand',\n      active  : 'active',\n      hover   : 'hover',\n      down    : 'down',\n      loading : 'loading'\n    },\n\n    selector    : {\n      userCount      : '.actions .message',\n      userListButton : '.actions .list.button',\n      expandButton   : '.actions .expand.button',\n      room           : '.room',\n      userList       : '.room .list',\n      log            : '.room .log',\n      message        : '.room .log .message',\n      author         : '.room log .message .author',\n      messageInput   : '.talk input',\n      messageButton  : '.talk .send.button'\n    },\n\n    templates: {\n\n      userCount: function(number) {\n        return number + ' users in chat';\n      },\n\n      color: function(userID) {\n        var\n          colors = [\n            '#000000',\n            '#333333',\n            '#666666',\n            '#999999',\n            '#CC9999',\n            '#CC6666',\n            '#CC3333',\n            '#993333',\n            '#663333',\n            '#CC6633',\n            '#CC9966',\n            '#CC9933',\n            '#999966',\n            '#CCCC66',\n            '#99CC66',\n            '#669933',\n            '#669966',\n            '#33A3CC',\n            '#336633',\n            '#33CCCC',\n            '#339999',\n            '#336666',\n            '#336699',\n            '#6666CC',\n            '#9966CC',\n            '#333399',\n            '#663366',\n            '#996699',\n            '#993366',\n            '#CC6699'\n          ]\n        ;\n        return colors[ Math.floor( Math.random() * colors.length) ];\n      },\n\n      message: function(message) {\n        var\n          html = ''\n        ;\n        if(message.user.isAdmin) {\n          message.user.color = '#55356A';\n          html += '<div class=\"admin message\">';\n          html += '<span class=\"quirky ui flag team\"></span>';\n        }\n        /*\n        else if(message.user.isPro) {\n          html += '<div class=\"indent message\">';\n          html += '<span class=\"quirky ui flag pro\"></span>';\n        }\n        */\n        else {\n          html += '<div class=\"message\">';\n        }\n        html += '<p>';\n        if(message.user.color !== undefined) {\n          html += '<span class=\"author\" style=\"color: ' + message.user.color + ';\">' + message.user.name + '</span>: ';\n        }\n        else {\n          html += '<span class=\"author\">' + message.user.name + '</span>: ';\n        }\n        html += ''\n          +   message.text\n          + ' </p>'\n          + '</div>'\n        ;\n        return html;\n      },\n\n      joined: function(member) {\n        return (typeof member.name !== undefined)\n          ? '<div class=\"status\">' + member.name + ' has joined the chat.</div>'\n          : false\n        ;\n      },\n      left: function(member) {\n        return (typeof member.name !== undefined)\n          ? '<div class=\"status\">' + member.name + ' has left the chat.</div>'\n          : false\n        ;\n      },\n\n      userList: function(member) {\n        var\n          html = ''\n        ;\n        if(member.isAdmin) {\n          member.color = '#55356A';\n        }\n        html +=  ''\n          + '<div class=\"user\" data-id=\"' + member.id + '\">'\n          + ' <div class=\"image\">'\n          + '   <img src=\"' + member.avatarURL + '\">'\n          + ' </div>'\n        ;\n        if(member.color !== undefined) {\n          html += ' <p><a href=\"/users/' + member.id + '\" target=\"_blank\" style=\"color: ' + member.color + ';\">' + member.name + '</a></p>';\n        }\n        else {\n          html += ' <p><a href=\"/users/' + member.id + '\" target=\"_blank\">' + member.name + '</a></p>';\n        }\n        html += '</div>';\n        return html;\n      }\n\n    }\n\n  };\n\n})( jQuery, window , document );\n","/*\n * # Semantic - Checkbox\n * http://github.com/jlukic/semantic-ui/\n *\n *\n * Copyright 2013 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ( $, window, document, undefined ) {\n\n$.fn.checkbox = function(parameters) {\n  var\n    $allModules    = $(this),\n    moduleSelector = $allModules.selector || '',\n\n    time           = new Date().getTime(),\n    performance    = [],\n\n    query          = arguments[0],\n    methodInvoked  = (typeof query == 'string'),\n    queryArguments = [].slice.call(arguments, 1),\n    returnedValue\n  ;\n\n  $allModules\n    .each(function() {\n      var\n        settings        = $.extend(true, {}, $.fn.checkbox.settings, parameters),\n\n        className       = settings.className,\n        namespace       = settings.namespace,\n        error           = settings.error,\n\n        eventNamespace  = '.' + namespace,\n        moduleNamespace = 'module-' + namespace,\n\n        $module         = $(this),\n        $label          = $(this).next(settings.selector.label).first(),\n        $input          = $(this).find(settings.selector.input),\n\n        selector        = $module.selector || '',\n        instance        = $module.data(moduleNamespace),\n\n        element         = this,\n        module\n      ;\n\n      module      = {\n\n        initialize: function() {\n          module.verbose('Initializing checkbox', settings);\n          if(settings.context && selector !== '') {\n            module.verbose('Adding delegated events');\n            $(element, settings.context)\n              .on(selector, 'click' + eventNamespace, module.toggle)\n              .on(selector + ' + ' + settings.selector.label, 'click' + eventNamespace, module.toggle)\n            ;\n          }\n          else {\n            $module\n              .on('click' + eventNamespace, module.toggle)\n              .data(moduleNamespace, module)\n            ;\n            $label\n              .on('click' + eventNamespace, module.toggle)\n            ;\n          }\n          module.instantiate();\n        },\n\n        instantiate: function() {\n          module.verbose('Storing instance of module', module);\n          instance = module;\n          $module\n            .data(moduleNamespace, module)\n          ;\n        },\n\n        destroy: function() {\n          module.verbose('Destroying previous module');\n          $module\n            .off(eventNamespace)\n            .removeData(moduleNamespace)\n          ;\n        },\n\n        is: {\n          radio: function() {\n            return $module.hasClass(className.radio);\n          },\n          enabled: function() {\n            return $input.prop('checked') !== undefined && $input.prop('checked');\n          },\n          disabled: function() {\n            return !module.is.enabled();\n          }\n        },\n\n        can: {\n          disable: function() {\n            return (typeof settings.required === 'boolean')\n              ? settings.required\n              : !module.is.radio()\n            ;\n          }\n        },\n\n        enable: function() {\n          module.debug('Enabling checkbox', $input);\n          $input\n            .prop('checked', true)\n          ;\n          $.proxy(settings.onChange, $input.get())();\n          $.proxy(settings.onEnable, $input.get())();\n        },\n\n        disable: function() {\n          module.debug('Disabling checkbox');\n          $input\n            .prop('checked', false)\n          ;\n          $.proxy(settings.onChange, $input.get())();\n          $.proxy(settings.onDisable, $input.get())();\n        },\n\n        toggle: function(event) {\n          module.verbose('Determining new checkbox state');\n          if( module.is.disabled() ) {\n            module.enable();\n          }\n          else if( module.is.enabled() && module.can.disable() ) {\n            module.disable();\n          }\n        },\n        setting: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            settings[name] = value;\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n          module.error.apply(console, arguments);\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Element'        : element,\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 100);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && instance !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( instance[camelCaseValue] ) && (depth != maxDepth) ) {\n                instance = instance[camelCaseValue];\n              }\n              else if( instance[camelCaseValue] !== undefined ) {\n                found = instance[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( instance[value] ) && (depth != maxDepth) ) {\n                instance = instance[value];\n              }\n              else if( instance[value] !== undefined ) {\n                found = instance[value];\n                return false;\n              }\n              else {\n                module.error(error.method, query);\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          module.destroy();\n        }\n        module.initialize();\n      }\n    })\n  ;\n\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.checkbox.settings = {\n\n  name        : 'Checkbox',\n  namespace   : 'checkbox',\n\n  verbose     : true,\n  debug       : true,\n  performance : true,\n\n  // delegated event context\n  context     : false,\n  required    : 'auto',\n\n  onChange    : function(){},\n  onEnable    : function(){},\n  onDisable   : function(){},\n\n  error     : {\n    method   : 'The method you called is not defined.'\n  },\n\n  selector : {\n    input  : 'input[type=checkbox], input[type=radio]',\n    label  : 'label'\n  },\n\n  className : {\n    radio  : 'radio'\n  }\n\n};\n\n})( jQuery, window , document );\n","/*\n * # Semantic - Dimmer\n * http://github.com/jlukic/semantic-ui/\n *\n *\n * Copyright 2013 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ( $, window, document, undefined ) {\n\n$.fn.dimmer = function(parameters) {\n  var\n    $allModules     = $(this),\n\n    time            = new Date().getTime(),\n    performance     = [],\n\n    query           = arguments[0],\n    methodInvoked   = (typeof query == 'string'),\n    queryArguments  = [].slice.call(arguments, 1),\n\n    returnedValue\n  ;\n\n  $allModules\n    .each(function() {\n      var\n        settings        = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.dimmer.settings, parameters)\n          : $.extend({}, $.fn.dimmer.settings),\n\n        selector        = settings.selector,\n        namespace       = settings.namespace,\n        className       = settings.className,\n        error           = settings.error,\n\n        eventNamespace  = '.' + namespace,\n        moduleNamespace = 'module-' + namespace,\n        moduleSelector  = $allModules.selector || '',\n\n        clickEvent      = ('ontouchstart' in document.documentElement)\n          ? 'touchstart'\n          : 'click',\n\n        $module = $(this),\n        $dimmer,\n        $dimmable,\n\n        element   = this,\n        instance  = $module.data(moduleNamespace),\n        module\n      ;\n\n      module = {\n\n        preinitialize: function() {\n          if( module.is.dimmer() ) {\n            $dimmable = $module.parent();\n            $dimmer   = $module;\n          }\n          else {\n            $dimmable = $module;\n            if( module.has.dimmer() ) {\n              $dimmer = $dimmable.children(selector.dimmer).first();\n            }\n            else {\n              $dimmer = module.create();\n            }\n          }\n        },\n\n        initialize: function() {\n          module.debug('Initializing dimmer', settings);\n          if(settings.on == 'hover') {\n            $dimmable\n              .on('mouseenter' + eventNamespace, module.show)\n              .on('mouseleave' + eventNamespace, module.hide)\n            ;\n          }\n          else if(settings.on == 'click') {\n            $dimmable\n              .on(clickEvent + eventNamespace, module.toggle)\n            ;\n          }\n\n          if( module.is.page() ) {\n            module.debug('Setting as a page dimmer', $dimmable);\n            module.set.pageDimmer();\n          }\n\n          if(settings.closable) {\n            module.verbose('Adding dimmer close event', $dimmer);\n            $dimmer\n              .on(clickEvent + eventNamespace, module.event.click)\n            ;\n          }\n          module.set.dimmable();\n          module.instantiate();\n        },\n\n        instantiate: function() {\n          module.verbose('Storing instance of module', module);\n          instance = module;\n          $module\n            .data(moduleNamespace, instance)\n          ;\n        },\n\n        destroy: function() {\n          module.verbose('Destroying previous module', $dimmer);\n          $module\n            .removeData(moduleNamespace)\n          ;\n          $dimmable\n            .off(eventNamespace)\n          ;\n          $dimmer\n            .off(eventNamespace)\n          ;\n        },\n\n        event: {\n\n          click: function(event) {\n            module.verbose('Determining if event occured on dimmer', event);\n            if( $dimmer.find(event.target).size() === 0 || $(event.target).is(selector.content) ) {\n              module.hide();\n              event.stopImmediatePropagation();\n            }\n          }\n\n        },\n\n        addContent: function(element) {\n          var\n            $content = $(element).detach()\n          ;\n          module.debug('Add content to dimmer', $content);\n          if($content.parent()[0] !== $dimmer[0]) {\n            $dimmer.append($content);\n          }\n        },\n\n        create: function() {\n          return $( settings.template.dimmer() ).appendTo($dimmable);\n        },\n\n        animate: {\n          show: function(callback) {\n            callback = $.isFunction(callback)\n              ? callback\n              : function(){}\n            ;\n            module.set.dimmed();\n            if(settings.useCSS && $.fn.transition !== undefined && $module.transition('is supported')) {\n              $dimmer\n                .transition({\n                  animation : settings.transition + ' in',\n                  queue     : true,\n                  duration  : module.get.duration(),\n                  complete  : function() {\n                    module.set.active();\n                    callback();\n                  }\n                })\n              ;\n            }\n            else {\n              module.verbose('Showing dimmer animation with javascript');\n              $dimmer\n                .stop()\n                .css({\n                  opacity : 0,\n                  width   : '100%',\n                  height  : '100%'\n                })\n                .fadeTo(module.get.duration(), 1, function() {\n                  $dimmer.removeAttr('style');\n                  module.set.active();\n                  callback();\n                })\n              ;\n            }\n          },\n          hide: function(callback) {\n            callback = $.isFunction(callback)\n              ? callback\n              : function(){}\n            ;\n            if(settings.useCSS && $.fn.transition !== undefined && $module.transition('is supported')) {\n              module.verbose('Hiding dimmer with css');\n              $dimmer\n                .transition({\n                  animation : settings.transition + ' out',\n                  duration  : module.get.duration(),\n                  queue     : true,\n                  complete  : function() {\n                    module.remove.dimmed();\n                    module.remove.active();\n                    callback();\n                  }\n                })\n              ;\n            }\n            else {\n              module.verbose('Hiding dimmer with javascript');\n              $dimmer\n                .stop()\n                .fadeOut(module.get.duration(), function() {\n                  $dimmer.removeAttr('style');\n                  module.remove.dimmed();\n                  module.remove.active();\n                  callback();\n                })\n              ;\n            }\n          }\n        },\n\n        get: {\n          dimmer: function() {\n            return $dimmer;\n          },\n          duration: function() {\n            if(typeof settings.duration == 'object') {\n              if( module.is.active() ) {\n                return settings.duration.hide;\n              }\n              else {\n                return settings.duration.show;\n              }\n            }\n            return settings.duration;\n          }\n        },\n\n        has: {\n          dimmer: function() {\n            return ( $module.children(selector.dimmer).size() > 0 );\n          }\n        },\n\n        is: {\n          active: function() {\n            return $dimmer.hasClass(className.active);\n          },\n          animating: function() {\n            return ( $dimmer.is(':animated') || $dimmer.hasClass(className.transition) );\n          },\n          dimmer: function() {\n            return $module.is(selector.dimmer);\n          },\n          dimmable: function() {\n            return $module.is(selector.dimmable);\n          },\n          dimmed: function() {\n            return $dimmable.hasClass(className.dimmed);\n          },\n          disabled: function() {\n            return $dimmable.hasClass(className.disabled);\n          },\n          enabled: function() {\n            return !module.is.disabled();\n          },\n          page: function () {\n            return $dimmable.is('body');\n          },\n          pageDimmer: function() {\n            return $dimmer.hasClass(className.pageDimmer);\n          }\n        },\n\n        can: {\n          show: function() {\n            return !$dimmer.hasClass(className.disabled);\n          }\n        },\n\n        set: {\n          active: function() {\n            module.set.dimmed();\n            $dimmer\n              .removeClass(className.transition)\n              .addClass(className.active)\n            ;\n          },\n          dimmable: function() {\n            $dimmable.addClass(className.dimmable);\n          },\n          dimmed: function() {\n            $dimmable.addClass(className.dimmed);\n          },\n          pageDimmer: function() {\n            $dimmer.addClass(className.pageDimmer);\n          },\n          disabled: function() {\n            $dimmer.addClass(className.disabled);\n          }\n        },\n\n        remove: {\n          active: function() {\n            $dimmer\n              .removeClass(className.transition)\n              .removeClass(className.active)\n            ;\n          },\n          dimmed: function() {\n            $dimmable.removeClass(className.dimmed);\n          },\n          disabled: function() {\n            $dimmer.removeClass(className.disabled);\n          }\n        },\n\n        show: function(callback) {\n          callback = $.isFunction(callback)\n            ? callback\n            : function(){}\n          ;\n          module.debug('Showing dimmer', $dimmer, settings);\n          if( !module.is.active() && module.is.enabled() ) {\n            module.animate.show(callback);\n            $.proxy(settings.onShow, element)();\n            $.proxy(settings.onChange, element)();\n          }\n          else {\n            module.debug('Dimmer is already shown or disabled');\n          }\n        },\n\n        hide: function(callback) {\n          callback = $.isFunction(callback)\n            ? callback\n            : function(){}\n          ;\n          if( module.is.active() || module.is.animating() ) {\n            module.debug('Hiding dimmer', $dimmer);\n            module.animate.hide(callback);\n            $.proxy(settings.onHide, element)();\n            $.proxy(settings.onChange, element)();\n          }\n          else {\n            module.debug('Dimmer is not visible');\n          }\n        },\n\n        toggle: function() {\n          module.verbose('Toggling dimmer visibility', $dimmer);\n          if( !module.is.dimmed() ) {\n            module.show();\n          }\n          else {\n            module.hide();\n          }\n        },\n\n        setting: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            settings[name] = value;\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n          module.error.apply(console, arguments);\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Element'        : element,\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 100);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if($allModules.size() > 1) {\n              title += ' ' + '(' + $allModules.size() + ')';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && instance !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( instance[camelCaseValue] ) && (depth != maxDepth) ) {\n                instance = instance[camelCaseValue];\n              }\n              else if( $.isPlainObject( instance[value] ) && (depth != maxDepth) ) {\n                instance = instance[value];\n              }\n              else if( instance[value] !== undefined ) {\n                found = instance[value];\n                return false;\n              }\n              else if( instance[camelCaseValue] !== undefined ) {\n                found = instance[camelCaseValue];\n                return false;\n              }\n              else {\n                module.error(error.method, query);\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n\n      module.preinitialize();\n\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          module.destroy();\n        }\n        module.initialize();\n      }\n    })\n  ;\n\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.dimmer.settings = {\n\n  name        : 'Dimmer',\n  namespace   : 'dimmer',\n\n  debug       : true,\n  verbose     : true,\n  performance : true,\n\n  transition  : 'fade',\n  useCSS      : true,\n  on          : false,\n  closable    : true,\n\n  duration    : {\n    show : 500,\n    hide : 500\n  },\n\n  onChange    : function(){},\n  onShow      : function(){},\n  onHide      : function(){},\n\n  error   : {\n    method   : 'The method you called is not defined.'\n  },\n\n  selector: {\n    dimmable : '.ui.dimmable',\n    dimmer   : '.ui.dimmer',\n    content  : '.ui.dimmer > .content, .ui.dimmer > .content > .center'\n  },\n\n  template: {\n    dimmer: function() {\n     return $('<div />').attr('class', 'ui dimmer');\n    }\n  },\n\n  className : {\n    active     : 'active',\n    dimmable   : 'ui dimmable',\n    dimmed     : 'dimmed',\n    disabled   : 'disabled',\n    pageDimmer : 'page',\n    hide       : 'hide',\n    show       : 'show',\n    transition : 'transition'\n  }\n\n};\n\n})( jQuery, window , document );","/*\n * # Semantic - Dropdown\n * http://github.com/jlukic/semantic-ui/\n *\n *\n * Copyright 2013 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n;(function ( $, window, document, undefined ) {\n\n$.fn.dropdown = function(parameters) {\n    var\n    $allModules    = $(this),\n    $document      = $(document),\n\n    moduleSelector = $allModules.selector || '',\n\n    hasTouch       = ('ontouchstart' in document.documentElement),\n    time           = new Date().getTime(),\n    performance    = [],\n\n    query          = arguments[0],\n    methodInvoked  = (typeof query == 'string'),\n    queryArguments = [].slice.call(arguments, 1),\n    returnedValue\n  ;\n\n  $allModules\n    .each(function() {\n      var\n        settings          = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.dropdown.settings, parameters)\n          : $.extend({}, $.fn.dropdown.settings),\n\n        className       = settings.className,\n        metadata        = settings.metadata,\n        namespace       = settings.namespace,\n        selector        = settings.selector,\n        error           = settings.error,\n\n        eventNamespace  = '.' + namespace,\n        moduleNamespace = 'module-' + namespace,\n\n        $module         = $(this),\n        $item           = $module.find(selector.item),\n        $text           = $module.find(selector.text),\n        $input          = $module.find(selector.input),\n\n        $menu           = $module.children(selector.menu),\n\n\n        element         = this,\n        instance        = $module.data(moduleNamespace),\n        module\n      ;\n\n      module = {\n\n        initialize: function() {\n          module.debug('Initializing dropdown', settings);\n\n          module.set.selected();\n\n          if(hasTouch) {\n            module.bind.touchEvents();\n          }\n          // no use detecting mouse events because touch devices emulate them\n          module.bind.mouseEvents();\n          module.instantiate();\n        },\n\n        instantiate: function() {\n          module.verbose('Storing instance of dropdown', module);\n          instance = module;\n          $module\n            .data(moduleNamespace, module)\n          ;\n        },\n\n        destroy: function() {\n          module.verbose('Destroying previous dropdown for', $module);\n          $item\n            .off(eventNamespace)\n          ;\n          $module\n            .off(eventNamespace)\n            .removeData(moduleNamespace)\n          ;\n        },\n\n        bind: {\n          touchEvents: function() {\n            module.debug('Touch device detected binding touch events');\n            $module\n              .on('touchstart' + eventNamespace, module.event.test.toggle)\n            ;\n            $item\n              .on('touchstart' + eventNamespace, module.event.item.mouseenter)\n              .on('touchstart' + eventNamespace, module.event.item.click)\n            ;\n          },\n          mouseEvents: function() {\n            module.verbose('Mouse detected binding mouse events');\n            if(settings.on == 'click') {\n              $module\n                .on('click' + eventNamespace, module.event.test.toggle)\n              ;\n            }\n            else if(settings.on == 'hover') {\n              $module\n                .on('mouseenter' + eventNamespace, module.delay.show)\n                .on('mouseleave' + eventNamespace, module.delay.hide)\n              ;\n            }\n            else {\n              $module\n                .on(settings.on + eventNamespace, module.toggle)\n              ;\n            }\n            $item\n              .on('mouseenter' + eventNamespace, module.event.item.mouseenter)\n              .on('mouseleave' + eventNamespace, module.event.item.mouseleave)\n              .on('click'      + eventNamespace, module.event.item.click)\n            ;\n          },\n          intent: function() {\n            module.verbose('Binding hide intent event to document');\n            if(hasTouch) {\n              $document\n                .on('touchstart' + eventNamespace, module.event.test.touch)\n                .on('touchmove'  + eventNamespace, module.event.test.touch)\n              ;\n            }\n            $document\n              .on('click' + eventNamespace, module.event.test.hide)\n            ;\n          }\n        },\n\n        unbind: {\n          intent: function() {\n            module.verbose('Removing hide intent event from document');\n            if(hasTouch) {\n              $document\n                .off('touchstart' + eventNamespace)\n              ;\n            }\n            $document\n              .off('click' + eventNamespace)\n            ;\n          }\n        },\n\n        event: {\n          test: {\n            toggle: function(event) {\n              if( module.determine.intent(event, module.toggle) ) {\n                event.preventDefault();\n              }\n            },\n            touch: function(event) {\n              module.determine.intent(event, function() {\n                if(event.type == 'touchstart') {\n                  module.timer = setTimeout(module.hide, settings.delay.touch);\n                }\n                else if(event.type == 'touchmove') {\n                  clearTimeout(module.timer);\n                }\n              });\n              event.stopPropagation();\n            },\n            hide: function(event) {\n              module.determine.intent(event, module.hide);\n            }\n          },\n\n          item: {\n\n            mouseenter: function(event) {\n              var\n                $currentMenu = $(this).find(selector.menu),\n                $otherMenus  = $(this).siblings(selector.item).children(selector.menu)\n              ;\n              if( $currentMenu.size() > 0 ) {\n                clearTimeout(module.itemTimer);\n                module.itemTimer = setTimeout(function() {\n                  module.animate.hide(false, $otherMenus);\n                  module.verbose('Showing sub-menu', $currentMenu);\n                  module.animate.show(false,  $currentMenu);\n                }, settings.delay.show * 2);\n                event.preventDefault();\n              }\n            },\n\n            mouseleave: function(event) {\n              var\n                $currentMenu = $(this).find(selector.menu)\n              ;\n              if($currentMenu.size() > 0) {\n                clearTimeout(module.itemTimer);\n                module.itemTimer = setTimeout(function() {\n                  module.verbose('Hiding sub-menu', $currentMenu);\n                  module.animate.hide(false,  $currentMenu);\n                }, settings.delay.hide);\n              }\n            },\n\n            click: function (event) {\n              var\n                $choice = $(this),\n                text    = ( $choice.data(metadata.text) !== undefined )\n                  ? $choice.data(metadata.text)\n                  : $choice.text(),\n                value   = ( $choice.data(metadata.value) !== undefined)\n                  ? $choice.data(metadata.value)\n                  : text.toLowerCase()\n              ;\n              if( $choice.find(selector.menu).size() === 0 ) {\n                module.determine.selectAction(text, value);\n                $.proxy(settings.onChange, element)(value, text);\n              }\n            }\n\n          },\n\n          resetStyle: function() {\n            $(this).removeAttr('style');\n          }\n\n        },\n\n        determine: {\n          selectAction: function(text, value) {\n            module.verbose('Determining action', settings.action);\n            if( $.isFunction( module.action[settings.action] ) ) {\n              module.verbose('Triggering preset action', settings.action, text, value);\n              module.action[ settings.action ](text, value);\n            }\n            else if( $.isFunction(settings.action) ) {\n              module.verbose('Triggering user action', settings.action, text, value);\n              settings.action(text, value);\n            }\n            else {\n              module.error(error.action, settings.action);\n            }\n          },\n          intent: function(event, callback) {\n            module.debug('Determining whether event occurred in dropdown', event.target);\n            callback = callback || function(){};\n            if( $(event.target).closest($menu).size() === 0 ) {\n              module.verbose('Triggering event', callback);\n              callback();\n              return true;\n            }\n            else {\n              module.verbose('Event occurred in dropdown, canceling callback');\n              return false;\n            }\n          }\n        },\n\n        action: {\n\n          nothing: function() {},\n\n          hide: function() {\n            module.hide();\n          },\n\n          activate: function(text, value) {\n            value = (value !== undefined)\n              ? value\n              : text\n            ;\n            module.set.selected(value);\n            module.set.value(value);\n            module.hide();\n          },\n\n          /* Deprecated */\n          auto: function(text, value) {\n            value = (value !== undefined)\n              ? value\n              : text\n            ;\n            module.set.selected(value);\n            module.set.value(value);\n            module.hide();\n          },\n\n          /* Deprecated */\n          changeText: function(text, value) {\n            value = (value !== undefined)\n              ? value\n              : text\n            ;\n            module.set.selected(value);\n            module.hide();\n          },\n\n          /* Deprecated */\n          updateForm: function(text, value) {\n            value = (value !== undefined)\n              ? value\n              : text\n            ;\n            module.set.selected(value);\n            module.set.value(value);\n            module.hide();\n          }\n\n        },\n\n        get: {\n          text: function() {\n            return $text.text();\n          },\n          value: function() {\n            return ($input.size() > 0)\n              ? $input.val()\n              : $module.data(metadata.value)\n            ;\n          },\n          item: function(value) {\n            var\n              $selectedItem\n            ;\n            value = (value !== undefined)\n              ? value\n              : ( module.get.value() !== undefined)\n                ? module.get.value()\n                : module.get.text()\n            ;\n            if(value !== undefined) {\n              $item\n                .each(function() {\n                  var\n                    $choice       = $(this),\n                    optionText    = ( $choice.data(metadata.text) !== undefined )\n                      ? $choice.data(metadata.text)\n                      : $choice.text(),\n                    optionValue   = ( $choice.data(metadata.value) !== undefined )\n                      ? $choice.data(metadata.value)\n                      : optionText.toLowerCase()\n                  ;\n                  if( optionValue == value || optionText == value ) {\n                    $selectedItem = $(this);\n                    return false;\n                  }\n                })\n              ;\n            }\n            else {\n              value = module.get.text();\n            }\n            return $selectedItem || false;\n          }\n        },\n\n        set: {\n          text: function(text) {\n            module.debug('Changing text', text, $text);\n            $text.removeClass(className.placeholder);\n            $text.text(text);\n          },\n          value: function(value) {\n            module.debug('Adding selected value to hidden input', value, $input);\n            if($input.size() > 0) {\n              $input.val(value);\n            }\n            else {\n              $module.data(metadata.value, value);\n            }\n          },\n          active: function() {\n            $module.addClass(className.active);\n          },\n          visible: function() {\n            $module.addClass(className.visible);\n          },\n          selected: function(value) {\n            var\n              $selectedItem = module.get.item(value),\n              selectedText\n            ;\n            if($selectedItem) {\n              module.debug('Setting selected menu item to', $selectedItem);\n              selectedText = ($selectedItem.data(metadata.text) !== undefined)\n                ? $selectedItem.data(metadata.text)\n                : $selectedItem.text()\n              ;\n              $item\n                .removeClass(className.active)\n              ;\n              $selectedItem\n                .addClass(className.active)\n              ;\n              module.set.text(selectedText);\n            }\n          }\n        },\n\n        remove: {\n          active: function() {\n            $module.removeClass(className.active);\n          },\n          visible: function() {\n            $module.removeClass(className.visible);\n          }\n        },\n\n        is: {\n          selection: function() {\n            return $module.hasClass(className.selection);\n          },\n          animated: function($subMenu) {\n            return ($subMenu)\n              ? $subMenu.is(':animated') || $subMenu.transition('is animating')\n              : $menu.is(':animated') || $menu.transition('is animating')\n            ;\n          },\n          visible: function($subMenu) {\n            return ($subMenu)\n              ? $subMenu.is(':visible')\n              : $menu.is(':visible')\n            ;\n          },\n          hidden: function($subMenu) {\n            return ($subMenu)\n              ? $subMenu.is(':not(:visible)')\n              : $menu.is(':not(:visible)')\n            ;\n          }\n        },\n\n        can: {\n          click: function() {\n            return (hasTouch || settings.on == 'click');\n          },\n          show: function() {\n            return !$module.hasClass(className.disabled);\n          }\n        },\n\n        animate: {\n          show: function(callback, $subMenu) {\n            var\n              $currentMenu = $subMenu || $menu\n            ;\n            callback = callback || function(){};\n            if( module.is.hidden($currentMenu) ) {\n              module.verbose('Doing menu show animation', $currentMenu);\n              if(settings.transition == 'none') {\n                callback();\n              }\n              else if($.fn.transition !== undefined && $module.transition('is supported')) {\n                $currentMenu.transition({\n                  animation : settings.transition + ' in',\n                  duration  : settings.duration,\n                  complete  : callback,\n                  queue     : false\n                });\n              }\n              else if(settings.transition == 'slide down') {\n                $currentMenu\n                  .hide()\n                  .clearQueue()\n                  .children()\n                    .clearQueue()\n                    .css('opacity', 0)\n                    .delay(50)\n                    .animate({\n                      opacity : 1\n                    }, settings.duration, 'easeOutQuad', module.event.resetStyle)\n                    .end()\n                  .slideDown(100, 'easeOutQuad', function() {\n                    $.proxy(module.event.resetStyle, this)();\n                    callback();\n                  })\n                ;\n              }\n              else if(settings.transition == 'fade') {\n                $currentMenu\n                  .hide()\n                  .clearQueue()\n                  .fadeIn(settings.duration, function() {\n                    $.proxy(module.event.resetStyle, this)();\n                    callback();\n                  })\n                ;\n              }\n              else {\n                module.error(error.transition, settings.transition);\n              }\n            }\n          },\n          hide: function(callback, $subMenu) {\n            var\n              $currentMenu = $subMenu || $menu\n            ;\n            callback = callback || function(){};\n            if(module.is.visible($currentMenu) ) {\n              module.verbose('Doing menu hide animation', $currentMenu);\n              if($.fn.transition !== undefined && $module.transition('is supported')) {\n                $currentMenu.transition({\n                  animation : settings.transition + ' out',\n                  duration  : settings.duration,\n                  complete  : callback,\n                  queue     : false\n                });\n              }\n              else if(settings.transition == 'none') {\n                callback();\n              }\n              else if(settings.transition == 'slide down') {\n                $currentMenu\n                  .show()\n                  .clearQueue()\n                  .children()\n                    .clearQueue()\n                    .css('opacity', 1)\n                    .animate({\n                      opacity : 0\n                    }, 100, 'easeOutQuad', module.event.resetStyle)\n                    .end()\n                  .delay(50)\n                  .slideUp(100, 'easeOutQuad', function() {\n                    $.proxy(module.event.resetStyle, this)();\n                    callback();\n                  })\n                ;\n              }\n              else if(settings.transition == 'fade') {\n                $currentMenu\n                  .show()\n                  .clearQueue()\n                  .fadeOut(150, function() {\n                    $.proxy(module.event.resetStyle, this)();\n                    callback();\n                  })\n                ;\n              }\n              else {\n                module.error(error.transition);\n              }\n            }\n          }\n        },\n\n        show: function() {\n          module.debug('Checking if dropdown can show');\n          if( module.is.hidden() ) {\n            module.hideOthers();\n            module.set.active();\n            module.animate.show(function() {\n              if( module.can.click() ) {\n                module.bind.intent();\n              }\n              module.set.visible();\n            });\n            $.proxy(settings.onShow, element)();\n          }\n        },\n\n        hide: function() {\n          if( !module.is.animated() && module.is.visible() ) {\n            module.debug('Hiding dropdown');\n            if( module.can.click() ) {\n              module.unbind.intent();\n            }\n            module.remove.active();\n            module.animate.hide(module.remove.visible);\n            $.proxy(settings.onHide, element)();\n          }\n        },\n\n        delay: {\n          show: function() {\n            module.verbose('Delaying show event to ensure user intent');\n            clearTimeout(module.timer);\n            module.timer = setTimeout(module.show, settings.delay.show);\n          },\n          hide: function() {\n            module.verbose('Delaying hide event to ensure user intent');\n            clearTimeout(module.timer);\n            module.timer = setTimeout(module.hide, settings.delay.hide);\n          }\n        },\n\n        hideOthers: function() {\n          module.verbose('Finding other dropdowns to hide');\n          $allModules\n            .not($module)\n              .has(selector.menu + ':visible')\n              .dropdown('hide')\n          ;\n        },\n\n        toggle: function() {\n          module.verbose('Toggling menu visibility');\n          if( module.is.hidden() ) {\n            module.show();\n          }\n          else {\n            module.hide();\n          }\n        },\n\n        setting: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            settings[name] = value;\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n          module.error.apply(console, arguments);\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Element'        : element,\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 100);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && instance !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( instance[camelCaseValue] ) && (depth != maxDepth) ) {\n                instance = instance[camelCaseValue];\n              }\n              else if( instance[camelCaseValue] !== undefined ) {\n                found = instance[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( instance[value] ) && (depth != maxDepth) ) {\n                instance = instance[value];\n              }\n              else if( instance[value] !== undefined ) {\n                found = instance[value];\n                return false;\n              }\n              else {\n                module.error(error.method, query);\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          module.destroy();\n        }\n        module.initialize();\n      }\n    })\n  ;\n\n  return (returnedValue)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.dropdown.settings = {\n\n  name        : 'Dropdown',\n  namespace   : 'dropdown',\n\n  verbose     : true,\n  debug       : true,\n  performance : true,\n\n  on          : 'click',\n  action      : 'activate',\n\n  delay: {\n    show  : 200,\n    hide  : 300,\n    touch : 50\n  },\n\n  transition : 'slide down',\n  duration   : 250,\n\n  onChange : function(value, text){},\n  onShow   : function(){},\n  onHide   : function(){},\n\n  error   : {\n    action    : 'You called a dropdown action that was not defined',\n    method    : 'The method you called is not defined.',\n    transition : 'The requested transition was not found'\n  },\n\n  metadata: {\n    text    : 'text',\n    value   : 'value'\n  },\n\n  selector : {\n    menu  : '.menu',\n    item  : '.menu > .item',\n    text  : '> .text',\n    input : '> input[type=\"hidden\"]'\n  },\n\n  className : {\n    active      : 'active',\n    placeholder : 'default',\n    disabled    : 'disabled',\n    visible     : 'visible',\n    selection   : 'selection'\n  }\n\n};\n\n// Adds easing\n$.extend( $.easing, {\n  easeOutQuad: function (x, t, b, c, d) {\n    return -c *(t/=d)*(t-2) + b;\n  },\n});\n\n\n})( jQuery, window , document );","/*\n * # Semantic - Modal\n * http://github.com/jlukic/semantic-ui/\n *\n *\n * Copyright 2013 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ( $, window, document, undefined ) {\n\n$.fn.modal = function(parameters) {\n  var\n    $allModules = $(this),\n    $window     = $(window),\n    $document   = $(document),\n\n    time            = new Date().getTime(),\n    performance     = [],\n\n    query           = arguments[0],\n    methodInvoked   = (typeof query == 'string'),\n    queryArguments  = [].slice.call(arguments, 1),\n\n    returnedValue\n  ;\n\n\n  $allModules\n    .each(function() {\n      var\n        settings    = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.modal.settings, parameters)\n          : $.extend({}, $.fn.modal.settings),\n\n        selector        = settings.selector,\n        className       = settings.className,\n        namespace       = settings.namespace,\n        error           = settings.error,\n\n        eventNamespace  = '.' + namespace,\n        moduleNamespace = 'module-' + namespace,\n        moduleSelector  = $allModules.selector || '',\n\n        $module      = $(this),\n        $context     = $(settings.context),\n        $close       = $module.find(selector.close),\n\n        $allModals,\n        $otherModals,\n        $focusedElement,\n        $dimmable,\n        $dimmer,\n\n        element      = this,\n        instance     = $module.data(moduleNamespace),\n        module\n      ;\n\n      module  = {\n\n        initialize: function() {\n          module.verbose('Initializing dimmer', $context);\n\n          if(typeof $.fn.dimmer === undefined) {\n            module.error(error.dimmer);\n            return;\n          }\n          $dimmable = $context\n            .dimmer({\n              closable : false,\n              useCSS   : module.is.modernBrowser(),\n              show     : settings.duration * 0.9,\n              hide     : settings.duration * 1.1\n            })\n            .dimmer('add content', $module)\n          ;\n          $dimmer = $dimmable\n            .dimmer('get dimmer')\n          ;\n\n          $otherModals = $module.siblings(selector.modal);\n          $allModals   = $otherModals.add($module);\n\n          module.verbose('Attaching close events', $close);\n          $close\n            .on('click' + eventNamespace, module.event.close)\n          ;\n          $window\n            .on('resize' + eventNamespace, function() {\n              module.event.debounce(module.refresh, 50);\n            })\n          ;\n          module.instantiate();\n        },\n\n        instantiate: function() {\n          module.verbose('Storing instance of modal');\n          instance = module;\n          $module\n            .data(moduleNamespace, instance)\n          ;\n        },\n\n        destroy: function() {\n          module.verbose('Destroying previous modal');\n          $module\n            .removeData(moduleNamespace)\n            .off(eventNamespace)\n          ;\n          $close\n            .off(eventNamespace)\n          ;\n          $context\n            .dimmer('destroy')\n          ;\n        },\n\n        refresh: function() {\n          module.remove.scrolling();\n          module.cacheSizes();\n          module.set.type();\n          module.set.position();\n        },\n\n        attachEvents: function(selector, event) {\n          var\n            $toggle = $(selector)\n          ;\n          event = $.isFunction(module[event])\n            ? module[event]\n            : module.toggle\n          ;\n          if($toggle.size() > 0) {\n            module.debug('Attaching modal events to element', selector, event);\n            $toggle\n              .off(eventNamespace)\n              .on('click' + eventNamespace, event)\n            ;\n          }\n          else {\n            module.error(error.notFound);\n          }\n        },\n\n        event: {\n          close: function() {\n            module.verbose('Closing element pressed');\n            if( $(this).is(selector.approve) ) {\n              if($.proxy(settings.onApprove, element)() !== false) {\n                module.hide();\n              }\n              else {\n                module.verbose('Approve callback returned false cancelling hide');\n              }\n            }\n            else if( $(this).is(selector.deny) ) {\n              if($.proxy(settings.onDeny, element)() !== false) {\n                module.hide();\n              }\n              else {\n                module.verbose('Deny callback returned false cancelling hide');\n              }\n            }\n            else {\n              module.hide();\n            }\n          },\n          click: function(event) {\n            if( $(event.target).closest(selector.modal).size() === 0 ) {\n              module.debug('Dimmer clicked, hiding all modals');\n              module.hideAll();\n              event.stopImmediatePropagation();\n            }\n          },\n          debounce: function(method, delay) {\n            clearTimeout(module.timer);\n            module.timer = setTimeout(method, delay);\n          },\n          keyboard: function(event) {\n            var\n              keyCode   = event.which,\n              escapeKey = 27\n            ;\n            if(keyCode == escapeKey) {\n              if(settings.closable) {\n                module.debug('Escape key pressed hiding modal');\n                module.hide();\n              }\n              else {\n                module.debug('Escape key pressed, but closable is set to false');\n              }\n              event.preventDefault();\n            }\n          },\n          resize: function() {\n            if( $dimmable.dimmer('is active') ) {\n              module.refresh();\n            }\n          }\n        },\n\n        toggle: function() {\n          if( module.is.active() ) {\n            module.hide();\n          }\n          else {\n            module.show();\n          }\n        },\n\n        show: function(callback) {\n          callback = $.isFunction(callback)\n            ? callback\n            : function(){}\n          ;\n          module.showDimmer();\n          module.showModal(callback);\n        },\n\n        showModal: function(callback) {\n          callback = $.isFunction(callback)\n            ? callback\n            : function(){}\n          ;\n          if( !module.is.active() ) {\n            module.cacheSizes();\n            module.set.position();\n            module.set.type();\n\n            if( $otherModals.filter(':visible').size() > 0 ) {\n              module.debug('Other modals visible, queueing show animation');\n              module.hideOthers(module.showModal);\n            }\n            else {\n              if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {\n                module.debug('Showing modal with css animations');\n                $module\n                  .transition(settings.transition + ' in', settings.duration, function() {\n                    module.set.active();\n                    callback();\n                  })\n                ;\n              }\n              else {\n                module.debug('Showing modal with javascript');\n                $module\n                  .fadeIn(settings.duration, settings.easing, function() {\n                    module.set.active();\n                    callback();\n                  })\n                ;\n              }\n              $.proxy(settings.onShow, element)();\n            }\n          }\n          else {\n            module.debug('Modal is already visible');\n          }\n        },\n\n        showDimmer: function() {\n          if( !$dimmable.dimmer('is active') ) {\n            module.debug('Showing dimmer');\n            $dimmable.dimmer('show');\n          }\n          else {\n            module.debug('Dimmer already visible');\n          }\n        },\n\n        hide: function(callback) {\n          callback = $.isFunction(callback)\n            ? callback\n            : function(){}\n          ;\n          module.hideDimmer();\n          module.hideModal(callback);\n        },\n\n        hideDimmer: function() {\n          if( $dimmable.dimmer('is active') ) {\n            module.debug('Hiding dimmer');\n            if(settings.closable) {\n              $dimmer\n                .off('click' + eventNamespace)\n              ;\n            }\n            $dimmable.dimmer('hide');\n          }\n          else {\n            module.debug('Dimmer is not visible cannot hide');\n          }\n        },\n\n        hideModal: function(callback) {\n          callback = $.isFunction(callback)\n            ? callback\n            : function(){}\n          ;\n          if( module.is.active() ) {\n            module.debug('Hiding modal');\n            module.remove.keyboardShortcuts();\n            if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {\n              $module\n                .transition(settings.transition + ' out', settings.duration, function() {\n                  module.remove.active();\n                  module.restore.focus();\n                  callback();\n                })\n              ;\n            }\n            else {\n              $module\n                .fadeOut(settings.duration, settings.easing, function() {\n                  module.remove.active();\n                  module.restore.focus();\n                  callback();\n                })\n              ;\n            }\n            $.proxy(settings.onHide, element)();\n          }\n        },\n\n        hideAll: function(callback) {\n          callback = $.isFunction(callback)\n            ? callback\n            : function(){}\n          ;\n          if( $allModals.is(':visible') ) {\n            module.debug('Hiding all visible modals');\n            module.hideDimmer();\n            $allModals\n              .filter(':visible')\n                .modal('hide modal', callback)\n            ;\n          }\n        },\n\n        hideOthers: function(callback) {\n          callback = $.isFunction(callback)\n            ? callback\n            : function(){}\n          ;\n          if( $otherModals.is(':visible') ) {\n            module.debug('Hiding other modals');\n            $otherModals\n              .filter(':visible')\n                .modal('hide modal', callback)\n            ;\n          }\n        },\n\n        add: {\n          keyboardShortcuts: function() {\n            module.verbose('Adding keyboard shortcuts');\n            $document\n              .on('keyup' + eventNamespace, module.event.keyboard)\n            ;\n          }\n        },\n\n        save: {\n          focus: function() {\n            $focusedElement = $(document.activeElement).blur();\n          }\n        },\n\n        restore: {\n          focus: function() {\n            if($focusedElement && $focusedElement.size() > 0) {\n              $focusedElement.focus();\n            }\n          }\n        },\n\n        remove: {\n          active: function() {\n            $module.removeClass(className.active);\n          },\n          keyboardShortcuts: function() {\n            module.verbose('Removing keyboard shortcuts');\n            $document\n              .off('keyup' + eventNamespace)\n            ;\n          },\n          scrolling: function() {\n            $dimmable.removeClass(className.scrolling);\n            $module.removeClass(className.scrolling);\n          }\n        },\n\n        cacheSizes: function() {\n          module.cache = {\n            height        : $module.outerHeight() + settings.offset,\n            contextHeight : (settings.context == 'body')\n              ? $(window).height()\n              : $dimmable.height()\n          };\n          module.debug('Caching modal and container sizes', module.cache);\n        },\n\n        can: {\n          fit: function() {\n            return (module.cache.height < module.cache.contextHeight);\n          }\n        },\n\n        is: {\n          active: function() {\n            return $module.hasClass(className.active);\n          },\n          modernBrowser: function() {\n            // lol\n            return (navigator.appName !== 'Microsoft Internet Explorer');\n          }\n        },\n\n        set: {\n          active: function() {\n            module.add.keyboardShortcuts();\n            module.save.focus();\n            $module\n              .addClass(className.active)\n            ;\n            if(settings.closable) {\n              $dimmer\n                .off('click' + eventNamespace)\n                .on('click' + eventNamespace, module.event.click)\n              ;\n            }\n          },\n          scrolling: function() {\n            $dimmable.addClass(className.scrolling);\n            $module.addClass(className.scrolling);\n          },\n          type: function() {\n            if(module.can.fit()) {\n              module.verbose('Modal fits on screen');\n              module.remove.scrolling();\n            }\n            else {\n              module.verbose('Modal cannot fit on screen setting to scrolling');\n              module.set.scrolling();\n            }\n          },\n          position: function() {\n            module.verbose('Centering modal on page', module.cache, module.cache.height / 2);\n            if(module.can.fit()) {\n              $module\n                .css({\n                  top: '',\n                  marginTop: -(module.cache.height / 2)\n                })\n              ;\n            }\n            else {\n              $module\n                .css({\n                  marginTop : '1em',\n                  top       : $document.scrollTop()\n                })\n              ;\n            }\n          }\n        },\n\n        setting: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            settings[name] = value;\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n          module.error.apply(console, arguments);\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Element'        : element,\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 100);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && instance !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( instance[camelCaseValue] ) && (depth != maxDepth) ) {\n                instance = instance[camelCaseValue];\n              }\n              else if( instance[camelCaseValue] !== undefined ) {\n                found = instance[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( instance[value] ) && (depth != maxDepth) ) {\n                instance = instance[value];\n              }\n              else if( instance[value] !== undefined ) {\n                found = instance[value];\n                return false;\n              }\n              else {\n                module.error(error.method, query);\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          module.destroy();\n        }\n        module.initialize();\n      }\n    })\n  ;\n\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.modal.settings = {\n\n  name        : 'Modal',\n  namespace   : 'modal',\n\n  debug       : true,\n  verbose     : true,\n  performance : true,\n\n  closable    : true,\n  context     : 'body',\n  duration    : 500,\n  easing      : 'easeOutExpo',\n  offset      : 0,\n  transition  : 'scale',\n\n  onShow      : function(){},\n  onHide      : function(){},\n  onApprove   : function(){ return true; },\n  onDeny      : function(){ return true; },\n\n  selector    : {\n    close    : '.close, .actions .button',\n    approve  : '.actions .positive, .actions .approve',\n    deny     : '.actions .negative, .actions .cancel',\n    modal    : '.ui.modal'\n  },\n  error : {\n    dimmer    : 'UI Dimmer, a required component is not included in this page',\n    method    : 'The method you called is not defined.'\n  },\n  className : {\n    active    : 'active',\n    scrolling : 'scrolling'\n  }\n};\n\n\n})( jQuery, window , document );","/*\n * # Semantic - Nag\n * http://github.com/jlukic/semantic-ui/\n *\n *\n * Copyright 2013 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n$.fn.nag = function(parameters) {\n  var\n    $allModules     = $(this),\n    moduleSelector  = $allModules.selector || '',\n\n    time            = new Date().getTime(),\n    performance     = [],\n\n    query           = arguments[0],\n    methodInvoked   = (typeof query == 'string'),\n    queryArguments  = [].slice.call(arguments, 1),\n    returnedValue\n  ;\n  $(this)\n    .each(function() {\n      var\n        settings        = $.extend(true, {}, $.fn.nag.settings, parameters),\n\n        className       = settings.className,\n        selector        = settings.selector,\n        error           = settings.error,\n        namespace       = settings.namespace,\n\n        eventNamespace  = '.' + namespace,\n        moduleNamespace = namespace + '-module',\n\n        $module         = $(this),\n\n        $close          = $module.find(selector.close),\n        $context        = $(settings.context),\n\n\n        element         = this,\n        instance        = $module.data(moduleNamespace),\n\n        moduleOffset,\n        moduleHeight,\n\n        contextWidth,\n        contextHeight,\n        contextOffset,\n\n        yOffset,\n        yPosition,\n\n        timer,\n        module,\n\n        requestAnimationFrame = window.requestAnimationFrame\n          || window.mozRequestAnimationFrame\n          || window.webkitRequestAnimationFrame\n          || window.msRequestAnimationFrame\n          || function(callback) { setTimeout(callback, 0); }\n      ;\n      module = {\n\n        initialize: function() {\n          module.verbose('Initializing element');\n          // calculate module offset once\n          moduleOffset  = $module.offset();\n          moduleHeight  = $module.outerHeight();\n          contextWidth  = $context.outerWidth();\n          contextHeight = $context.outerHeight();\n          contextOffset = $context.offset();\n\n          $module\n            .data(moduleNamespace, module)\n          ;\n          $close\n            .on('click' + eventNamespace, module.dismiss)\n          ;\n          // lets avoid javascript if we dont need to reposition\n          if(settings.context == window && settings.position == 'fixed') {\n            $module\n              .addClass(className.fixed)\n            ;\n          }\n          if(settings.sticky) {\n            module.verbose('Adding scroll events');\n            // retrigger on scroll for absolute\n            if(settings.position == 'absolute') {\n              $context\n                .on('scroll' + eventNamespace, module.event.scroll)\n                .on('resize' + eventNamespace, module.event.scroll)\n              ;\n            }\n            // fixed is always relative to window\n            else {\n              $(window)\n                .on('scroll' + eventNamespace, module.event.scroll)\n                .on('resize' + eventNamespace, module.event.scroll)\n              ;\n            }\n            // fire once to position on init\n            $.proxy(module.event.scroll, this)();\n          }\n\n          if(settings.displayTime > 0) {\n            setTimeout(module.hide, settings.displayTime);\n          }\n          if(module.should.show()) {\n            if( !$module.is(':visible') ) {\n              module.show();\n            }\n          }\n          else {\n            module.hide();\n          }\n        },\n\n        destroy: function() {\n          module.verbose('Destroying instance');\n          $module\n            .removeData(moduleNamespace)\n            .off(eventNamespace)\n          ;\n          if(settings.sticky) {\n            $context\n              .off(eventNamespace)\n            ;\n          }\n        },\n\n        refresh: function() {\n          module.debug('Refreshing cached calculations');\n          moduleOffset  = $module.offset();\n          moduleHeight  = $module.outerHeight();\n          contextWidth  = $context.outerWidth();\n          contextHeight = $context.outerHeight();\n          contextOffset = $context.offset();\n        },\n\n        show: function() {\n          module.debug('Showing nag', settings.animation.show);\n          if(settings.animation.show == 'fade') {\n            $module\n              .fadeIn(settings.duration, settings.easing)\n            ;\n          }\n          else {\n            $module\n              .slideDown(settings.duration, settings.easing)\n            ;\n          }\n        },\n\n        hide: function() {\n          module.debug('Showing nag', settings.animation.hide);\n          if(settings.animation.show == 'fade') {\n            $module\n              .fadeIn(settings.duration, settings.easing)\n            ;\n          }\n          else {\n            $module\n              .slideUp(settings.duration, settings.easing)\n            ;\n          }\n        },\n\n        onHide: function() {\n          module.debug('Removing nag', settings.animation.hide);\n          $module.remove();\n          if (settings.onHide) {\n            settings.onHide();\n          }\n        },\n\n        stick: function() {\n          module.refresh();\n\n          if(settings.position == 'fixed') {\n            var\n              windowScroll = $(window).prop('pageYOffset') || $(window).scrollTop(),\n              fixedOffset = ( $module.hasClass(className.bottom) )\n                ? contextOffset.top + (contextHeight - moduleHeight) - windowScroll\n                : contextOffset.top - windowScroll\n            ;\n            $module\n              .css({\n                position : 'fixed',\n                top      : fixedOffset,\n                left     : contextOffset.left,\n                width    : contextWidth - settings.scrollBarWidth\n              })\n            ;\n          }\n          else {\n            $module\n              .css({\n                top : yPosition\n              })\n            ;\n          }\n        },\n        unStick: function() {\n          $module\n            .css({\n              top : ''\n            })\n          ;\n        },\n        dismiss: function(event) {\n          if(settings.storageMethod) {\n            module.storage.set(settings.storedKey, settings.storedValue);\n          }\n          module.hide();\n          event.stopImmediatePropagation();\n          event.preventDefault();\n        },\n\n        should: {\n          show: function() {\n            if(settings.persist) {\n              module.debug('Persistent nag is set, can show nag');\n              return true;\n            }\n            if(module.storage.get(settings.storedKey) != settings.storedValue) {\n              module.debug('Stored value is not set, can show nag', module.storage.get(settings.storedKey));\n              return true;\n            }\n            module.debug('Stored value is set, cannot show nag', module.storage.get(settings.storedKey));\n            return false;\n          },\n          stick: function() {\n            yOffset   = $context.prop('pageYOffset') || $context.scrollTop();\n            yPosition = ( $module.hasClass(className.bottom) )\n              ? (contextHeight - $module.outerHeight() ) + yOffset\n              : yOffset\n            ;\n            // absolute position calculated when y offset met\n            if(yPosition > moduleOffset.top) {\n              return true;\n            }\n            else if(settings.position == 'fixed') {\n              return true;\n            }\n            return false;\n          }\n        },\n\n        storage: {\n\n          set: function(key, value) {\n            module.debug('Setting stored value', key, value, settings.storageMethod);\n            if(settings.storageMethod == 'local' && window.store !== undefined) {\n              window.store.set(key, value);\n            }\n            // store by cookie\n            else if($.cookie !== undefined) {\n              $.cookie(key, value);\n            }\n            else {\n              module.error(error.noStorage);\n            }\n          },\n          get: function(key) {\n            module.debug('Getting stored value', key, settings.storageMethod);\n            if(settings.storageMethod == 'local' && window.store !== undefined) {\n              return window.store.get(key);\n            }\n            // get by cookie\n            else if($.cookie !== undefined) {\n              return $.cookie(key);\n            }\n            else {\n              module.error(error.noStorage);\n            }\n          }\n\n        },\n\n        event: {\n          scroll: function() {\n            if(timer !== undefined) {\n              clearTimeout(timer);\n            }\n            timer = setTimeout(function() {\n              if(module.should.stick() ) {\n                requestAnimationFrame(module.stick);\n              }\n              else {\n                module.unStick();\n              }\n            }, settings.lag);\n          }\n        },\n        setting: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            settings[name] = value;\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          module.debug('Changing internal', name, value);\n          if(value !== undefined) {\n            if( $.isPlainObject(name) ) {\n              $.extend(true, module, name);\n            }\n            else {\n              module[name] = value;\n            }\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n          module.error.apply(console, arguments);\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Element'        : element,\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 100);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if($allModules.size() > 1) {\n              title += ' ' + '(' + $allModules.size() + ')';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && instance !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( instance[camelCaseValue] ) && (depth != maxDepth) ) {\n                instance = instance[camelCaseValue];\n              }\n              else if( instance[camelCaseValue] !== undefined ) {\n                found = instance[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( instance[value] ) && (depth != maxDepth) ) {\n                instance = instance[value];\n              }\n              else if( instance[value] !== undefined ) {\n                found = instance[value];\n                return false;\n              }\n              else {\n                module.error(error.method, query);\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          module.destroy();\n        }\n        module.initialize();\n      }\n\n    })\n  ;\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.nag.settings = {\n\n  name        : 'Nag',\n\n  verbose     : true,\n  debug       : true,\n  performance : true,\n\n  namespace   : 'Nag',\n\n  // allows cookie to be overriden\n  persist     : false,\n\n  // set to zero to manually dismiss, otherwise hides on its own\n  displayTime : 0,\n\n  animation   : {\n    show: 'slide',\n    hide: 'slide'\n  },\n\n  // method of stickyness\n  position       : 'fixed',\n  scrollBarWidth : 18,\n\n  // type of storage to use\n  storageMethod  : 'cookie',\n\n  // value to store in dismissed localstorage/cookie\n  storedKey      : 'nag',\n  storedValue    : 'dismiss',\n\n  // need to calculate stickyness on scroll\n  sticky         : false,\n\n  // how often to check scroll event\n  lag            : 0,\n\n  // context for scroll event\n  context        : window,\n\n  error: {\n    noStorage  : 'Neither $.cookie or store is defined. A storage solution is required for storing state',\n    method    : 'The method you called is not defined.'\n  },\n\n  className     : {\n    bottom      : 'bottom',\n    fixed       : 'fixed'\n  },\n\n  selector      : {\n    close: '.icon.close'\n  },\n\n  speed         : 500,\n  easing        : 'easeOutQuad',\n\n  onHide: function() {}\n\n};\n\n})( jQuery, window , document );\n","/*\n * # Semantic - Popup\n * http://github.com/jlukic/semantic-ui/\n *\n *\n * Copyright 2013 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n$.fn.popup = function(parameters) {\n  var\n    $allModules     = $(this),\n    $document       = $(document),\n\n    moduleSelector  = $allModules.selector || '',\n\n    time            = new Date().getTime(),\n    performance     = [],\n\n    query           = arguments[0],\n    methodInvoked   = (typeof query == 'string'),\n    queryArguments  = [].slice.call(arguments, 1),\n\n    returnedValue\n  ;\n  $allModules\n    .each(function() {\n      var\n        settings        = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.popup.settings, parameters)\n          : $.extend({}, $.fn.popup.settings),\n\n        selector        = settings.selector,\n        className       = settings.className,\n        error           = settings.error,\n        metadata        = settings.metadata,\n        namespace       = settings.namespace,\n\n        eventNamespace  = '.' + settings.namespace,\n        moduleNamespace = 'module-' + namespace,\n\n        $module         = $(this),\n        $context        = $(settings.context),\n        $target         = (settings.target)\n          ? $(settings.target)\n          : $module,\n\n        $window         = $(window),\n\n        $offsetParent   = (settings.inline)\n          ? $target.offsetParent()\n          : $window,\n        $popup          = (settings.inline)\n          ? $target.next(settings.selector.popup)\n          : $window.children(settings.selector.popup).last(),\n\n        searchDepth     = 0,\n\n        element         = this,\n        instance        = $module.data(moduleNamespace),\n        module\n      ;\n\n      module = {\n\n        // binds events\n        initialize: function() {\n          module.debug('Initializing module', $module);\n          if(settings.on == 'click') {\n            $module\n              .on('click', module.toggle)\n            ;\n          }\n          else {\n            $module\n              .on(module.get.startEvent() + eventNamespace, module.event.start)\n              .on(module.get.endEvent() + eventNamespace, module.event.end)\n            ;\n          }\n          if(settings.target) {\n            module.debug('Target set to element', $target);\n          }\n          $window\n            .on('resize' + eventNamespace, module.event.resize)\n          ;\n          module.instantiate();\n        },\n\n        instantiate: function() {\n          module.verbose('Storing instance of module', module);\n          instance = module;\n          $module\n            .data(moduleNamespace, instance)\n          ;\n        },\n\n        refresh: function() {\n          if(settings.inline) {\n            $popup = $target.next(selector.popup);\n            $offsetParent = $target.offsetParent();\n          }\n          else {\n            $popup = $window.children(selector.popup).last();\n          }\n        },\n\n        destroy: function() {\n          module.debug('Destroying previous module');\n          $window\n            .off(eventNamespace)\n          ;\n          $popup\n            .remove()\n          ;\n          $module\n            .off(eventNamespace)\n            .removeData(moduleNamespace)\n          ;\n        },\n\n        event: {\n          start:  function(event) {\n            module.timer = setTimeout(function() {\n              if( module.is.hidden() ) {\n                module.show();\n              }\n            }, settings.delay);\n          },\n          end:  function() {\n            clearTimeout(module.timer);\n            if( module.is.visible() ) {\n              module.hide();\n            }\n          },\n          resize: function() {\n            if( module.is.visible() ) {\n              module.set.position();\n            }\n          }\n        },\n\n        // generates popup html from metadata\n        create: function() {\n          module.debug('Creating pop-up html');\n          var\n            html      = $module.data(metadata.html)      || settings.html,\n            variation = $module.data(metadata.variation) || settings.variation,\n            title     = $module.data(metadata.title)     || settings.title,\n            content   = $module.data(metadata.content)   || $module.attr('title') || settings.content\n          ;\n          if(html || content || title) {\n            if(!html) {\n              html = settings.template({\n                title   : title,\n                content : content\n              });\n            }\n            $popup = $('<div/>')\n              .addClass(className.popup)\n              .addClass(variation)\n              .html(html)\n            ;\n            if(settings.inline) {\n              module.verbose('Inserting popup element inline', $popup);\n              $popup\n                .insertAfter($module)\n              ;\n            }\n            else {\n              module.verbose('Appending popup element to body', $popup);\n              $popup\n                .appendTo( $context )\n              ;\n            }\n            $.proxy(settings.onCreate, $popup)();\n          }\n          else {\n            module.error(error.content);\n          }\n        },\n\n        // determines popup state\n        toggle: function() {\n          module.debug('Toggling pop-up');\n          if( module.is.hidden() ) {\n            module.hideAll();\n            module.show();\n          }\n          else {\n            module.hide();\n          }\n        },\n\n        show: function(callback) {\n          callback = callback || function(){};\n          module.debug('Showing pop-up', settings.transition);\n          if(!settings.preserve) {\n            module.refresh();\n          }\n          if( !module.exists() ) {\n            module.create();\n          }\n          module.set.position();\n          module.animate.show(callback);\n        },\n\n\n        hide: function(callback) {\n          callback = callback || function(){};\n          $module\n            .removeClass(className.visible)\n          ;\n          module.unbind.close();\n          if( module.is.visible() ) {\n            module.animate.hide(callback);\n          }\n        },\n\n        hideAll: function() {\n          $(selector.popup)\n            .filter(':visible')\n              .popup('hide')\n          ;\n        },\n\n        hideGracefully: function(event) {\n          // don't close on clicks inside popup\n          if( $(event.target).closest(selector.popup).size() === 0) {\n            module.hide();\n          }\n        },\n\n        exists: function() {\n          if(settings.inline) {\n            return ( $popup.size() !== 0 );\n          }\n          else {\n            return ( $popup.parent($context).size() );\n          }\n        },\n\n        remove: function() {\n          module.debug('Removing popup');\n          $popup\n            .remove()\n          ;\n        },\n\n        animate: {\n          show: function(callback) {\n            callback = callback || function(){};\n            $module\n              .addClass(className.visible)\n            ;\n            if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {\n              $popup\n                .transition(settings.transition + ' in', settings.duration, function() {\n                  module.bind.close();\n                  $.proxy(callback, element)();\n                })\n              ;\n            }\n            else {\n              $popup\n                .stop()\n                .fadeIn(settings.duration, settings.easing, function() {\n                  module.bind.close();\n                  $.proxy(callback, element)();\n                })\n              ;\n            }\n            $.proxy(settings.onShow, element)();\n          },\n          hide: function(callback) {\n            callback = callback || function(){};\n            module.debug('Hiding pop-up');\n            if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {\n              $popup\n                .transition(settings.transition + ' out', settings.duration, function() {\n                  module.reset();\n                  callback();\n                })\n              ;\n            }\n            else {\n              $popup\n                .stop()\n                .fadeOut(settings.duration, settings.easing, function() {\n                  module.reset();\n                  callback();\n                })\n              ;\n            }\n            $.proxy(settings.onHide, element)();\n          }\n        },\n\n        get: {\n          startEvent: function() {\n            if(settings.on == 'hover') {\n              return 'mouseenter';\n            }\n            else if(settings.on == 'focus') {\n              return 'focus';\n            }\n          },\n          endEvent: function() {\n            if(settings.on == 'hover') {\n              return 'mouseleave';\n            }\n            else if(settings.on == 'focus') {\n              return 'blur';\n            }\n          },\n          offstagePosition: function() {\n            var\n              boundary  = {\n                top    : $(window).scrollTop(),\n                bottom : $(window).scrollTop() + $(window).height(),\n                left   : 0,\n                right  : $(window).width()\n              },\n              popup     = {\n                width    : $popup.width(),\n                height   : $popup.outerHeight(),\n                position : $popup.offset()\n              },\n              offstage  = {},\n              offstagePositions = []\n            ;\n            if(popup.position) {\n              offstage = {\n                top    : (popup.position.top < boundary.top),\n                bottom : (popup.position.top + popup.height > boundary.bottom),\n                right  : (popup.position.left + popup.width > boundary.right),\n                left   : (popup.position.left < boundary.left)\n              };\n            }\n            module.verbose('Checking if outside viewable area', popup.position);\n            // return only boundaries that have been surpassed\n            $.each(offstage, function(direction, isOffstage) {\n              if(isOffstage) {\n                offstagePositions.push(direction);\n              }\n            });\n            return (offstagePositions.length > 0)\n              ? offstagePositions.join(' ')\n              : false\n            ;\n          },\n          nextPosition: function(position) {\n            switch(position) {\n              case 'top left':\n                position = 'bottom left';\n              break;\n              case 'bottom left':\n                position = 'top right';\n              break;\n              case 'top right':\n                position = 'bottom right';\n              break;\n              case 'bottom right':\n                position = 'top center';\n              break;\n              case 'top center':\n                position = 'bottom center';\n              break;\n              case 'bottom center':\n                position = 'right center';\n              break;\n              case 'right center':\n                position = 'left center';\n              break;\n              case 'left center':\n                position = 'top center';\n              break;\n            }\n            return position;\n          }\n        },\n\n        set: {\n          position: function(position, arrowOffset) {\n            var\n              windowWidth  = $(window).width(),\n              windowHeight = $(window).height(),\n\n              width        = $target.outerWidth(),\n              height       = $target.outerHeight(),\n\n              popupWidth   = $popup.width(),\n              popupHeight  = $popup.outerHeight(),\n\n              parentWidth  = $offsetParent.outerWidth(),\n              parentHeight = $offsetParent.outerHeight(),\n\n              distanceAway = settings.distanceAway,\n\n              offset       = (settings.inline)\n                ? $target.position()\n                : $target.offset(),\n\n              positioning,\n              offstagePosition\n            ;\n            position    = position    || $module.data(metadata.position)    || settings.position;\n            arrowOffset = arrowOffset || $module.data(metadata.offset)      || settings.offset;\n            // adjust for margin when inline\n            if(settings.inline) {\n              if(position == 'left center' || position == 'right center') {\n                arrowOffset  += parseInt( window.getComputedStyle(element).getPropertyValue('margin-top'), 10);\n                distanceAway += -parseInt( window.getComputedStyle(element).getPropertyValue('margin-left'), 10);\n              }\n              else {\n                arrowOffset  += parseInt( window.getComputedStyle(element).getPropertyValue('margin-left'), 10);\n                distanceAway += parseInt( window.getComputedStyle(element).getPropertyValue('margin-top'), 10);\n              }\n            }\n            module.debug('Calculating offset for position', position);\n            switch(position) {\n              case 'top left':\n                positioning = {\n                  bottom :  parentHeight - offset.top + distanceAway,\n                  right  :  parentWidth - offset.left - arrowOffset,\n                  top    : 'auto',\n                  left   : 'auto'\n                };\n              break;\n              case 'top center':\n                positioning = {\n                  bottom :  parentHeight - offset.top + distanceAway,\n                  left   : offset.left + (width / 2) - (popupWidth / 2) + arrowOffset,\n                  top    : 'auto',\n                  right  : 'auto'\n                };\n              break;\n              case 'top right':\n                positioning = {\n                  top    : 'auto',\n                  bottom :  parentHeight - offset.top + distanceAway,\n                  left   : offset.left + width + arrowOffset,\n                  right  : 'auto'\n                };\n              break;\n              case 'left center':\n                positioning = {\n                  top    :  offset.top + (height / 2) - (popupHeight / 2) + arrowOffset,\n                  right  : parentWidth - offset.left + distanceAway,\n                  left   : 'auto',\n                  bottom : 'auto'\n                };\n              break;\n              case 'right center':\n                positioning = {\n                  top    :  offset.top + (height / 2) - (popupHeight / 2) + arrowOffset,\n                  left   : offset.left + width + distanceAway,\n                  bottom : 'auto',\n                  right  : 'auto'\n                };\n              break;\n              case 'bottom left':\n                positioning = {\n                  top    :  offset.top + height + distanceAway,\n                  right  : parentWidth - offset.left - arrowOffset,\n                  left   : 'auto',\n                  bottom : 'auto'\n                };\n              break;\n              case 'bottom center':\n                positioning = {\n                  top    :  offset.top + height + distanceAway,\n                  left   : offset.left + (width / 2) - (popupWidth / 2) + arrowOffset,\n                  bottom : 'auto',\n                  right  : 'auto'\n                };\n              break;\n              case 'bottom right':\n                positioning = {\n                  top    :  offset.top + height + distanceAway,\n                  left   : offset.left + width + arrowOffset,\n                  bottom : 'auto',\n                  right  : 'auto'\n                };\n              break;\n            }\n            // tentatively place on stage\n            $popup\n              .css(positioning)\n              .removeClass(className.position)\n              .addClass(position)\n              .addClass(className.loading)\n            ;\n            // check if is offstage\n            offstagePosition = module.get.offstagePosition();\n\n            // recursively find new positioning\n            if(offstagePosition) {\n              module.debug('Element is outside boundaries', offstagePosition);\n              if(searchDepth < settings.maxSearchDepth) {\n                position = module.get.nextPosition(position);\n                searchDepth++;\n                module.debug('Trying new position', position);\n                return module.set.position(position);\n              }\n              else {\n                module.error(error.recursion);\n                searchDepth = 0;\n                module.reset();\n                return false;\n              }\n            }\n            else {\n              module.debug('Position is on stage', position);\n              searchDepth = 0;\n              return true;\n            }\n\n            $module.removeClass(className.loading);\n          }\n\n        },\n\n        bind: {\n          close:function() {\n            if(settings.on == 'click' && settings.closable) {\n              module.verbose('Binding popup close event to document');\n              $document\n                .on('click' + eventNamespace, module.hideGracefully)\n              ;\n            }\n          }\n        },\n\n        unbind: {\n          close: function() {\n            if(settings.on == 'click' && settings.closable) {\n              module.verbose('Removing close event from document');\n              $document\n                .off('click' + eventNamespace)\n              ;\n            }\n          }\n        },\n\n        is: {\n          visible: function() {\n            return $popup.is(':visible');\n          },\n          hidden: function() {\n            return !module.is.visible();\n          }\n        },\n\n        reset: function() {\n          $popup\n            .attr('style', '')\n            .removeAttr('style')\n          ;\n          if(!settings.preserve) {\n            module.remove();\n          }\n        },\n\n        setting: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            settings[name] = value;\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n          module.error.apply(console, arguments);\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Element'        : element,\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 100);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && instance !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( instance[value] ) && (depth != maxDepth) ) {\n                instance = instance[value];\n              }\n              else if( $.isPlainObject( instance[camelCaseValue] ) && (depth != maxDepth) ) {\n                instance = instance[camelCaseValue];\n              }\n              else if( instance[value] !== undefined ) {\n                found = instance[value];\n                return false;\n              }\n              else if( instance[camelCaseValue] !== undefined ) {\n                found = instance[camelCaseValue];\n                return false;\n              }\n              else {\n                module.error(error.method, query);\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          module.destroy();\n        }\n        module.initialize();\n      }\n    })\n  ;\n\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.popup.settings = {\n\n  name           : 'Popup',\n  debug          : true,\n  verbose        : true,\n  performance    : true,\n  namespace      : 'popup',\n\n  onCreate       : function(){},\n  onShow         : function(){},\n  onHide         : function(){},\n\n  variation      : '',\n  content        : false,\n  html           : false,\n  title          : false,\n\n  on             : 'hover',\n  target         : false,\n  closable       : true,\n\n  context        : 'body',\n  position       : 'top center',\n  delay          : 150,\n  inline         : false,\n  preserve       : false,\n\n  duration       : 250,\n  easing         : 'easeOutQuint',\n  transition     : 'scale',\n\n  distanceAway   : 0,\n  offset         : 0,\n  maxSearchDepth : 10,\n\n  error: {\n    content   : 'Your popup has no content specified',\n    method    : 'The method you called is not defined.',\n    recursion : 'Popup attempted to reposition element to fit, but could not find an adequate position.'\n  },\n\n  metadata: {\n    content   : 'content',\n    html      : 'html',\n    offset    : 'offset',\n    position  : 'position',\n    title     : 'title',\n    variation : 'variation'\n  },\n\n  className   : {\n    loading     : 'loading',\n    popup       : 'ui popup',\n    position    : 'top left center bottom right',\n    visible     : 'visible'\n  },\n\n  selector    : {\n    popup    : '.ui.popup'\n  },\n\n  template: function(text) {\n    var html = '';\n    if(typeof text !== undefined) {\n      if(typeof text.title !== undefined && text.title) {\n        html += '<div class=\"header\">' + text.title + '</div class=\"header\">';\n      }\n      if(typeof text.content !== undefined && text.content) {\n        html += '<div class=\"content\">' + text.content + '</div>';\n      }\n    }\n    return html;\n  }\n\n};\n\n})( jQuery, window , document );\n","/*\n * # Semantic - Rating\n * http://github.com/jlukic/semantic-ui/\n *\n *\n * Copyright 2013 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n$.fn.rating = function(parameters) {\n  var\n    $allModules     = $(this),\n    moduleSelector  = $allModules.selector || '',\n\n    time            = new Date().getTime(),\n    performance     = [],\n\n    query           = arguments[0],\n    methodInvoked   = (typeof query == 'string'),\n    queryArguments  = [].slice.call(arguments, 1),\n    returnedValue\n  ;\n  $allModules\n    .each(function() {\n      var\n        settings        = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.rating.settings, parameters)\n          : $.extend({}, $.fn.rating.settings),\n\n        namespace       = settings.namespace,\n        className       = settings.className,\n        metadata        = settings.metadata,\n        selector        = settings.selector,\n        error           = settings.error,\n\n        eventNamespace  = '.' + namespace,\n        moduleNamespace = 'module-' + namespace,\n\n        element         = this,\n        instance        = $(this).data(moduleNamespace),\n\n        $module         = $(this),\n        $icon           = $module.find(selector.icon),\n\n        module\n      ;\n\n      module = {\n\n        initialize: function() {\n          module.verbose('Initializing rating module', settings);\n\n          if(settings.interactive) {\n            module.enable();\n          }\n          else {\n            module.disable();\n          }\n\n          if(settings.initialRating) {\n            module.debug('Setting initial rating');\n            module.setRating(settings.initialRating);\n          }\n          if( $module.data(metadata.rating) ) {\n            module.debug('Rating found in metadata');\n            module.setRating( $module.data(metadata.rating) );\n          }\n          module.instantiate();\n        },\n\n        instantiate: function() {\n          module.verbose('Instantiating module', settings);\n          instance = module;\n          $module\n            .data(moduleNamespace, module)\n          ;\n        },\n\n        destroy: function() {\n          module.verbose('Destroying previous instance', instance);\n          $module\n            .removeData(moduleNamespace)\n          ;\n          $icon\n            .off(eventNamespace)\n          ;\n        },\n\n        event: {\n          mouseenter: function() {\n            var\n              $activeIcon = $(this)\n            ;\n            $activeIcon\n              .nextAll()\n                .removeClass(className.hover)\n            ;\n            $module\n              .addClass(className.hover)\n            ;\n            $activeIcon\n              .addClass(className.hover)\n                .prevAll()\n                .addClass(className.hover)\n            ;\n          },\n          mouseleave: function() {\n            $module\n              .removeClass(className.hover)\n            ;\n            $icon\n              .removeClass(className.hover)\n            ;\n          },\n          click: function() {\n            var\n              $activeIcon   = $(this),\n              currentRating = module.getRating(),\n              rating        = $icon.index($activeIcon) + 1\n            ;\n            if(settings.clearable && currentRating == rating) {\n              module.clearRating();\n            }\n            else {\n              module.setRating( rating );\n            }\n          }\n        },\n\n        clearRating: function() {\n          module.debug('Clearing current rating');\n          module.setRating(0);\n        },\n\n        getRating: function() {\n          var\n            currentRating = $icon.filter('.' + className.active).size()\n          ;\n          module.verbose('Current rating retrieved', currentRating);\n          return currentRating;\n        },\n\n        enable: function() {\n          module.debug('Setting rating to interactive mode');\n          $icon\n            .on('mouseenter' + eventNamespace, module.event.mouseenter)\n            .on('mouseleave' + eventNamespace, module.event.mouseleave)\n            .on('click' + eventNamespace, module.event.click)\n          ;\n          $module\n            .removeClass(className.disabled)\n          ;\n        },\n\n        disable: function() {\n          module.debug('Setting rating to read-only mode');\n          $icon\n            .off(eventNamespace)\n          ;\n          $module\n            .addClass(className.disabled)\n          ;\n        },\n\n        setRating: function(rating) {\n          var\n            ratingIndex = (rating - 1 >= 0)\n              ? (rating - 1)\n              : 0,\n            $activeIcon = $icon.eq(ratingIndex)\n          ;\n          $module\n            .removeClass(className.hover)\n          ;\n          $icon\n            .removeClass(className.hover)\n            .removeClass(className.active)\n          ;\n          if(rating > 0) {\n            module.verbose('Setting current rating to', rating);\n            $activeIcon\n              .addClass(className.active)\n                .prevAll()\n                .addClass(className.active)\n            ;\n          }\n          $.proxy(settings.onRate, element)(rating);\n        },\n\n        setting: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            settings[name] = value;\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n          module.error.apply(console, arguments);\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Element'        : element,\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 100);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if($allModules.size() > 1) {\n              title += ' ' + '(' + $allModules.size() + ')';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && instance !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( instance[camelCaseValue] ) && (depth != maxDepth) ) {\n                instance = instance[camelCaseValue];\n              }\n              else if( instance[camelCaseValue] !== undefined ) {\n                found = instance[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( instance[value] ) && (depth != maxDepth) ) {\n                instance = instance[value];\n              }\n              else if( instance[value] !== undefined ) {\n                found = instance[value];\n                return false;\n              }\n              else {\n                module.error(error.method, query);\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          module.destroy();\n        }\n        module.initialize();\n      }\n    })\n  ;\n\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.rating.settings = {\n\n  name          : 'Rating',\n  namespace     : 'rating',\n\n  verbose       : true,\n  debug         : true,\n  performance   : true,\n\n  initialRating : 0,\n  interactive   : true,\n  clearable     : false,\n\n  onRate        : function(rating){},\n\n  error       : {\n    method : 'The method you called is not defined'\n  },\n\n  metadata: {\n    rating: 'rating'\n  },\n\n  className : {\n    active   : 'active',\n    disabled : 'disabled',\n    hover    : 'hover',\n    loading  : 'loading'\n  },\n\n  selector  : {\n    icon : '.icon'\n  }\n\n};\n\n})( jQuery, window , document );\n","/*\n * # Semantic - Search\n * http://github.com/jlukic/semantic-ui/\n *\n *\n * Copyright 2013 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n$.fn.search = function(source, parameters) {\n  var\n    $allModules     = $(this),\n    moduleSelector  = $allModules.selector || '',\n\n    time            = new Date().getTime(),\n    performance     = [],\n\n    query           = arguments[0],\n    methodInvoked   = (typeof query == 'string'),\n    queryArguments  = [].slice.call(arguments, 1),\n    returnedValue\n  ;\n  $(this)\n    .each(function() {\n      var\n        settings        = $.extend(true, {}, $.fn.search.settings, parameters),\n\n        className       = settings.className,\n        selector        = settings.selector,\n        error           = settings.error,\n        namespace       = settings.namespace,\n\n        eventNamespace  = '.' + namespace,\n        moduleNamespace = namespace + '-module',\n\n        $module         = $(this),\n        $prompt         = $module.find(selector.prompt),\n        $searchButton   = $module.find(selector.searchButton),\n        $results        = $module.find(selector.results),\n        $result         = $module.find(selector.result),\n        $category       = $module.find(selector.category),\n\n        element         = this,\n        instance        = $module.data(moduleNamespace),\n\n        module\n      ;\n      module = {\n\n        initialize: function() {\n          module.verbose('Initializing module');\n          var\n            prompt = $prompt[0],\n            inputEvent   = (prompt.oninput !== undefined)\n              ? 'input'\n              : (prompt.onpropertychange !== undefined)\n                ? 'propertychange'\n                : 'keyup'\n          ;\n          // attach events\n          $prompt\n            .on('focus' + eventNamespace, module.event.focus)\n            .on('blur' + eventNamespace, module.event.blur)\n            .on('keydown' + eventNamespace, module.handleKeyboard)\n          ;\n          if(settings.automatic) {\n            $prompt\n              .on(inputEvent + eventNamespace, module.search.throttle)\n            ;\n          }\n          $searchButton\n            .on('click' + eventNamespace, module.search.query)\n          ;\n          $results\n            .on('click' + eventNamespace, selector.result, module.results.select)\n          ;\n          module.instantiate();\n        },\n        instantiate: function() {\n          module.verbose('Storing instance of module', module);\n          instance = module;\n          $module\n            .data(moduleNamespace, module)\n          ;\n        },\n        destroy: function() {\n          module.verbose('Destroying instance');\n          $module\n            .removeData(moduleNamespace)\n          ;\n        },\n        event: {\n          focus: function() {\n            $module\n              .addClass(className.focus)\n            ;\n            module.results.show();\n          },\n          blur: function() {\n            module.search.cancel();\n            $module\n              .removeClass(className.focus)\n            ;\n            module.results.hide();\n          }\n        },\n        handleKeyboard: function(event) {\n          var\n            // force latest jq dom\n            $result       = $module.find(selector.result),\n            $category     = $module.find(selector.category),\n            keyCode       = event.which,\n            keys          = {\n              backspace : 8,\n              enter     : 13,\n              escape    : 27,\n              upArrow   : 38,\n              downArrow : 40\n            },\n            activeClass  = className.active,\n            currentIndex = $result.index( $result.filter('.' + activeClass) ),\n            resultSize   = $result.size(),\n            newIndex\n          ;\n          // search shortcuts\n          if(keyCode == keys.escape) {\n            module.verbose('Escape key pressed, blurring search field');\n            $prompt\n              .trigger('blur')\n            ;\n          }\n          // result shortcuts\n          if($results.filter(':visible').size() > 0) {\n            if(keyCode == keys.enter) {\n              module.verbose('Enter key pressed, selecting active result');\n              if( $result.filter('.' + activeClass).exists() ) {\n                $.proxy(module.results.select, $result.filter('.' + activeClass) )();\n                event.preventDefault();\n                return false;\n              }\n            }\n            else if(keyCode == keys.upArrow) {\n              module.verbose('Up key pressed, changing active result');\n              newIndex = (currentIndex - 1 < 0)\n                ? currentIndex\n                : currentIndex - 1\n              ;\n              $category\n                .removeClass(activeClass)\n              ;\n              $result\n                .removeClass(activeClass)\n                .eq(newIndex)\n                  .addClass(activeClass)\n                  .closest($category)\n                    .addClass(activeClass)\n              ;\n              event.preventDefault();\n            }\n            else if(keyCode == keys.downArrow) {\n              module.verbose('Down key pressed, changing active result');\n              newIndex = (currentIndex + 1 >= resultSize)\n                ? currentIndex\n                : currentIndex + 1\n              ;\n              $category\n                .removeClass(activeClass)\n              ;\n              $result\n                .removeClass(activeClass)\n                .eq(newIndex)\n                  .addClass(activeClass)\n                  .closest($category)\n                    .addClass(activeClass)\n              ;\n              event.preventDefault();\n            }\n          }\n          else {\n            // query shortcuts\n            if(keyCode == keys.enter) {\n              module.verbose('Enter key pressed, executing query');\n              module.search.query();\n              $searchButton\n                .addClass(className.down)\n              ;\n              $prompt\n                .one('keyup', function(){\n                  $searchButton\n                    .removeClass(className.down)\n                  ;\n                })\n              ;\n            }\n          }\n        },\n        search: {\n          cancel: function() {\n            var\n              xhr = $module.data('xhr') || false\n            ;\n            if( xhr && xhr.state() != 'resolved') {\n              module.debug('Cancelling last search');\n              xhr.abort();\n            }\n          },\n          throttle: function() {\n            var\n              searchTerm    = $prompt.val(),\n              numCharacters = searchTerm.length\n            ;\n            clearTimeout(module.timer);\n            if(numCharacters >= settings.minCharacters)  {\n              module.timer = setTimeout(module.search.query, settings.searchThrottle);\n            }\n            else {\n              module.results.hide();\n            }\n          },\n          query: function() {\n            var\n              searchTerm = $prompt.val(),\n              cachedHTML = module.search.cache.read(searchTerm)\n            ;\n            if(cachedHTML) {\n              module.debug(\"Reading result for '\" + searchTerm + \"' from cache\");\n              module.results.add(cachedHTML);\n            }\n            else {\n              module.debug(\"Querying for '\" + searchTerm + \"'\");\n              if(typeof source == 'object') {\n                module.search.local(searchTerm);\n              }\n              else {\n                module.search.remote(searchTerm);\n              }\n              $.proxy(settings.onSearchQuery, $module)(searchTerm);\n            }\n          },\n          local: function(searchTerm) {\n            var\n              results   = [],\n              fullTextResults = [],\n              searchFields    = $.isArray(settings.searchFields)\n                ? settings.searchFields\n                : [settings.searchFields],\n\n              searchRegExp   = new RegExp('(?:\\s|^)' + searchTerm, 'i'),\n              fullTextRegExp = new RegExp(searchTerm, 'i'),\n              searchHTML\n            ;\n            $module\n              .addClass(className.loading)\n            ;\n            // iterate through search fields in array order\n            $.each(searchFields, function(index, field) {\n              $.each(source, function(label, thing) {\n                if(typeof thing[field] == 'string' && ($.inArray(thing, results) == -1) && ($.inArray(thing, fullTextResults) == -1) ) {\n                  if( searchRegExp.test( thing[field] ) ) {\n                    results.push(thing);\n                  }\n                  else if( fullTextRegExp.test( thing[field] ) ) {\n                    fullTextResults.push(thing);\n                  }\n                }\n              });\n            });\n            searchHTML = module.results.generate({\n              results: $.merge(results, fullTextResults)\n            });\n            $module\n              .removeClass(className.loading)\n            ;\n            module.search.cache.write(searchTerm, searchHTML);\n            module.results.add(searchHTML);\n          },\n          remote: function(searchTerm) {\n            var\n              apiSettings = {\n                stateContext  : $module,\n                url           : source,\n                urlData: { query: searchTerm },\n                success       : function(response) {\n                  searchHTML = module.results.generate(response);\n                  module.search.cache.write(searchTerm, searchHTML);\n                  module.results.add(searchHTML);\n                },\n                failure      : module.error\n              },\n              searchHTML\n            ;\n            module.search.cancel();\n            module.debug('Executing search');\n            $.extend(true, apiSettings, settings.apiSettings);\n            $.api(apiSettings);\n          },\n\n          cache: {\n            read: function(name) {\n              var\n                cache = $module.data('cache')\n              ;\n              return (settings.cache && (typeof cache == 'object') && (cache[name] !== undefined) )\n                ? cache[name]\n                : false\n              ;\n            },\n            write: function(name, value) {\n              var\n                cache = ($module.data('cache') !== undefined)\n                  ? $module.data('cache')\n                  : {}\n              ;\n              cache[name] = value;\n              $module\n                .data('cache', cache)\n              ;\n            }\n          }\n        },\n\n        results: {\n          generate: function(response) {\n            module.debug('Generating html from response', response);\n            var\n              template = settings.templates[settings.type],\n              html     = ''\n            ;\n            if(($.isPlainObject(response.results) && !$.isEmptyObject(response.results)) || ($.isArray(response.results) && response.results.length > 0) ) {\n              if(settings.maxResults > 0) {\n                response.results = $.makeArray(response.results).slice(0, settings.maxResults);\n              }\n              if(response.results.length > 0) {\n                if($.isFunction(template)) {\n                  html = template(response);\n                }\n                else {\n                  module.error(error.noTemplate, false);\n                }\n              }\n            }\n            else {\n              html = module.message(error.noResults, 'empty');\n            }\n            $.proxy(settings.onResults, $module)(response);\n            return html;\n          },\n          add: function(html) {\n            if(settings.onResultsAdd == 'default' || $.proxy(settings.onResultsAdd, $results)(html) == 'default') {\n              $results\n                .html(html)\n              ;\n            }\n            module.results.show();\n          },\n          show: function() {\n            if( ($results.filter(':visible').size() === 0) && ($prompt.filter(':focus').size() > 0) && $results.html() !== '') {\n              $results\n                .stop()\n                .fadeIn(200)\n              ;\n              $.proxy(settings.onResultsOpen, $results)();\n            }\n          },\n          hide: function() {\n            if($results.filter(':visible').size() > 0) {\n              $results\n                .stop()\n                .fadeOut(200)\n              ;\n              $.proxy(settings.onResultsClose, $results)();\n            }\n          },\n          select: function(event) {\n            module.debug('Search result selected');\n            var\n              $result = $(this),\n              $title  = $result.find('.title'),\n              title   = $title.html()\n            ;\n            if(settings.onSelect == 'default' || $.proxy(settings.onSelect, this)(event) == 'default') {\n              var\n                $link  = $result.find('a[href]').eq(0),\n                href   = $link.attr('href') || false,\n                target = $link.attr('target') || false\n              ;\n              module.results.hide();\n              $prompt\n                .val(title)\n              ;\n              if(href) {\n                if(target == '_blank' || event.ctrlKey) {\n                  window.open(href);\n                }\n                else {\n                  window.location.href = (href);\n                }\n              }\n            }\n          }\n        },\n\n        setting: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            settings[name] = value;\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n          module.error.apply(console, arguments);\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Element'        : element,\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 100);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if($allModules.size() > 1) {\n              title += ' ' + '(' + $allModules.size() + ')';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && instance !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( instance[camelCaseValue] ) && (depth != maxDepth) ) {\n                instance = instance[camelCaseValue];\n              }\n              else if( instance[camelCaseValue] !== undefined ) {\n                found = instance[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( instance[value] ) && (depth != maxDepth) ) {\n                instance = instance[value];\n              }\n              else if( instance[value] !== undefined ) {\n                found = instance[value];\n                return false;\n              }\n              else {\n                module.error(error.method, query);\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          module.destroy();\n        }\n        module.initialize();\n      }\n\n    })\n  ;\n\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.search.settings = {\n\n  name           : 'Search Module',\n  namespace      : 'search',\n\n  debug          : true,\n  verbose        : true,\n  performance    : true,\n\n  // onSelect default action is defined in module\n  onSelect       : 'default',\n  onResultsAdd   : 'default',\n\n  onSearchQuery  : function(){},\n  onResults      : function(response){},\n\n  onResultsOpen  : function(){},\n  onResultsClose : function(){},\n\n  automatic      : 'true',\n  type           : 'simple',\n  minCharacters  : 3,\n  searchThrottle : 300,\n  maxResults     : 7,\n  cache          : true,\n\n  searchFields    : [\n    'title',\n    'description'\n  ],\n\n  // api config\n  apiSettings: {\n\n  },\n\n  className: {\n    active  : 'active',\n    down    : 'down',\n    focus   : 'focus',\n    empty   : 'empty',\n    loading : 'loading'\n  },\n\n  error : {\n    noResults   : 'Your search returned no results',\n    logging     : 'Error in debug logging, exiting.',\n    noTemplate  : 'A valid template name was not specified.',\n    serverError : 'There was an issue with querying the server.',\n    method      : 'The method you called is not defined.'\n  },\n\n  selector : {\n    prompt       : '.prompt',\n    searchButton : '.search.button',\n    results      : '.results',\n    category     : '.category',\n    result       : '.result'\n  },\n\n  templates: {\n    message: function(message, type) {\n      var\n        html = ''\n      ;\n      if(message !== undefined && type !== undefined) {\n        html +=  ''\n          + '<div class=\"message ' + type +'\">'\n        ;\n        // message type\n        if(type == 'empty') {\n          html += ''\n            + '<div class=\"header\">No Results</div class=\"header\">'\n            + '<div class=\"description\">' + message + '</div class=\"description\">'\n          ;\n        }\n        else {\n          html += ' <div class=\"description\">' + message + '</div>';\n        }\n        html += '</div>';\n      }\n      return html;\n    },\n    categories: function(response) {\n      var\n        html = ''\n      ;\n      if(response.results !== undefined) {\n        // each category\n        $.each(response.results, function(index, category) {\n          if(category.results !== undefined && category.results.length > 0) {\n            html  += ''\n              + '<div class=\"category\">'\n              + '<div class=\"name\">' + category.name + '</div>'\n            ;\n            // each item inside category\n            $.each(category.results, function(index, result) {\n              html  += '<div class=\"result\">';\n              html  += '<a href=\"' + result.url + '\"></a>';\n              if(result.image !== undefined) {\n                html+= ''\n                  + '<div class=\"image\">'\n                  + ' <img src=\"' + result.image + '\">'\n                  + '</div>'\n                ;\n              }\n              html += '<div class=\"info\">';\n              if(result.price !== undefined) {\n                html+= '<div class=\"price\">' + result.price + '</div>';\n              }\n              if(result.title !== undefined) {\n                html+= '<div class=\"title\">' + result.title + '</div>';\n              }\n              if(result.description !== undefined) {\n                html+= '<div class=\"description\">' + result.description + '</div>';\n              }\n              html  += ''\n                + '</div>'\n                + '</div>'\n              ;\n            });\n            html  += ''\n              + '</div>'\n            ;\n          }\n        });\n        if(response.resultPage) {\n          html += ''\n          + '<a href=\"' + response.resultPage.url + '\" class=\"all\">'\n          +   response.resultPage.text\n          + '</a>';\n        }\n        return html;\n      }\n      return false;\n    },\n    simple: function(response) {\n      var\n        html = ''\n      ;\n      if(response.results !== undefined) {\n\n        // each result\n        $.each(response.results, function(index, result) {\n          html  += '<a class=\"result\" href=\"' + result.url + '\">';\n          if(result.image !== undefined) {\n            html+= ''\n              + '<div class=\"image\">'\n              + ' <img src=\"' + result.image + '\">'\n              + '</div>'\n            ;\n          }\n          html += '<div class=\"info\">';\n          if(result.price !== undefined) {\n            html+= '<div class=\"price\">' + result.price + '</div>';\n          }\n          if(result.title !== undefined) {\n            html+= '<div class=\"title\">' + result.title + '</div>';\n          }\n          if(result.description !== undefined) {\n            html+= '<div class=\"description\">' + result.description + '</div>';\n          }\n          html  += ''\n            + '</div>'\n            + '</a>'\n          ;\n        });\n\n        if(response.resultPage) {\n          html += ''\n          + '<a href=\"' + response.resultPage.url + '\" class=\"all\">'\n          +   response.resultPage.text\n          + '</a>';\n        }\n        return html;\n      }\n      return false;\n    }\n  }\n};\n\n})( jQuery, window , document );","/*\n * # Semantic - Shape\n * http://github.com/jlukic/semantic-ui/\n *\n *\n * Copyright 2013 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ( $, window, document, undefined ) {\n\n$.fn.shape = function(parameters) {\n  var\n    $allModules     = $(this),\n    $body           = $('body'),\n\n    time            = new Date().getTime(),\n    performance     = [],\n\n    query           = arguments[0],\n    methodInvoked   = (typeof query == 'string'),\n    queryArguments  = [].slice.call(arguments, 1),\n    returnedValue\n  ;\n\n  $allModules\n    .each(function() {\n      var\n        moduleSelector  = $allModules.selector || '',\n        settings        = $.extend(true, {}, $.fn.shape.settings, parameters),\n\n        // internal aliases\n        namespace     = settings.namespace,\n        selector      = settings.selector,\n        error         = settings.error,\n        className     = settings.className,\n\n        // define namespaces for modules\n        eventNamespace  = '.' + namespace,\n        moduleNamespace = 'module-' + namespace,\n\n        // selector cache\n        $module       = $(this),\n        $sides        = $module.find(selector.sides),\n        $side         = $module.find(selector.side),\n\n        // private variables\n        nextSelector = false,\n        $activeSide,\n        $nextSide,\n\n        // standard module\n        element       = this,\n        instance      = $module.data(moduleNamespace),\n        module\n      ;\n\n      module = {\n\n        initialize: function() {\n          module.verbose('Initializing module for', element);\n          module.set.defaultSide();\n          module.instantiate();\n        },\n\n        instantiate: function() {\n          module.verbose('Storing instance of module', module);\n          instance = module;\n          $module\n            .data(moduleNamespace, instance)\n          ;\n        },\n\n        destroy: function() {\n          module.verbose('Destroying previous module for', element);\n          $module\n            .removeData(moduleNamespace)\n            .off(eventNamespace)\n          ;\n        },\n\n        refresh: function() {\n          module.verbose('Refreshing selector cache for', element);\n          $module = $(element);\n          $sides  = $(this).find(selector.shape);\n          $side   = $(this).find(selector.side);\n        },\n\n        repaint: function() {\n          module.verbose('Forcing repaint event');\n          var\n            shape          = $sides.get(0) || document.createElement('div'),\n            fakeAssignment = shape.offsetWidth\n          ;\n        },\n\n        animate: function(propertyObject, callback) {\n          module.verbose('Animating box with properties', propertyObject);\n          callback = callback || function(event) {\n            module.verbose('Executing animation callback');\n            if(event !== undefined) {\n              event.stopPropagation();\n            }\n            module.reset();\n            module.set.active();\n          };\n          $.proxy(settings.beforeChange, $nextSide[0])();\n          if(module.get.transitionEvent()) {\n            module.verbose('Starting CSS animation');\n            $module\n              .addClass(className.animating)\n            ;\n            module.repaint();\n            $module\n              .addClass(className.animating)\n            ;\n            $activeSide\n              .addClass(className.hidden)\n            ;\n            $sides\n              .css(propertyObject)\n              .one(module.get.transitionEvent(), callback)\n            ;\n            module.set.duration(settings.duration);\n          }\n          else {\n            callback();\n          }\n        },\n\n        queue: function(method) {\n          module.debug('Queueing animation of', method);\n          $sides\n            .one(module.get.transitionEvent(), function() {\n              module.debug('Executing queued animation');\n              setTimeout(function(){\n                $module.shape(method);\n              }, 0);\n            })\n          ;\n        },\n\n        reset: function() {\n          module.verbose('Animating states reset');\n          $module\n            .removeClass(className.animating)\n            .attr('style', '')\n            .removeAttr('style')\n          ;\n          // removeAttr style does not consistently work in safari\n          $sides\n            .attr('style', '')\n            .removeAttr('style')\n          ;\n          $side\n            .attr('style', '')\n            .removeAttr('style')\n            .removeClass(className.hidden)\n          ;\n          $nextSide\n            .removeClass(className.animating)\n            .attr('style', '')\n            .removeAttr('style')\n          ;\n        },\n\n        is: {\n          animating: function() {\n            return $module.hasClass(className.animating);\n          }\n        },\n\n        set: {\n\n          defaultSide: function() {\n            $activeSide = $module.find('.' + settings.className.active);\n            $nextSide   = ( $activeSide.next(selector.side).size() > 0 )\n              ? $activeSide.next(selector.side)\n              : $module.find(selector.side).first()\n            ;\n            nextSelector = false;\n            module.verbose('Active side set to', $activeSide);\n            module.verbose('Next side set to', $nextSide);\n          },\n\n          duration: function(duration) {\n            duration = duration || settings.duration;\n            duration = (typeof duration == 'number')\n              ? duration + 'ms'\n              : duration\n            ;\n            module.verbose('Setting animation duration', duration);\n            $sides.add($side)\n              .css({\n                '-webkit-transition-duration': duration,\n                '-moz-transition-duration': duration,\n                '-ms-transition-duration': duration,\n                '-o-transition-duration': duration,\n                'transition-duration': duration\n              })\n            ;\n          },\n\n          stageSize: function() {\n            var\n              $clone      = $module.clone().addClass(className.loading),\n              $activeSide = $clone.find('.' + settings.className.active),\n              $nextSide   = (nextSelector)\n                ? $clone.find(nextSelector)\n                : ( $activeSide.next(selector.side).size() > 0 )\n                  ? $activeSide.next(selector.side)\n                  : $clone.find(selector.side).first(),\n              newSize = {}\n            ;\n            $activeSide.removeClass(className.active);\n            $nextSide.addClass(className.active);\n            $clone.prependTo($body);\n            newSize = {\n              width  : $nextSide.outerWidth(),\n              height : $nextSide.outerHeight()\n            };\n            $clone.remove();\n            $module\n              .css(newSize)\n            ;\n            module.verbose('Resizing stage to fit new content', newSize);\n          },\n\n          nextSide: function(selector) {\n            nextSelector = selector;\n            $nextSide = $module.find(selector);\n            if($nextSide.size() === 0) {\n              module.error(error.side);\n            }\n            module.verbose('Next side manually set to', $nextSide);\n          },\n\n          active: function() {\n            module.verbose('Setting new side to active', $nextSide);\n            $side\n              .removeClass(className.active)\n            ;\n            $nextSide\n              .addClass(className.active)\n            ;\n            $.proxy(settings.onChange, $nextSide[0])();\n            module.set.defaultSide();\n          }\n        },\n\n        flip: {\n\n          up: function() {\n            module.debug('Flipping up', $nextSide);\n            if( !module.is.animating() ) {\n              module.set.stageSize();\n              module.stage.above();\n              module.animate( module.get.transform.up() );\n            }\n            else {\n              module.queue('flip up');\n            }\n          },\n\n          down: function() {\n            module.debug('Flipping down', $nextSide);\n            if( !module.is.animating() ) {\n              module.set.stageSize();\n              module.stage.below();\n              module.animate( module.get.transform.down() );\n            }\n            else {\n              module.queue('flip down');\n            }\n          },\n\n          left: function() {\n            module.debug('Flipping left', $nextSide);\n            if( !module.is.animating() ) {\n              module.set.stageSize();\n              module.stage.left();\n              module.animate(module.get.transform.left() );\n            }\n            else {\n              module.queue('flip left');\n            }\n          },\n\n          right: function() {\n            module.debug('Flipping right', $nextSide);\n            if( !module.is.animating() ) {\n              module.set.stageSize();\n              module.stage.right();\n              module.animate(module.get.transform.right() );\n            }\n            else {\n              module.queue('flip right');\n            }\n          },\n\n          over: function() {\n            module.debug('Flipping over', $nextSide);\n            if( !module.is.animating() ) {\n              module.set.stageSize();\n              module.stage.behind();\n              module.animate(module.get.transform.over() );\n            }\n            else {\n              module.queue('flip over');\n            }\n          },\n\n          back: function() {\n            module.debug('Flipping back', $nextSide);\n            if( !module.is.animating() ) {\n              module.set.stageSize();\n              module.stage.behind();\n              module.animate(module.get.transform.back() );\n            }\n            else {\n              module.queue('flip back');\n            }\n          }\n\n        },\n\n        get: {\n\n          transform: {\n            up: function() {\n              var\n                translate = {\n                  y: -(($activeSide.outerHeight() - $nextSide.outerHeight()) / 2),\n                  z: -($activeSide.outerHeight() / 2)\n                }\n              ;\n              return {\n                transform: 'translateY(' + translate.y + 'px) translateZ('+ translate.z + 'px) rotateX(-90deg)'\n              };\n            },\n\n            down: function() {\n              var\n                translate = {\n                  y: -(($activeSide.outerHeight() - $nextSide.outerHeight()) / 2),\n                  z: -($activeSide.outerHeight() / 2)\n                }\n              ;\n              return {\n                transform: 'translateY(' + translate.y + 'px) translateZ('+ translate.z + 'px) rotateX(90deg)'\n              };\n            },\n\n            left: function() {\n              var\n                translate = {\n                  x : -(($activeSide.outerWidth() - $nextSide.outerWidth()) / 2),\n                  z : -($activeSide.outerWidth() / 2)\n                }\n              ;\n              return {\n                transform: 'translateX(' + translate.x + 'px) translateZ(' + translate.z + 'px) rotateY(90deg)'\n              };\n            },\n\n            right: function() {\n              var\n                translate = {\n                  x : -(($activeSide.outerWidth() - $nextSide.outerWidth()) / 2),\n                  z : -($activeSide.outerWidth() / 2)\n                }\n              ;\n              return {\n                transform: 'translateX(' + translate.x + 'px) translateZ(' + translate.z + 'px) rotateY(-90deg)'\n              };\n            },\n\n            over: function() {\n              var\n                translate = {\n                  x : -(($activeSide.outerWidth() - $nextSide.outerWidth()) / 2)\n                }\n              ;\n              return {\n                transform: 'translateX(' + translate.x + 'px) rotateY(180deg)'\n              };\n            },\n\n            back: function() {\n              var\n                translate = {\n                  x : -(($activeSide.outerWidth() - $nextSide.outerWidth()) / 2)\n                }\n              ;\n              return {\n                transform: 'translateX(' + translate.x + 'px) rotateY(-180deg)'\n              };\n            }\n          },\n\n          transitionEvent: function() {\n            var\n              element     = document.createElement('element'),\n              transitions = {\n                'transition'       :'transitionend',\n                'OTransition'      :'oTransitionEnd',\n                'MozTransition'    :'transitionend',\n                'WebkitTransition' :'webkitTransitionEnd'\n              },\n              transition\n            ;\n            for(transition in transitions){\n              if( element.style[transition] !== undefined ){\n                return transitions[transition];\n              }\n            }\n          },\n\n          nextSide: function() {\n            return ( $activeSide.next(selector.side).size() > 0 )\n              ? $activeSide.next(selector.side)\n              : $module.find(selector.side).first()\n            ;\n          }\n\n        },\n\n        stage: {\n\n          above: function() {\n            var\n              box = {\n                origin : (($activeSide.outerHeight() - $nextSide.outerHeight()) / 2),\n                depth  : {\n                  active : ($nextSide.outerHeight() / 2),\n                  next   : ($activeSide.outerHeight() / 2)\n                }\n              }\n            ;\n            module.verbose('Setting the initial animation position as above', $nextSide, box);\n            $activeSide\n              .css({\n                'transform' : 'rotateY(0deg) translateZ(' + box.depth.active + 'px)'\n              })\n            ;\n            $nextSide\n              .addClass(className.animating)\n              .css({\n                'display'   : 'block',\n                'top'       : box.origin + 'px',\n                'transform' : 'rotateX(90deg) translateZ(' + box.depth.next + 'px)'\n              })\n            ;\n          },\n\n          below: function() {\n            var\n              box = {\n                origin : (($activeSide.outerHeight() - $nextSide.outerHeight()) / 2),\n                depth  : {\n                  active : ($nextSide.outerHeight() / 2),\n                  next   : ($activeSide.outerHeight() / 2)\n                }\n              }\n            ;\n            module.verbose('Setting the initial animation position as below', $nextSide, box);\n            $activeSide\n              .css({\n                'transform' : 'rotateY(0deg) translateZ(' + box.depth.active + 'px)'\n              })\n            ;\n            $nextSide\n              .addClass(className.animating)\n              .css({\n                'display'   : 'block',\n                'top'       : box.origin + 'px',\n                'transform' : 'rotateX(-90deg) translateZ(' + box.depth.next + 'px)'\n              })\n            ;\n          },\n\n          left: function() {\n            var\n              box = {\n                origin : ( ( $activeSide.outerWidth() - $nextSide.outerWidth() ) / 2),\n                depth  : {\n                  active : ($nextSide.outerWidth() / 2),\n                  next   : ($activeSide.outerWidth() / 2)\n                }\n              }\n            ;\n            module.verbose('Setting the initial animation position as left', $nextSide, box);\n            $activeSide\n              .css({\n                'transform' : 'rotateY(0deg) translateZ(' + box.depth.active + 'px)'\n              })\n            ;\n            $nextSide\n              .addClass(className.animating)\n              .css({\n                'display'   : 'block',\n                'left'      : box.origin + 'px',\n                'transform' : 'rotateY(-90deg) translateZ(' + box.depth.next + 'px)'\n              })\n            ;\n          },\n\n          right: function() {\n            var\n              box = {\n                origin : ( ( $activeSide.outerWidth() - $nextSide.outerWidth() ) / 2),\n                depth  : {\n                  active : ($nextSide.outerWidth() / 2),\n                  next   : ($activeSide.outerWidth() / 2)\n                }\n              }\n            ;\n            module.verbose('Setting the initial animation position as left', $nextSide, box);\n            $activeSide\n              .css({\n                'transform' : 'rotateY(0deg) translateZ(' + box.depth.active + 'px)'\n              })\n            ;\n            $nextSide\n              .addClass(className.animating)\n              .css({\n                'display'   : 'block',\n                'left'      : box.origin + 'px',\n                'transform' : 'rotateY(90deg) translateZ(' + box.depth.next + 'px)'\n              })\n            ;\n          },\n\n          behind: function() {\n            var\n              box = {\n                origin : ( ( $activeSide.outerWidth() - $nextSide.outerWidth() ) / 2),\n                depth  : {\n                  active : ($nextSide.outerWidth() / 2),\n                  next   : ($activeSide.outerWidth() / 2)\n                }\n              }\n            ;\n            module.verbose('Setting the initial animation position as behind', $nextSide, box);\n            $activeSide\n              .css({\n                'transform' : 'rotateY(0deg)'\n              })\n            ;\n            $nextSide\n              .addClass(className.animating)\n              .css({\n                'display'   : 'block',\n                'left'      : box.origin + 'px',\n                'transform' : 'rotateY(-180deg)'\n              })\n            ;\n          }\n        },\n        setting: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            settings[name] = value;\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n          module.error.apply(console, arguments);\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Element'        : element,\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 100);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if($allModules.size() > 1) {\n              title += ' ' + '(' + $allModules.size() + ')';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && instance !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( instance[camelCaseValue] ) && (depth != maxDepth) ) {\n                instance = instance[camelCaseValue];\n              }\n              else if( instance[camelCaseValue] !== undefined ) {\n                found = instance[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( instance[value] ) && (depth != maxDepth) ) {\n                instance = instance[value];\n              }\n              else if( instance[value] !== undefined ) {\n                found = instance[value];\n                return false;\n              }\n              else {\n                module.error(error.method, query);\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          module.destroy();\n        }\n        module.initialize();\n      }\n    })\n  ;\n\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.shape.settings = {\n\n  // module info\n  name : 'Shape',\n\n  // debug content outputted to console\n  debug      : true,\n\n  // verbose debug output\n  verbose    : true,\n\n  // performance data output\n  performance: true,\n\n  // event namespace\n  namespace  : 'shape',\n\n  // callback occurs on side change\n  beforeChange : function() {},\n  onChange     : function() {},\n\n  // animation duration\n  duration   : 700,\n\n  // possible errors\n  error: {\n    side   : 'You tried to switch to a side that does not exist.',\n    method : 'The method you called is not defined'\n  },\n\n  // classnames used\n  className   : {\n    animating : 'animating',\n    hidden    : 'hidden',\n    loading   : 'loading',\n    active    : 'active'\n  },\n\n  // selectors used\n  selector    : {\n    sides : '.sides',\n    side  : '.side'\n  }\n\n};\n\n\n})( jQuery, window , document );","/*\n * # Semantic - Sidebar\n * http://github.com/jlukic/semantic-ui/\n *\n *\n * Copyright 2013 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ( $, window, document, undefined ) {\n\n$.fn.sidebar = function(parameters) {\n  var\n    $allModules    = $(this),\n    $body          = $('body'),\n    $head          = $('head'),\n\n    moduleSelector = $allModules.selector || '',\n\n    time           = new Date().getTime(),\n    performance    = [],\n\n    query          = arguments[0],\n    methodInvoked  = (typeof query == 'string'),\n    queryArguments = [].slice.call(arguments, 1),\n    returnedValue\n  ;\n\n  $allModules\n    .each(function() {\n      var\n        settings        = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.sidebar.settings, parameters)\n          : $.extend({}, $.fn.sidebar.settings),\n\n        selector        = settings.selector,\n        className       = settings.className,\n        namespace       = settings.namespace,\n        error           = settings.error,\n\n        eventNamespace  = '.' + namespace,\n        moduleNamespace = 'module-' + namespace,\n\n        $module         = $(this),\n        $style          = $('style[title=' + namespace + ']'),\n\n        element         = this,\n        instance        = $module.data(moduleNamespace),\n        module\n      ;\n\n      module      = {\n\n        initialize: function() {\n          module.debug('Initializing sidebar', $module);\n          module.instantiate();\n        },\n\n        instantiate: function() {\n          module.verbose('Storing instance of module', module);\n          instance = module;\n          $module\n            .data(moduleNamespace, module)\n          ;\n        },\n\n        destroy: function() {\n          module.verbose('Destroying previous module for', $module);\n          $module\n            .off(eventNamespace)\n            .removeData(moduleNamespace)\n          ;\n        },\n\n        refresh: function() {\n          module.verbose('Refreshing selector cache');\n          $style  = $('style[title=' + namespace + ']');\n        },\n\n        attachEvents: function(selector, event) {\n          var\n            $toggle = $(selector)\n          ;\n          event = $.isFunction(module[event])\n            ? module[event]\n            : module.toggle\n          ;\n          if($toggle.size() > 0) {\n            module.debug('Attaching sidebar events to element', selector, event);\n            $toggle\n              .off(eventNamespace)\n              .on('click' + eventNamespace, event)\n            ;\n          }\n          else {\n            module.error(error.notFound);\n          }\n        },\n\n        show: function(callback) {\n          callback = $.isFunction(callback)\n            ? callback\n            : function(){}\n          ;\n          module.debug('Showing sidebar', callback);\n          if(module.is.closed()) {\n            if(!settings.overlay) {\n              if(settings.exclusive) {\n                module.hideAll();\n              }\n              module.pushPage();\n            }\n            module.set.active();\n            callback();\n            $.proxy(settings.onChange, element)();\n            $.proxy(settings.onShow, element)();\n          }\n          else {\n            module.debug('Sidebar is already visible');\n          }\n        },\n\n        hide: function(callback) {\n          callback = $.isFunction(callback)\n            ? callback\n            : function(){}\n          ;\n          module.debug('Hiding sidebar', callback);\n          if(module.is.open()) {\n            if(!settings.overlay) {\n              module.pullPage();\n              module.remove.pushed();\n            }\n            module.remove.active();\n            callback();\n            $.proxy(settings.onChange, element)();\n            $.proxy(settings.onHide, element)();\n          }\n        },\n\n        hideAll: function() {\n          $(selector.sidebar)\n            .filter(':visible')\n              .sidebar('hide')\n          ;\n        },\n\n        toggle: function() {\n          if(module.is.closed()) {\n            module.show();\n          }\n          else {\n            module.hide();\n          }\n        },\n\n        pushPage: function() {\n          var\n            direction = module.get.direction(),\n            distance  = (module.is.vertical())\n              ? $module.outerHeight()\n              : $module.outerWidth()\n          ;\n          if(settings.useCSS) {\n            module.debug('Using CSS to animate body');\n            module.add.bodyCSS(direction, distance);\n            module.set.pushed();\n          }\n          else {\n            module.animatePage(direction, distance, module.set.pushed);\n          }\n        },\n\n        pullPage: function() {\n          var\n            direction = module.get.direction()\n          ;\n          if(settings.useCSS) {\n            module.debug('Resetting body position css');\n            module.remove.bodyCSS();\n          }\n          else {\n            module.debug('Resetting body position using javascript');\n            module.animatePage(direction, 0);\n          }\n          module.remove.pushed();\n        },\n\n        animatePage: function(direction, distance) {\n          var\n            animateSettings = {}\n          ;\n          animateSettings['padding-' + direction] = distance;\n          module.debug('Using javascript to animate body', animateSettings);\n          $body\n            .animate(animateSettings, settings.duration, module.set.pushed)\n          ;\n        },\n\n        add: {\n          bodyCSS: function(direction, distance) {\n            var\n              style\n            ;\n            if(direction !== className.bottom) {\n              style = ''\n                + '<style title=\"' + namespace + '\">'\n                + 'body.pushed {'\n                + '  margin-' + direction + ': ' + distance + 'px !important;'\n                + '}'\n                + '</style>'\n              ;\n            }\n            $head.append(style);\n            module.debug('Adding body css to head', $style);\n          }\n        },\n\n        remove: {\n          bodyCSS: function() {\n            module.debug('Removing body css styles', $style);\n            module.refresh();\n            $style.remove();\n          },\n          active: function() {\n            $module.removeClass(className.active);\n          },\n          pushed: function() {\n            module.verbose('Removing body push state', module.get.direction());\n            $body\n              .removeClass(className[ module.get.direction() ])\n              .removeClass(className.pushed)\n            ;\n          }\n        },\n\n        set: {\n          active: function() {\n            $module.addClass(className.active);\n          },\n          pushed: function() {\n            module.verbose('Adding body push state', module.get.direction());\n            $body\n              .addClass(className[ module.get.direction() ])\n              .addClass(className.pushed)\n            ;\n          }\n        },\n\n        get: {\n          direction: function() {\n            if($module.hasClass(className.top)) {\n              return className.top;\n            }\n            else if($module.hasClass(className.right)) {\n              return className.right;\n            }\n            else if($module.hasClass(className.bottom)) {\n              return className.bottom;\n            }\n            else {\n              return className.left;\n            }\n          },\n          transitionEvent: function() {\n            var\n              element     = document.createElement('element'),\n              transitions = {\n                'transition'       :'transitionend',\n                'OTransition'      :'oTransitionEnd',\n                'MozTransition'    :'transitionend',\n                'WebkitTransition' :'webkitTransitionEnd'\n              },\n              transition\n            ;\n            for(transition in transitions){\n              if( element.style[transition] !== undefined ){\n                return transitions[transition];\n              }\n            }\n          }\n        },\n\n        is: {\n          open: function() {\n            return $module.is(':animated') || $module.hasClass(className.active);\n          },\n          closed: function() {\n            return !module.is.open();\n          },\n          vertical: function() {\n            return $module.hasClass(className.top);\n          }\n        },\n\n        setting: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            settings[name] = value;\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n          module.error.apply(console, arguments);\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Element'        : element,\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 100);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if($allModules.size() > 1) {\n              title += ' ' + '(' + $allModules.size() + ')';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && instance !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( instance[camelCaseValue] ) && (depth != maxDepth) ) {\n                instance = instance[camelCaseValue];\n              }\n              else if( instance[camelCaseValue] !== undefined ) {\n                found = instance[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( instance[value] ) && (depth != maxDepth) ) {\n                instance = instance[value];\n              }\n              else if( instance[value] !== undefined ) {\n                found = instance[value];\n                return false;\n              }\n              else {\n                module.error(error.method, query);\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          module.destroy();\n        }\n        module.initialize();\n      }\n    })\n  ;\n\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.sidebar.settings = {\n\n  name        : 'Sidebar',\n  namespace   : 'sidebar',\n\n  verbose     : true,\n  debug       : true,\n  performance : true,\n\n  useCSS      : true,\n  exclusive   : true,\n  overlay     : false,\n  duration    : 300,\n\n  onChange     : function(){},\n  onShow       : function(){},\n  onHide       : function(){},\n\n  className: {\n    active : 'active',\n    pushed : 'pushed',\n    top    : 'top',\n    left   : 'left',\n    right  : 'right',\n    bottom : 'bottom'\n  },\n\n  selector: {\n    sidebar: '.ui.sidebar'\n  },\n\n  error   : {\n    method   : 'The method you called is not defined.',\n    notFound : 'There were no elements that matched the specified selector'\n  }\n\n};\n\n})( jQuery, window , document );\n","/*\n * # Semantic - Tab\n * http://github.com/jlukic/semantic-ui/\n *\n * Copyright 2013 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n\n;(function ($, window, document, undefined) {\n\n  $.fn.tab = function(parameters) {\n\n    var\n      settings        = $.extend(true, {}, $.fn.tab.settings, parameters),\n\n      $module         = $(this),\n      $tabs           = $(settings.context).find(settings.selector.tabs),\n\n      moduleSelector  = $module.selector || '',\n\n      cache           = {},\n      firstLoad       = true,\n      recursionDepth  = 0,\n\n      activeTabPath,\n      parameterArray,\n      historyEvent,\n\n      element         = this,\n      time            = new Date().getTime(),\n      performance     = [],\n\n      className       = settings.className,\n      metadata        = settings.metadata,\n      error           = settings.error,\n\n      eventNamespace  = '.' + settings.namespace,\n      moduleNamespace = 'module-' + settings.namespace,\n\n      instance        = $module.data(moduleNamespace),\n\n      query           = arguments[0],\n      methodInvoked   = (instance !== undefined && typeof query == 'string'),\n      queryArguments  = [].slice.call(arguments, 1),\n\n      module,\n      returnedValue\n    ;\n\n    module = {\n\n      initialize: function() {\n        module.debug('Initializing Tabs', $module);\n\n        // set up automatic routing\n        if(settings.auto) {\n          module.verbose('Setting up automatic tab retrieval from server');\n          settings.apiSettings = {\n            url: settings.path + '/{$tab}'\n          };\n        }\n\n        // attach history events\n        if(settings.history) {\n          module.debug('Initializing page state');\n          if( $.address === undefined ) {\n            module.error(error.state);\n            return false;\n          }\n          else {\n            if(settings.historyType == 'html5') {\n              module.debug('Using HTML5 to manage state');\n              if(settings.path !== false) {\n                $.address\n                  .history(true)\n                  .state(settings.path)\n                ;\n              }\n              else {\n                module.error(error.path);\n                return false;\n              }\n            }\n            $.address\n              .unbind('change')\n              .bind('change', module.event.history.change)\n            ;\n          }\n        }\n\n        // attach events if navigation wasn't set to window\n        if( !$.isWindow( element ) ) {\n          module.debug('Attaching tab activation events to element', $module);\n          $module\n            .on('click' + eventNamespace, module.event.click)\n          ;\n        }\n        module.instantiate();\n      },\n\n      instantiate: function () {\n        module.verbose('Storing instance of module', module);\n        $module\n          .data(moduleNamespace, module)\n        ;\n      },\n\n      destroy: function() {\n        module.debug('Destroying tabs', $module);\n        $module\n          .removeData(moduleNamespace)\n          .off(eventNamespace)\n        ;\n      },\n\n      event: {\n        click: function(event) {\n          var\n            tabPath = $(this).data(metadata.tab)\n          ;\n          if(tabPath !== undefined) {\n            if(settings.history) {\n              module.verbose('Updating page state', event);\n              $.address.value(tabPath);\n            }\n            else {\n              module.verbose('Changing tab without state management', event);\n              module.changeTab(tabPath);\n            }\n            event.preventDefault();\n          }\n          else {\n            module.debug('No tab specified');\n          }\n        },\n        history: {\n          change: function(event) {\n            var\n              tabPath   = event.pathNames.join('/') || module.get.initialPath(),\n              pageTitle = settings.templates.determineTitle(tabPath) || false\n            ;\n            module.debug('History change event', tabPath, event);\n            historyEvent = event;\n            if(tabPath !== undefined) {\n              module.changeTab(tabPath);\n            }\n            if(pageTitle) {\n              $.address.title(pageTitle);\n            }\n          }\n        }\n      },\n\n      refresh: function() {\n        if(activeTabPath) {\n          module.debug('Refreshing tab', activeTabPath);\n          module.changeTab(activeTabPath);\n        }\n      },\n\n      cache: {\n\n        read: function(cacheKey) {\n          return (cacheKey !== undefined)\n            ? cache[cacheKey]\n            : false\n          ;\n        },\n        add: function(cacheKey, content) {\n          cacheKey = cacheKey || activeTabPath;\n          module.debug('Adding cached content for', cacheKey);\n          cache[cacheKey] = content;\n        },\n        remove: function(cacheKey) {\n          cacheKey = cacheKey || activeTabPath;\n          module.debug('Removing cached content for', cacheKey);\n          delete cache[cacheKey];\n        }\n      },\n\n      set: {\n        state: function(url) {\n          $.address.value(url);\n        }\n      },\n\n      changeTab: function(tabPath) {\n        var\n          pushStateAvailable = (window.history && window.history.pushState),\n          shouldIgnoreLoad   = (pushStateAvailable && settings.ignoreFirstLoad && firstLoad),\n          remoteContent      = (settings.auto || $.isPlainObject(settings.apiSettings) ),\n          // only get default path if not remote content\n          pathArray = (remoteContent && !shouldIgnoreLoad)\n            ? module.utilities.pathToArray(tabPath)\n            : module.get.defaultPathArray(tabPath)\n        ;\n        tabPath = module.utilities.arrayToPath(pathArray);\n        module.deactivate.all();\n        $.each(pathArray, function(index, tab) {\n          var\n            currentPathArray   = pathArray.slice(0, index + 1),\n            currentPath        = module.utilities.arrayToPath(currentPathArray),\n\n            isTab              = module.is.tab(currentPath),\n            isLastIndex        = (index + 1 == pathArray.length),\n\n            $tab               = module.get.tabElement(currentPath),\n            nextPathArray,\n            nextPath,\n            isLastTab\n          ;\n          module.verbose('Looking for tab', tab);\n          if(isTab) {\n            module.verbose('Tab was found', tab);\n\n            // scope up\n            activeTabPath = currentPath;\n            parameterArray = module.utilities.filterArray(pathArray, currentPathArray);\n\n            if(isLastIndex) {\n              isLastTab = true;\n            }\n            else {\n              nextPathArray = pathArray.slice(0, index + 2);\n              nextPath      = module.utilities.arrayToPath(nextPathArray);\n              isLastTab     = ( !module.is.tab(nextPath) );\n              if(isLastTab) {\n                module.verbose('Tab parameters found', nextPathArray);\n              }\n            }\n            if(isLastTab && remoteContent) {\n              if(!shouldIgnoreLoad) {\n                module.activate.navigation(currentPath);\n                module.content.fetch(currentPath, tabPath);\n              }\n              else {\n                module.debug('Ignoring remote content on first tab load', currentPath);\n                firstLoad = false;\n                module.cache.add(tabPath, $tab.html());\n                module.activate.all(currentPath);\n                $.proxy(settings.onTabInit, $tab)(currentPath, parameterArray, historyEvent);\n                $.proxy(settings.onTabLoad, $tab)(currentPath, parameterArray, historyEvent);\n              }\n              return false;\n            }\n            else {\n              module.debug('Opened local tab', currentPath);\n              module.activate.all(currentPath);\n              if( !module.cache.read(currentPath) ) {\n                module.cache.add(currentPath, true);\n                module.debug('First time tab loaded calling tab init');\n                $.proxy(settings.onTabInit, $tab)(currentPath, parameterArray, historyEvent);\n              }\n              $.proxy(settings.onTabLoad, $tab)(currentPath, parameterArray, historyEvent);\n            }\n          }\n          else {\n            module.error(error.missingTab, tab);\n            return false;\n          }\n        });\n      },\n\n      content: {\n\n        fetch: function(tabPath, fullTabPath) {\n          var\n            $tab             = module.get.tabElement(tabPath),\n            apiSettings      = {\n              dataType     : 'html',\n              stateContext : $tab,\n              success      : function(response) {\n                module.cache.add(fullTabPath, response);\n                module.content.update(tabPath, response);\n                if(tabPath == activeTabPath) {\n                  module.debug('Content loaded', tabPath);\n                  module.activate.tab(tabPath);\n                }\n                else {\n                  module.debug('Content loaded in background', tabPath);\n                }\n                $.proxy(settings.onTabInit, $tab)(tabPath, parameterArray, historyEvent);\n                $.proxy(settings.onTabLoad, $tab)(tabPath, parameterArray, historyEvent);\n              },\n              urlData: { tab: fullTabPath }\n            },\n            request         = $tab.data(metadata.promise) || false,\n            existingRequest = ( request && request.state() === 'pending' ),\n            requestSettings,\n            cachedContent\n          ;\n\n          fullTabPath   = fullTabPath || tabPath;\n          cachedContent = module.cache.read(fullTabPath);\n\n          if(settings.cache && cachedContent) {\n            module.debug('Showing existing content', fullTabPath);\n            module.content.update(tabPath, cachedContent);\n            module.activate.tab(tabPath);\n            $.proxy(settings.onTabLoad, $tab)(tabPath, parameterArray, historyEvent);\n          }\n          else if(existingRequest) {\n            module.debug('Content is already loading', fullTabPath);\n            $tab\n              .addClass(className.loading)\n            ;\n          }\n          else if($.api !== undefined) {\n            console.log(settings.apiSettings);\n            requestSettings = $.extend(true, { headers: { 'X-Remote': true } }, settings.apiSettings, apiSettings);\n            module.debug('Retrieving remote content', fullTabPath, requestSettings);\n            $.api( requestSettings );\n          }\n          else {\n            module.error(error.api);\n          }\n        },\n\n        update: function(tabPath, html) {\n          module.debug('Updating html for', tabPath);\n          var\n            $tab = module.get.tabElement(tabPath)\n          ;\n          $tab\n            .html(html)\n          ;\n        }\n      },\n\n      activate: {\n        all: function(tabPath) {\n          module.activate.tab(tabPath);\n          module.activate.navigation(tabPath);\n        },\n        tab: function(tabPath) {\n          var\n            $tab = module.get.tabElement(tabPath)\n          ;\n          module.verbose('Showing tab content for', $tab);\n          $tab.addClass(className.active);\n        },\n        navigation: function(tabPath) {\n          var\n            $navigation = module.get.navElement(tabPath)\n          ;\n          module.verbose('Activating tab navigation for', $navigation, tabPath);\n          $navigation.addClass(className.active);\n        }\n      },\n\n      deactivate: {\n        all: function() {\n          module.deactivate.navigation();\n          module.deactivate.tabs();\n        },\n        navigation: function() {\n          $module\n            .removeClass(className.active)\n          ;\n        },\n        tabs: function() {\n          $tabs\n            .removeClass(className.active + ' ' + className.loading)\n          ;\n        }\n      },\n\n      is: {\n        tab: function(tabName) {\n          return (tabName !== undefined)\n            ? ( module.get.tabElement(tabName).size() > 0 )\n            : false\n          ;\n        }\n      },\n\n      get: {\n        initialPath: function() {\n          return $module.eq(0).data(metadata.tab) || $tabs.eq(0).data(metadata.tab);\n        },\n        path: function() {\n          return $.address.value();\n        },\n        // adds default tabs to tab path\n        defaultPathArray: function(tabPath) {\n          return module.utilities.pathToArray( module.get.defaultPath(tabPath) );\n        },\n        defaultPath: function(tabPath) {\n          var\n            $defaultNav = $module.filter('[data-' + metadata.tab + '^=\"' + tabPath + '/\"]').eq(0),\n            defaultTab  = $defaultNav.data(metadata.tab) || false\n          ;\n          if( defaultTab ) {\n            module.debug('Found default tab', defaultTab);\n            if(recursionDepth < settings.maxDepth) {\n              recursionDepth++;\n              return module.get.defaultPath(defaultTab);\n            }\n            module.error(error.recursion);\n          }\n          else {\n            module.debug('No default tabs found for', tabPath, $tabs);\n          }\n          recursionDepth = 0;\n          return tabPath;\n        },\n        navElement: function(tabPath) {\n          tabPath = tabPath || activeTabPath;\n          return $module.filter('[data-' + metadata.tab + '=\"' + tabPath + '\"]');\n        },\n        tabElement: function(tabPath) {\n          var\n            $fullPathTab,\n            $simplePathTab,\n            tabPathArray,\n            lastTab\n          ;\n          tabPath        = tabPath || activeTabPath;\n          tabPathArray   = module.utilities.pathToArray(tabPath);\n          lastTab        = module.utilities.last(tabPathArray);\n          $fullPathTab   = $tabs.filter('[data-' + metadata.tab + '=\"' + lastTab + '\"]');\n          $simplePathTab = $tabs.filter('[data-' + metadata.tab + '=\"' + tabPath + '\"]');\n          return ($fullPathTab.size() > 0)\n            ? $fullPathTab\n            : $simplePathTab\n          ;\n        },\n        tab: function() {\n          return activeTabPath;\n        }\n      },\n\n      utilities: {\n        filterArray: function(keepArray, removeArray) {\n          return $.grep(keepArray, function(keepValue) {\n            return ( $.inArray(keepValue, removeArray) == -1);\n          });\n        },\n        last: function(array) {\n          return $.isArray(array)\n            ? array[ array.length - 1]\n            : false\n          ;\n        },\n        pathToArray: function(pathName) {\n          if(pathName === undefined) {\n            pathName = activeTabPath;\n          }\n          return typeof pathName == 'string'\n            ? pathName.split('/')\n            : [pathName]\n          ;\n        },\n        arrayToPath: function(pathArray) {\n          return $.isArray(pathArray)\n            ? pathArray.join('/')\n            : false\n          ;\n        }\n      },\n\n      setting: function(name, value) {\n        if( $.isPlainObject(name) ) {\n          $.extend(true, settings, name);\n        }\n        else if(value !== undefined) {\n          settings[name] = value;\n        }\n        else {\n          return settings[name];\n        }\n      },\n      internal: function(name, value) {\n        if( $.isPlainObject(name) ) {\n          $.extend(true, module, name);\n        }\n        else if(value !== undefined) {\n          module[name] = value;\n        }\n        else {\n          return module[name];\n        }\n      },\n      debug: function() {\n        if(settings.debug) {\n          if(settings.performance) {\n            module.performance.log(arguments);\n          }\n          else {\n            module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n            module.debug.apply(console, arguments);\n          }\n        }\n      },\n      verbose: function() {\n        if(settings.verbose && settings.debug) {\n          if(settings.performance) {\n            module.performance.log(arguments);\n          }\n          else {\n            module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n            module.verbose.apply(console, arguments);\n          }\n        }\n      },\n      error: function() {\n        module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n        module.error.apply(console, arguments);\n      },\n      performance: {\n        log: function(message) {\n          var\n            currentTime,\n            executionTime,\n            previousTime\n          ;\n          if(settings.performance) {\n            currentTime   = new Date().getTime();\n            previousTime  = time || currentTime;\n            executionTime = currentTime - previousTime;\n            time          = currentTime;\n            performance.push({\n              'Element'        : element,\n              'Name'           : message[0],\n              'Arguments'      : [].slice.call(message, 1) || '',\n              'Execution Time' : executionTime\n            });\n          }\n          clearTimeout(module.performance.timer);\n          module.performance.timer = setTimeout(module.performance.display, 100);\n        },\n        display: function() {\n          var\n            title = settings.name + ':',\n            totalTime = 0\n          ;\n          time = false;\n          clearTimeout(module.performance.timer);\n          $.each(performance, function(index, data) {\n            totalTime += data['Execution Time'];\n          });\n          title += ' ' + totalTime + 'ms';\n          if(moduleSelector) {\n            title += ' \\'' + moduleSelector + '\\'';\n          }\n          if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n            console.groupCollapsed(title);\n            if(console.table) {\n              console.table(performance);\n            }\n            else {\n              $.each(performance, function(index, data) {\n                console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n              });\n            }\n            console.groupEnd();\n          }\n          performance = [];\n        }\n      },\n      invoke: function(query, passedArguments, context) {\n        var\n          maxDepth,\n          found,\n          response\n        ;\n        passedArguments = passedArguments || queryArguments;\n        context         = element         || context;\n        if(typeof query == 'string' && instance !== undefined) {\n          query    = query.split(/[\\. ]/);\n          maxDepth = query.length - 1;\n          $.each(query, function(depth, value) {\n            var camelCaseValue = (depth != maxDepth)\n              ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n              : query\n            ;\n            if( $.isPlainObject( instance[value] ) && (depth != maxDepth) ) {\n              instance = instance[value];\n            }\n            else if( $.isPlainObject( instance[camelCaseValue] ) && (depth != maxDepth) ) {\n              instance = instance[camelCaseValue];\n            }\n            else if( instance[value] !== undefined ) {\n              found = instance[value];\n              return false;\n            }\n            else if( instance[camelCaseValue] !== undefined ) {\n              found = instance[camelCaseValue];\n              return false;\n            }\n            else {\n              module.error(error.method, query);\n              return false;\n            }\n          });\n        }\n        if ( $.isFunction( found ) ) {\n          response = found.apply(context, passedArguments);\n        }\n        else if(found !== undefined) {\n          response = found;\n        }\n        if($.isArray(returnedValue)) {\n          returnedValue.push(response);\n        }\n        else if(returnedValue !== undefined) {\n          returnedValue = [returnedValue, response];\n        }\n        else if(response !== undefined) {\n          returnedValue = response;\n        }\n        return found;\n      }\n    };\n\n    if(methodInvoked) {\n      if(instance === undefined) {\n        module.initialize();\n      }\n      module.invoke(query);\n    }\n    else {\n      if(instance !== undefined) {\n        module.destroy();\n      }\n      module.initialize();\n    }\n\n    return (returnedValue !== undefined)\n      ? returnedValue\n      : this\n    ;\n\n  };\n\n  // shortcut for tabbed content with no defined navigation\n  $.tab = function(settings) {\n    $(window).tab(settings);\n  };\n\n  $.fn.tab.settings = {\n\n    name        : 'Tab',\n    verbose     : true,\n    debug       : true,\n    performance : true,\n    namespace   : 'tab',\n\n    // only called first time a tab's content is loaded (when remote source)\n    onTabInit   : function(tabPath, parameterArray, historyEvent) {},\n    // called on every load\n    onTabLoad   : function(tabPath, parameterArray, historyEvent) {},\n\n    templates   : {\n      determineTitle: function(tabArray) {}\n    },\n\n    // uses pjax style endpoints fetching content from same url with remote-content headers\n    auto            : false,\n    history         : true,\n    historyType     : 'hash',\n    path            : false,\n\n    context         : 'body',\n\n    // max depth a tab can be nested\n    maxDepth        : 25,\n    // dont load content on first load\n    ignoreFirstLoad : false,\n    // load tab content new every tab click\n    alwaysRefresh   : false,\n    // cache the content requests to pull locally\n    cache           : true,\n    // settings for api call\n    apiSettings     : false,\n\n    error: {\n      api        : 'You attempted to load content without API module',\n      method     : 'The method you called is not defined',\n      missingTab : 'Tab cannot be found',\n      noContent  : 'The tab you specified is missing a content url.',\n      path       : 'History enabled, but no path was specified',\n      recursion  : 'Max recursive depth reached',\n      state      : 'The state library has not been initialized'\n    },\n\n    metadata : {\n      tab    : 'tab',\n      loaded : 'loaded',\n      promise: 'promise'\n    },\n\n    className   : {\n      loading : 'loading',\n      active  : 'active'\n    },\n\n    selector    : {\n      tabs : '.ui.tab'\n    }\n\n  };\n\n})( jQuery, window , document );\n","/*  ******************************\n  Module - Video\n  Author: Jack Lukic\n\n  This is a video playlist and video embed plugin which helps\n  provide helpers for adding embed code for vimeo and youtube and\n  abstracting event handlers for each library\n\n******************************  */\n\n;(function ($, window, document, undefined) {\n\n$.fn.video = function(parameters) {\n\n  var\n    $allModules     = $(this),\n\n    moduleSelector  = $allModules.selector || '',\n\n    time            = new Date().getTime(),\n    performance     = [],\n\n    query           = arguments[0],\n    methodInvoked   = (typeof query == 'string'),\n    queryArguments  = [].slice.call(arguments, 1),\n\n    returnedValue\n  ;\n\n  $allModules\n    .each(function() {\n      var\n        settings        = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.video.settings, parameters)\n          : $.extend({}, $.fn.video.settings),\n\n        selector        = settings.selector,\n        className       = settings.className,\n        error           = settings.error,\n        metadata        = settings.metadata,\n        namespace       = settings.namespace,\n\n        eventNamespace  = '.' + namespace,\n        moduleNamespace = 'module-' + namespace,\n\n        $module         = $(this),\n        $placeholder    = $module.find(selector.placeholder),\n        $playButton     = $module.find(selector.playButton),\n        $embed          = $module.find(selector.embed),\n\n        element         = this,\n        instance        = $module.data(moduleNamespace),\n        module\n      ;\n\n      module = {\n\n        initialize: function() {\n          module.debug('Initializing video');\n          $placeholder\n            .on('click' + eventNamespace, module.play)\n          ;\n          $playButton\n            .on('click' + eventNamespace, module.play)\n          ;\n          module.instantiate();\n        },\n\n        instantiate: function() {\n          module.verbose('Storing instance of module', module);\n          instance = module;\n          $module\n            .data(moduleNamespace, module)\n          ;\n        },\n\n        destroy: function() {\n          module.verbose('Destroying previous instance of video');\n          $module\n            .removeData(moduleNamespace)\n            .off(eventNamespace)\n          ;\n          $placeholder\n            .off(eventNamespace)\n          ;\n          $playButton\n            .off(eventNamespace)\n          ;\n        },\n\n        // sets new video\n        change: function(source, id, url) {\n          module.debug('Changing video to ', source, id, url);\n          $module\n            .data(metadata.source, source)\n            .data(metadata.id, id)\n            .data(metadata.url, url)\n          ;\n          settings.onChange();\n        },\n\n        // clears video embed\n        reset: function() {\n          module.debug('Clearing video embed and showing placeholder');\n          $module\n            .removeClass(className.active)\n          ;\n          $embed\n            .html(' ')\n          ;\n          $placeholder\n            .show()\n          ;\n          settings.onReset();\n        },\n\n        // plays current video\n        play: function() {\n          module.debug('Playing video');\n          var\n            source = $module.data(metadata.source) || false,\n            url    = $module.data(metadata.url)    || false,\n            id     = $module.data(metadata.id)     || false\n          ;\n          $embed\n            .html( module.generate.html(source, id, url) )\n          ;\n          $module\n            .addClass(className.active)\n          ;\n          settings.onPlay();\n        },\n\n        generate: {\n          // generates iframe html\n          html: function(source, id, url) {\n            module.debug('Generating embed html');\n            var\n              width = (settings.width == 'auto')\n                ? $module.width()\n                : settings.width,\n              height = (settings.height == 'auto')\n                ? $module.height()\n                : settings.height,\n              html\n            ;\n            if(source && id) {\n              if(source == 'vimeo') {\n                html = ''\n                  + '<iframe src=\"http://player.vimeo.com/video/' + id + '?=' + module.generate.url(source) + '\"'\n                  + ' width=\"' + width + '\" height=\"' + height + '\"'\n                  + ' frameborder=\"0\" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>'\n                ;\n              }\n              else if(source == 'youtube') {\n                html = ''\n                  + '<iframe src=\"http://www.youtube.com/embed/' + id + '?=' + module.generate.url(source) + '\"'\n                  + ' width=\"' + width + '\" height=\"' + height + '\"'\n                  + ' frameborder=\"0\" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>'\n                ;\n              }\n            }\n            else if(url) {\n              html = ''\n                + '<iframe src=\"' + url + '\"'\n                + ' width=\"' + width + '\" height=\"' + height + '\"'\n                + ' frameborder=\"0\" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>'\n              ;\n            }\n            else {\n              module.error(error.noVideo);\n            }\n            return html;\n          },\n\n          // generate url parameters\n          url: function(source) {\n            var\n              api      = (settings.api)\n                ? 1\n                : 0,\n              autoplay = (settings.autoplay)\n                ? 1\n                : 0,\n              hd       = (settings.hd)\n                ? 1\n                : 0,\n              showUI   = (settings.showUI)\n                ? 1\n                : 0,\n              // opposite used for some params\n              hideUI   = !(settings.showUI)\n                ? 1\n                : 0,\n              url = ''\n            ;\n            if(source == 'vimeo') {\n              url = ''\n                +      'api='      + api\n                + '&amp;title='    + showUI\n                + '&amp;byline='   + showUI\n                + '&amp;portrait=' + showUI\n                + '&amp;autoplay=' + autoplay\n              ;\n              if(settings.color) {\n                url += '&amp;color=' + settings.color;\n              }\n            }\n            if(source == 'ustream') {\n              url = ''\n                + 'autoplay=' + autoplay\n              ;\n              if(settings.color) {\n                url += '&amp;color=' + settings.color;\n              }\n            }\n            else if(source == 'youtube') {\n              url = ''\n                +      'enablejsapi=' + api\n                + '&amp;autoplay='    + autoplay\n                + '&amp;autohide='    + hideUI\n                + '&amp;hq='          + hd\n                + '&amp;modestbranding=1'\n              ;\n              if(settings.color) {\n                url += '&amp;color=' + settings.color;\n              }\n            }\n            return url;\n          }\n        },\n\n        setting: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            settings[name] = value;\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n          module.error.apply(console, arguments);\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Element'        : element,\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 100);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if($allModules.size() > 1) {\n              title += ' ' + '(' + $allModules.size() + ')';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && instance !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( instance[camelCaseValue] ) && (depth != maxDepth) ) {\n                instance = instance[camelCaseValue];\n              }\n              else if( instance[camelCaseValue] !== undefined ) {\n                found = instance[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( instance[value] ) && (depth != maxDepth) ) {\n                instance = instance[value];\n              }\n              else if( instance[value] !== undefined ) {\n                found = instance[value];\n                return false;\n              }\n              else {\n                module.error(error.method, query);\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          module.destroy();\n        }\n        module.initialize();\n      }\n    })\n  ;\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.video.settings = {\n\n  name        : 'Video',\n  namespace   : 'video',\n\n  debug       : true,\n  verbose     : true,\n  performance : true,\n\n  metadata    : {\n    source : 'source',\n    id     : 'id',\n    url    : 'url'\n  },\n\n  onPlay   : function(){},\n  onReset  : function(){},\n  onChange : function(){},\n\n  // callbacks not coded yet (needs to use jsapi)\n  onPause  : function() {},\n  onStop   : function() {},\n\n  width    : 'auto',\n  height   : 'auto',\n\n  autoplay : false,\n  color    : '#442359',\n  hd       : true,\n  showUI   : false,\n  api      : true,\n\n  error      : {\n    noVideo     : 'No video specified',\n    method      : 'The method you called is not defined'\n  },\n\n  className   : {\n    active      : 'active'\n  },\n\n  selector    : {\n    embed       : '.embed',\n    placeholder : '.placeholder',\n    playButton  : '.play'\n  }\n};\n\n\n})( jQuery, window , document );\n"]}